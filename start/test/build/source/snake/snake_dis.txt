
/home/hsa/x86-code/start/test/build/source/snake/snake.elf:     file format elf32-i386
/home/hsa/x86-code/start/test/build/source/snake/snake.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x84000000

Program Header:
    LOAD off    0x00001000 vaddr 0x84000000 paddr 0x84000000 align 2**12
         filesz 0x0000638c memsz 0x00006418 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000558f  84000000  84000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000401  840055a0  840055a0  000065a0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  840059c0  840059c0  000069c0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000078  840063a0  840063a0  0000738c  2**5
                  ALLOC
  4 .debug_line   00003d2d  00000000  00000000  0000738c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_line_str 000010b2  00000000  00000000  0000b0b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0001bb98  00000000  00000000  0000c16b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 0000633e  00000000  00000000  00027d03  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_aranges 00000630  00000000  00000000  0002e048  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00001379  00000000  00000000  0002e678  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  0002f9f1  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001558  00000000  00000000  0002fa30  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00030f88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
8400004e l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 main.c
840063a0 l     O .bss	00000004 row_max
840063a4 l     O .bss	00000004 col_max
840063a8 l     O .bss	00000004 food
840063ac l     O .bss	0000000c snake
8400043b l     F .text	00000052 is_hit_itself
8400048d l     F .text	00000051 is_hit_wall
840004de l     F .text	00000037 is_hit_food
84000515 l     F .text	00000030 show_char
84000545 l     F .text	0000001f show_string
8400064f l     F .text	00000051 add_head
840006a0 l     F .text	00000071 remove_tail
84000711 l     F .text	00000070 create_snake
84000781 l     F .text	00000103 create_food
84000884 l     F .text	00000024 free_food
840008a8 l     F .text	0000015f move_forward
84000a07 l     F .text	0000007a show_welcome
84000a81 l     F .text	0000002c begin_game
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
84000f0c l     F .text	000000ad std
84000fb9 l     F .text	0000001b stdin_init
84000fd4 l     F .text	0000001b stdout_init
84000fef l     F .text	0000001b stderr_init
840063b8 l     O .bss	00000004 __sfp_recursive_mutex
840063bc l     O .bss	00000004 __sinit_recursive_mutex
840012b2 l     F .text	0000000a __fp_lock
840012bc l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
840059c0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
840019a2 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 mlock.c
84006408 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __call_atexit.c
8400640c l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
84002f79 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fputwc.c
84003ed7 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
840045ad l     F .text	0000000a __get_global_locale
840045b7 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 mbtowc_r.c
84004653 l     F .text	0000000a __get_global_locale
8400465d l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8400477d l       .text	00000000 L20
84004734 l       .text	00000000 L5
8400477a l       .text	00000000 L15
84004740 l       .text	00000000 L8
84004761 l       .text	00000000 L9
84004770 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
84005137 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8400540a l     F .text	0000000a __get_global_locale
84005414 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
84005514 l     F .text	0000000a __get_global_locale
8400551e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
8400456d g     F .text	00000040 _isatty_r
84003a32 g     F .text	00000037 cleanup_glue
84002cd7 g     F .text	00000046 _lseek_r
84000152 g     F .text	0000001b yield
84000308 g     F .text	00000033 ioctl
84002518 g     F .text	00000035 printf
8400541e g     F .text	00000077 _wcrtomb_r
840028d3 g     F .text	0000004a __sseek
84001201 g     F .text	00000099 __sinit
84003c49 g     F .text	00000112 __swbuf_r
840045c1 g     F .text	0000005f _setlocale_r
8400100a g     F .text	0000006f __sfmoreglue
840024e5 g     F .text	00000006 __malloc_unlock
840047d0 g       .text	00000000 memmove
840011e7 g     F .text	0000001a _cleanup
8400408c g     F .text	00000043 _fstat_r
84006410 g     O .bss	00000004 errno
84003c2c g     F .text	0000001d __srget
8400286e g     F .text	0000000a __seofread
84000125 g     F .text	0000002d execve
840000c8 g     F .text	0000001b getpid
84002c01 g     F .text	00000067 _getc_r
84002c68 g     F .text	0000006f getc
84004788 g       .text	00000000 memcpy
8400261e g     F .text	0000020c setvbuf
840011c6 g     F .text	00000021 _cleanup_r
84001969 g     F .text	0000001c malloc
840024eb g     F .text	0000002d _printf_r
840002a5 g     F .text	00000021 isatty
8400195f g     F .text	0000000a __getreent
840063c0 g     O .bss	00000004 __malloc_top_pad
840063a0 g       .bss	00000000 __bss_start__
840040cf g     F .text	0000049e __sfvwrite_r
840025de g     F .text	00000040 _sbrk_r
840003a6 g     F .text	00000040 readdir
840039ec g     F .text	00000046 _read_r
84002add g     F .text	00000107 _fclose_r
84000ed3 g     F .text	00000039 fflush
840063c4 g     O .bss	00000004 __malloc_max_sbrked_mem
84000251 g     F .text	0000002d lseek
84005638 g     O .rodata	00000004 _global_impure_ptr
8400485d g     F .text	000008da _realloc_r
84003fed g     F .text	00000057 _fputwc_r
840012c6 g     F .text	00000024 __fp_lock_all
84003a69 g     F .text	00000160 _reclaim_reent
84000203 g     F .text	0000002d write
8400027e g     F .text	00000027 fstat
84002fdf g     F .text	000000a8 __sfputs_r
8400129a g     F .text	00000006 __sfp_lock_acquire
840046f0 g       .text	00000000 memchr
84006418 g       .bss	00000000 __bss_end__
8400130e g     F .text	000003db _free_r
8400016d g     F .text	00000021 wait
84005720 g     O .rodata	00000180 _ctype_b
84004620 g     F .text	00000014 __locale_mb_cur_max
84003bc9 g     F .text	00000063 __srget_r
84002988 g     F .text	00000115 __call_exitprocs
8400620c g     O .data	00000004 __malloc_sbrk_base
84000000 g       .text	00000000 _start
84002575 g     F .text	00000069 rand
840001d6 g     F .text	0000002d read
84000582 g     F .text	000000cd create_map
84000564 g     F .text	0000001e clear_map
840063e0 g     O .bss	00000028 __malloc_current_mallinfo
8400041a g     F .text	00000021 unlink
840024eb g     F .text	0000002d _iprintf_r
84002a9d g     F .text	00000040 _close_r
8400010a g     F .text	0000001b fork
84003d7c g     F .text	0000015b __swsetup_r
84001079 g     F .text	0000014d __sfp
84005e00 g     O .data	00000408 __malloc_av_
840012ac g     F .text	00000006 __sinit_lock_release
8400282a g     F .text	00000044 __sread
840024df g     F .text	00000006 __malloc_lock
840002c6 g     F .text	00000021 sbrk
84000e7b g     F .text	00000058 _fflush_r
84000010 g     F .text	0000003e cstart
84002457 g       .text	00000000 memset
84000aad g     F .text	00000164 main
840063c8 g     O .bss	00000004 __malloc_max_total_mem
84003d5b g     F .text	00000021 __swbuf
8400254d g     F .text	00000028 srand
8400291d g     F .text	00000025 __sclose
84002be4 g     F .text	0000001d fclose
8400193a g     F .text	00000025 getchar
84001c35 g     F .text	00000822 _malloc_r
8400554c g     F .text	00000043 __ascii_wctomb
8400033b g     F .text	0000006b opendir
8400184a g     F .text	00000068 _fwalk
84004667 g     F .text	0000002a _mbtowc_r
840016e9 g     F .text	00000161 _malloc_trim_r
84005365 g     F .text	000000a5 strcmp
84003087 g     F .text	00000025 vfiprintf
840002e7 g     F .text	00000021 dup
84002518 g     F .text	00000035 iprintf
84006414 g     O .bss	00000004 _PathLocale
84002942 g     F .text	00000046 _write_r
84004634 g     F .text	0000001f setlocale
84003402 g     F .text	0000019b _printf_common
84005de4 g     O .data	00000004 _impure_ptr
84000c55 g     F .text	00000226 __sflush_r
84005164 g     F .text	00000201 __srefill_r
84004691 g     F .text	00000058 __ascii_mbtowc
840012ea g     F .text	00000024 __fp_unlock_all
840000e3 g     F .text	00000027 print_msg
84002e0a g     F .text	00000093 __swhatbuf_r
8400191d g     F .text	0000001d _getchar_r
84003f3d g     F .text	000000b0 __fputwc
84002878 g     F .text	0000005b __swrite
84006208 g     O .data	00000004 __malloc_trim_threshold
84000c11 g     F .text	00000044 exit
840030ac g     F .text	00000356 _vfiprintf_r
840018b2 g     F .text	0000006b _fwalk_reent
840012a0 g     F .text	00000006 __sfp_lock_release
840058a0 g     O .rodata	00000101 _ctype_
8400018e g     F .text	00000021 _exit
84002d1d g     F .text	000000ed __smakebuf_r
8400359d g     F .text	0000044f _printf_i
840001af g     F .text	00000027 open
84002e9d g     F .text	000000dc __sprint_r
840003e6 g     F .text	00000034 closedir
84005528 g     F .text	00000024 _wctomb_r
840030ac g     F .text	00000356 _vfprintf_r
8400009a g     F .text	0000002e msleep
84005495 g     F .text	0000007f wcrtomb
84000230 g     F .text	00000021 close
84006220 g     O .data	0000016c __global_locale
84003087 g     F .text	00000025 vfprintf
84004044 g     F .text	00000048 fputwc
84001985 g     F .text	0000001d free
840012a6 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

84000000 <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
84000000:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
84000003:	8e d8                	mov    %eax,%ds
    mov %ax, %es
84000005:	8e c0                	mov    %eax,%es
    mov %ax, %fs
84000007:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
84000009:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
8400000b:	e9 00 00 00 00       	jmp    84000010 <cstart>

84000010 <cstart>:
extern uint8_t __bss_start__[], __bss_end__[];

/**
 * @brief 应用的初始化，C部分
 */
void cstart (int argc, char ** argv) {
84000010:	55                   	push   %ebp
84000011:	89 e5                	mov    %esp,%ebp
84000013:	83 ec 18             	sub    $0x18,%esp
    // 清空bss区，注意这是必须的！！！
    // 像newlib库中有些代码就依赖于此，未清空时数据未知，导致调用sbrk时申请很大内存空间
    uint8_t * start = __bss_start__;
84000016:	c7 45 f4 a0 63 00 84 	movl   $0x840063a0,-0xc(%ebp)
    while (start < __bss_end__) {
8400001d:	eb 0c                	jmp    8400002b <cstart+0x1b>
        *start++ = 0;
8400001f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000022:	8d 50 01             	lea    0x1(%eax),%edx
84000025:	89 55 f4             	mov    %edx,-0xc(%ebp)
84000028:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8400002b:	81 7d f4 18 64 00 84 	cmpl   $0x84006418,-0xc(%ebp)
84000032:	72 eb                	jb     8400001f <cstart+0xf>
    }

    exit(main(argc, argv));
84000034:	83 ec 08             	sub    $0x8,%esp
84000037:	ff 75 0c             	push   0xc(%ebp)
8400003a:	ff 75 08             	push   0x8(%ebp)
8400003d:	e8 6b 0a 00 00       	call   84000aad <main>
84000042:	83 c4 10             	add    $0x10,%esp
84000045:	83 ec 0c             	sub    $0xc,%esp
84000048:	50                   	push   %eax
84000049:	e8 c3 0b 00 00       	call   84000c11 <exit>

8400004e <sys_call>:
#include <string.h>

/**
 * 执行系统调用
 */
static inline int sys_call (syscall_args_t * args) {
8400004e:	55                   	push   %ebp
8400004f:	89 e5                	mov    %esp,%ebp
84000051:	57                   	push   %edi
84000052:	56                   	push   %esi
84000053:	53                   	push   %ebx
84000054:	83 ec 10             	sub    $0x10,%esp
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0};  // 使用特权级0
84000057:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8400005e:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
            "push %[arg1]\n\t"
            "push %[arg0]\n\t"
            "push %[id]\n\t"
            "lcalll *(%[gate])\n\n"
            :"=a"(ret)
            :[arg3]"r"(args->arg3), [arg2]"r"(args->arg2), [arg1]"r"(args->arg1),
84000065:	8b 45 08             	mov    0x8(%ebp),%eax
84000068:	8b 40 10             	mov    0x10(%eax),%eax
8400006b:	8b 55 08             	mov    0x8(%ebp),%edx
8400006e:	8b 52 0c             	mov    0xc(%edx),%edx
84000071:	8b 4d 08             	mov    0x8(%ebp),%ecx
84000074:	8b 49 08             	mov    0x8(%ecx),%ecx
    [arg0]"r"(args->arg0), [id]"r"(args->id),
84000077:	8b 5d 08             	mov    0x8(%ebp),%ebx
8400007a:	8b 5b 04             	mov    0x4(%ebx),%ebx
8400007d:	8b 75 08             	mov    0x8(%ebp),%esi
84000080:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
84000082:	8d 7d e8             	lea    -0x18(%ebp),%edi
84000085:	50                   	push   %eax
84000086:	52                   	push   %edx
84000087:	51                   	push   %ecx
84000088:	53                   	push   %ebx
84000089:	56                   	push   %esi
8400008a:	ff 1f                	lcall  *(%edi)
8400008c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    [gate]"r"(sys_gate_addr));
    return ret;
8400008f:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
84000092:	83 c4 10             	add    $0x10,%esp
84000095:	5b                   	pop    %ebx
84000096:	5e                   	pop    %esi
84000097:	5f                   	pop    %edi
84000098:	5d                   	pop    %ebp
84000099:	c3                   	ret    

8400009a <msleep>:

int msleep (int ms) {
8400009a:	55                   	push   %ebp
8400009b:	89 e5                	mov    %esp,%ebp
8400009d:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) {
840000a0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
840000a4:	7f 07                	jg     840000ad <msleep+0x13>
        return 0;
840000a6:	b8 00 00 00 00       	mov    $0x0,%eax
840000ab:	eb 19                	jmp    840000c6 <msleep+0x2c>
    }

    syscall_args_t args;
    args.id = SYS_msleep;
840000ad:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
840000b4:	8b 45 08             	mov    0x8(%ebp),%eax
840000b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
840000ba:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000bd:	50                   	push   %eax
840000be:	e8 8b ff ff ff       	call   8400004e <sys_call>
840000c3:	83 c4 04             	add    $0x4,%esp
}
840000c6:	c9                   	leave  
840000c7:	c3                   	ret    

840000c8 <getpid>:

int getpid() {
840000c8:	55                   	push   %ebp
840000c9:	89 e5                	mov    %esp,%ebp
840000cb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
840000ce:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
840000d5:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000d8:	50                   	push   %eax
840000d9:	e8 70 ff ff ff       	call   8400004e <sys_call>
840000de:	83 c4 04             	add    $0x4,%esp
}
840000e1:	c9                   	leave  
840000e2:	c3                   	ret    

840000e3 <print_msg>:

int print_msg(char * fmt, int arg) {
840000e3:	55                   	push   %ebp
840000e4:	89 e5                	mov    %esp,%ebp
840000e6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
840000e9:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
840000f0:	8b 45 08             	mov    0x8(%ebp),%eax
840000f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
840000f6:	8b 45 0c             	mov    0xc(%ebp),%eax
840000f9:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
840000fc:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000ff:	50                   	push   %eax
84000100:	e8 49 ff ff ff       	call   8400004e <sys_call>
84000105:	83 c4 04             	add    $0x4,%esp
}
84000108:	c9                   	leave  
84000109:	c3                   	ret    

8400010a <fork>:

int fork() {
8400010a:	55                   	push   %ebp
8400010b:	89 e5                	mov    %esp,%ebp
8400010d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
84000110:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
84000117:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400011a:	50                   	push   %eax
8400011b:	e8 2e ff ff ff       	call   8400004e <sys_call>
84000120:	83 c4 04             	add    $0x4,%esp
}
84000123:	c9                   	leave  
84000124:	c3                   	ret    

84000125 <execve>:

int execve(const char *name, char * const *argv, char * const *env) {
84000125:	55                   	push   %ebp
84000126:	89 e5                	mov    %esp,%ebp
84000128:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
8400012b:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
84000132:	8b 45 08             	mov    0x8(%ebp),%eax
84000135:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
84000138:	8b 45 0c             	mov    0xc(%ebp),%eax
8400013b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8400013e:	8b 45 10             	mov    0x10(%ebp),%eax
84000141:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
84000144:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000147:	50                   	push   %eax
84000148:	e8 01 ff ff ff       	call   8400004e <sys_call>
8400014d:	83 c4 04             	add    $0x4,%esp
}
84000150:	c9                   	leave  
84000151:	c3                   	ret    

84000152 <yield>:

int yield (void) {
84000152:	55                   	push   %ebp
84000153:	89 e5                	mov    %esp,%ebp
84000155:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
84000158:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
8400015f:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000162:	50                   	push   %eax
84000163:	e8 e6 fe ff ff       	call   8400004e <sys_call>
84000168:	83 c4 04             	add    $0x4,%esp
}
8400016b:	c9                   	leave  
8400016c:	c3                   	ret    

8400016d <wait>:

int wait(int* status) {
8400016d:	55                   	push   %ebp
8400016e:	89 e5                	mov    %esp,%ebp
84000170:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
84000173:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
8400017a:	8b 45 08             	mov    0x8(%ebp),%eax
8400017d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
84000180:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000183:	50                   	push   %eax
84000184:	e8 c5 fe ff ff       	call   8400004e <sys_call>
84000189:	83 c4 04             	add    $0x4,%esp
}
8400018c:	c9                   	leave  
8400018d:	c3                   	ret    

8400018e <_exit>:

void _exit(int status) {
8400018e:	55                   	push   %ebp
8400018f:	89 e5                	mov    %esp,%ebp
84000191:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
84000194:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = (int)status;
8400019b:	8b 45 08             	mov    0x8(%ebp),%eax
8400019e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
840001a1:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001a4:	50                   	push   %eax
840001a5:	e8 a4 fe ff ff       	call   8400004e <sys_call>
840001aa:	83 c4 04             	add    $0x4,%esp
    for (;;) {}
840001ad:	eb fe                	jmp    840001ad <_exit+0x1f>

840001af <open>:
}

int open(const char *name, int flags, ...) {
840001af:	55                   	push   %ebp
840001b0:	89 e5                	mov    %esp,%ebp
840001b2:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
840001b5:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
840001bc:	8b 45 08             	mov    0x8(%ebp),%eax
840001bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
840001c2:	8b 45 0c             	mov    0xc(%ebp),%eax
840001c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
840001c8:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001cb:	50                   	push   %eax
840001cc:	e8 7d fe ff ff       	call   8400004e <sys_call>
840001d1:	83 c4 04             	add    $0x4,%esp
}
840001d4:	c9                   	leave  
840001d5:	c3                   	ret    

840001d6 <read>:

int read(int file, char *ptr, int len) {
840001d6:	55                   	push   %ebp
840001d7:	89 e5                	mov    %esp,%ebp
840001d9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
840001dc:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
840001e3:	8b 45 08             	mov    0x8(%ebp),%eax
840001e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
840001e9:	8b 45 0c             	mov    0xc(%ebp),%eax
840001ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
840001ef:	8b 45 10             	mov    0x10(%ebp),%eax
840001f2:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
840001f5:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001f8:	50                   	push   %eax
840001f9:	e8 50 fe ff ff       	call   8400004e <sys_call>
840001fe:	83 c4 04             	add    $0x4,%esp
}
84000201:	c9                   	leave  
84000202:	c3                   	ret    

84000203 <write>:

int write(int file, char *ptr, int len) {
84000203:	55                   	push   %ebp
84000204:	89 e5                	mov    %esp,%ebp
84000206:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
84000209:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
84000210:	8b 45 08             	mov    0x8(%ebp),%eax
84000213:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
84000216:	8b 45 0c             	mov    0xc(%ebp),%eax
84000219:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8400021c:	8b 45 10             	mov    0x10(%ebp),%eax
8400021f:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
84000222:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000225:	50                   	push   %eax
84000226:	e8 23 fe ff ff       	call   8400004e <sys_call>
8400022b:	83 c4 04             	add    $0x4,%esp
}
8400022e:	c9                   	leave  
8400022f:	c3                   	ret    

84000230 <close>:

int close(int file) {
84000230:	55                   	push   %ebp
84000231:	89 e5                	mov    %esp,%ebp
84000233:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
84000236:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
8400023d:	8b 45 08             	mov    0x8(%ebp),%eax
84000240:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
84000243:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000246:	50                   	push   %eax
84000247:	e8 02 fe ff ff       	call   8400004e <sys_call>
8400024c:	83 c4 04             	add    $0x4,%esp
}
8400024f:	c9                   	leave  
84000250:	c3                   	ret    

84000251 <lseek>:

int lseek(int file, int ptr, int dir) {
84000251:	55                   	push   %ebp
84000252:	89 e5                	mov    %esp,%ebp
84000254:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
84000257:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
8400025e:	8b 45 08             	mov    0x8(%ebp),%eax
84000261:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
84000264:	8b 45 0c             	mov    0xc(%ebp),%eax
84000267:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
8400026a:	8b 45 10             	mov    0x10(%ebp),%eax
8400026d:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
84000270:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000273:	50                   	push   %eax
84000274:	e8 d5 fd ff ff       	call   8400004e <sys_call>
84000279:	83 c4 04             	add    $0x4,%esp
}
8400027c:	c9                   	leave  
8400027d:	c3                   	ret    

8400027e <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st) {
8400027e:	55                   	push   %ebp
8400027f:	89 e5                	mov    %esp,%ebp
84000281:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
84000284:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
8400028b:	8b 45 08             	mov    0x8(%ebp),%eax
8400028e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
84000291:	8b 45 0c             	mov    0xc(%ebp),%eax
84000294:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
84000297:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400029a:	50                   	push   %eax
8400029b:	e8 ae fd ff ff       	call   8400004e <sys_call>
840002a0:	83 c4 04             	add    $0x4,%esp
}
840002a3:	c9                   	leave  
840002a4:	c3                   	ret    

840002a5 <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file) {
840002a5:	55                   	push   %ebp
840002a6:	89 e5                	mov    %esp,%ebp
840002a8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
840002ab:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
840002b2:	8b 45 08             	mov    0x8(%ebp),%eax
840002b5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
840002b8:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002bb:	50                   	push   %eax
840002bc:	e8 8d fd ff ff       	call   8400004e <sys_call>
840002c1:	83 c4 04             	add    $0x4,%esp
}
840002c4:	c9                   	leave  
840002c5:	c3                   	ret    

840002c6 <sbrk>:

void * sbrk(ptrdiff_t incr) {
840002c6:	55                   	push   %ebp
840002c7:	89 e5                	mov    %esp,%ebp
840002c9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
840002cc:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
840002d3:	8b 45 08             	mov    0x8(%ebp),%eax
840002d6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
840002d9:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002dc:	50                   	push   %eax
840002dd:	e8 6c fd ff ff       	call   8400004e <sys_call>
840002e2:	83 c4 04             	add    $0x4,%esp
}
840002e5:	c9                   	leave  
840002e6:	c3                   	ret    

840002e7 <dup>:

int dup (int file) {
840002e7:	55                   	push   %ebp
840002e8:	89 e5                	mov    %esp,%ebp
840002ea:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
840002ed:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
840002f4:	8b 45 08             	mov    0x8(%ebp),%eax
840002f7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
840002fa:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002fd:	50                   	push   %eax
840002fe:	e8 4b fd ff ff       	call   8400004e <sys_call>
84000303:	83 c4 04             	add    $0x4,%esp
}
84000306:	c9                   	leave  
84000307:	c3                   	ret    

84000308 <ioctl>:

int ioctl(int fd, int cmd, int arg0, int arg1) {
84000308:	55                   	push   %ebp
84000309:	89 e5                	mov    %esp,%ebp
8400030b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
8400030e:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = fd;
84000315:	8b 45 08             	mov    0x8(%ebp),%eax
84000318:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = cmd;
8400031b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400031e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = arg0;
84000321:	8b 45 10             	mov    0x10(%ebp),%eax
84000324:	89 45 f8             	mov    %eax,-0x8(%ebp)
    args.arg3 = arg1;
84000327:	8b 45 14             	mov    0x14(%ebp),%eax
8400032a:	89 45 fc             	mov    %eax,-0x4(%ebp)
    return sys_call(&args);
8400032d:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000330:	50                   	push   %eax
84000331:	e8 18 fd ff ff       	call   8400004e <sys_call>
84000336:	83 c4 04             	add    $0x4,%esp
}
84000339:	c9                   	leave  
8400033a:	c3                   	ret    

8400033b <opendir>:

DIR * opendir(const char * name) {
8400033b:	55                   	push   %ebp
8400033c:	89 e5                	mov    %esp,%ebp
8400033e:	83 ec 28             	sub    $0x28,%esp
    DIR * dir = (DIR *)malloc(sizeof(DIR));
84000341:	83 ec 0c             	sub    $0xc,%esp
84000344:	68 10 01 00 00       	push   $0x110
84000349:	e8 1b 16 00 00       	call   84001969 <malloc>
8400034e:	83 c4 10             	add    $0x10,%esp
84000351:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR *)0) {
84000354:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000358:	75 07                	jne    84000361 <opendir+0x26>
        return (DIR *)0;
8400035a:	b8 00 00 00 00       	mov    $0x0,%eax
8400035f:	eb 43                	jmp    840003a4 <opendir+0x69>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
84000361:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)name;
84000368:	8b 45 08             	mov    0x8(%ebp),%eax
8400036b:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
8400036e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000371:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    int err = sys_call(&args);
84000374:	83 ec 0c             	sub    $0xc,%esp
84000377:	8d 45 dc             	lea    -0x24(%ebp),%eax
8400037a:	50                   	push   %eax
8400037b:	e8 ce fc ff ff       	call   8400004e <sys_call>
84000380:	83 c4 10             	add    $0x10,%esp
84000383:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (err < 0) {
84000386:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8400038a:	79 15                	jns    840003a1 <opendir+0x66>
        free(dir);
8400038c:	83 ec 0c             	sub    $0xc,%esp
8400038f:	ff 75 f4             	push   -0xc(%ebp)
84000392:	e8 ee 15 00 00       	call   84001985 <free>
84000397:	83 c4 10             	add    $0x10,%esp
        return (DIR *)0;
8400039a:	b8 00 00 00 00       	mov    $0x0,%eax
8400039f:	eb 03                	jmp    840003a4 <opendir+0x69>
    }
    return dir;
840003a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
840003a4:	c9                   	leave  
840003a5:	c3                   	ret    

840003a6 <readdir>:

struct dirent* readdir(DIR* dir) {
840003a6:	55                   	push   %ebp
840003a7:	89 e5                	mov    %esp,%ebp
840003a9:	83 ec 20             	sub    $0x20,%esp

    syscall_args_t args;
    args.id = SYS_readdir;
840003ac:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
840003b3:	8b 45 08             	mov    0x8(%ebp),%eax
840003b6:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&dir->dirent;
840003b9:	8b 45 08             	mov    0x8(%ebp),%eax
840003bc:	83 c0 04             	add    $0x4,%eax
840003bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    int err = sys_call(&args);
840003c2:	8d 45 e8             	lea    -0x18(%ebp),%eax
840003c5:	50                   	push   %eax
840003c6:	e8 83 fc ff ff       	call   8400004e <sys_call>
840003cb:	83 c4 04             	add    $0x4,%esp
840003ce:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
840003d1:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
840003d5:	79 07                	jns    840003de <readdir+0x38>
        return (struct dirent *)0;
840003d7:	b8 00 00 00 00       	mov    $0x0,%eax
840003dc:	eb 06                	jmp    840003e4 <readdir+0x3e>
    }
    return &dir->dirent;
840003de:	8b 45 08             	mov    0x8(%ebp),%eax
840003e1:	83 c0 04             	add    $0x4,%eax
}
840003e4:	c9                   	leave  
840003e5:	c3                   	ret    

840003e6 <closedir>:

int closedir(DIR *dir) {
840003e6:	55                   	push   %ebp
840003e7:	89 e5                	mov    %esp,%ebp
840003e9:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
840003ec:	c7 45 e4 3e 00 00 00 	movl   $0x3e,-0x1c(%ebp)
    args.arg0 = (int)dir;
840003f3:	8b 45 08             	mov    0x8(%ebp),%eax
840003f6:	89 45 e8             	mov    %eax,-0x18(%ebp)
    sys_call(&args);
840003f9:	8d 45 e4             	lea    -0x1c(%ebp),%eax
840003fc:	50                   	push   %eax
840003fd:	e8 4c fc ff ff       	call   8400004e <sys_call>
84000402:	83 c4 04             	add    $0x4,%esp

    free(dir);
84000405:	83 ec 0c             	sub    $0xc,%esp
84000408:	ff 75 08             	push   0x8(%ebp)
8400040b:	e8 75 15 00 00       	call   84001985 <free>
84000410:	83 c4 10             	add    $0x10,%esp
    return 0;
84000413:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000418:	c9                   	leave  
84000419:	c3                   	ret    

8400041a <unlink>:

int unlink(const char *path) {
8400041a:	55                   	push   %ebp
8400041b:	89 e5                	mov    %esp,%ebp
8400041d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
84000420:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)path;
84000427:	8b 45 08             	mov    0x8(%ebp),%eax
8400042a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
8400042d:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000430:	50                   	push   %eax
84000431:	e8 18 fc ff ff       	call   8400004e <sys_call>
84000436:	83 c4 04             	add    $0x4,%esp
}
84000439:	c9                   	leave  
8400043a:	c3                   	ret    

8400043b <is_hit_itself>:
static snake_t snake;		// 目前只支持一条蛇

/**
 * 判断蛇是否咬到自己
 */
static int is_hit_itself (void) {
8400043b:	55                   	push   %ebp
8400043c:	89 e5                	mov    %esp,%ebp
8400043e:	83 ec 10             	sub    $0x10,%esp
	for (body_part_t * body = snake.head->next; body; body = body->next) {
84000441:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000446:	8b 40 08             	mov    0x8(%eax),%eax
84000449:	89 45 fc             	mov    %eax,-0x4(%ebp)
8400044c:	eb 32                	jmp    84000480 <is_hit_itself+0x45>
		if ((body->row == snake.head->row) && (body->col == snake.head->col)) {
8400044e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000451:	8b 10                	mov    (%eax),%edx
84000453:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000458:	8b 00                	mov    (%eax),%eax
8400045a:	39 c2                	cmp    %eax,%edx
8400045c:	75 19                	jne    84000477 <is_hit_itself+0x3c>
8400045e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000461:	8b 50 04             	mov    0x4(%eax),%edx
84000464:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000469:	8b 40 04             	mov    0x4(%eax),%eax
8400046c:	39 c2                	cmp    %eax,%edx
8400046e:	75 07                	jne    84000477 <is_hit_itself+0x3c>
			return 1;
84000470:	b8 01 00 00 00       	mov    $0x1,%eax
84000475:	eb 14                	jmp    8400048b <is_hit_itself+0x50>
	for (body_part_t * body = snake.head->next; body; body = body->next) {
84000477:	8b 45 fc             	mov    -0x4(%ebp),%eax
8400047a:	8b 40 08             	mov    0x8(%eax),%eax
8400047d:	89 45 fc             	mov    %eax,-0x4(%ebp)
84000480:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
84000484:	75 c8                	jne    8400044e <is_hit_itself+0x13>
		}
	}
	return 0;
84000486:	b8 00 00 00 00       	mov    $0x0,%eax
}
8400048b:	c9                   	leave  
8400048c:	c3                   	ret    

8400048d <is_hit_wall>:

/**
 * 判断是否碰到墙
 */
static int is_hit_wall (void) {
8400048d:	55                   	push   %ebp
8400048e:	89 e5                	mov    %esp,%ebp
	return ((snake.head->row <= 0) 
84000490:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000495:	8b 00                	mov    (%eax),%eax
			|| (snake.head->col <= 0))
			|| (snake.head->row >= row_max - 1) 
			|| (snake.head->col >= col_max - 1);
84000497:	85 c0                	test   %eax,%eax
84000499:	7e 35                	jle    840004d0 <is_hit_wall+0x43>
			|| (snake.head->col <= 0))
8400049b:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004a0:	8b 40 04             	mov    0x4(%eax),%eax
840004a3:	85 c0                	test   %eax,%eax
840004a5:	7e 29                	jle    840004d0 <is_hit_wall+0x43>
			|| (snake.head->row >= row_max - 1) 
840004a7:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004ac:	8b 00                	mov    (%eax),%eax
840004ae:	8b 15 a0 63 00 84    	mov    0x840063a0,%edx
840004b4:	83 ea 01             	sub    $0x1,%edx
840004b7:	39 d0                	cmp    %edx,%eax
840004b9:	7d 15                	jge    840004d0 <is_hit_wall+0x43>
			|| (snake.head->col >= col_max - 1);
840004bb:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004c0:	8b 40 04             	mov    0x4(%eax),%eax
840004c3:	8b 15 a4 63 00 84    	mov    0x840063a4,%edx
840004c9:	83 ea 01             	sub    $0x1,%edx
840004cc:	39 d0                	cmp    %edx,%eax
840004ce:	7c 07                	jl     840004d7 <is_hit_wall+0x4a>
840004d0:	b8 01 00 00 00       	mov    $0x1,%eax
840004d5:	eb 05                	jmp    840004dc <is_hit_wall+0x4f>
840004d7:	b8 00 00 00 00       	mov    $0x0,%eax
}
840004dc:	5d                   	pop    %ebp
840004dd:	c3                   	ret    

840004de <is_hit_food>:

/**
 * 判断是否吃到食物
 */
static int is_hit_food (void) {
840004de:	55                   	push   %ebp
840004df:	89 e5                	mov    %esp,%ebp
	return ((snake.head->row == food->row) && (snake.head->col == food->col));
840004e1:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004e6:	8b 10                	mov    (%eax),%edx
840004e8:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840004ed:	8b 00                	mov    (%eax),%eax
840004ef:	39 c2                	cmp    %eax,%edx
840004f1:	75 1b                	jne    8400050e <is_hit_food+0x30>
840004f3:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004f8:	8b 50 04             	mov    0x4(%eax),%edx
840004fb:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000500:	8b 40 04             	mov    0x4(%eax),%eax
84000503:	39 c2                	cmp    %eax,%edx
84000505:	75 07                	jne    8400050e <is_hit_food+0x30>
84000507:	b8 01 00 00 00       	mov    $0x1,%eax
8400050c:	eb 05                	jmp    84000513 <is_hit_food+0x35>
8400050e:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000513:	5d                   	pop    %ebp
84000514:	c3                   	ret    

84000515 <show_char>:

static inline void show_char(int row, int col, char c) {
84000515:	55                   	push   %ebp
84000516:	89 e5                	mov    %esp,%ebp
84000518:	83 ec 18             	sub    $0x18,%esp
8400051b:	8b 45 10             	mov    0x10(%ebp),%eax
8400051e:	88 45 f4             	mov    %al,-0xc(%ebp)
    printf("\x1b[%d;%dH%c\x1b[%d;%dH", row, col, c, row, col);
84000521:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
84000525:	83 ec 08             	sub    $0x8,%esp
84000528:	ff 75 0c             	push   0xc(%ebp)
8400052b:	ff 75 08             	push   0x8(%ebp)
8400052e:	50                   	push   %eax
8400052f:	ff 75 0c             	push   0xc(%ebp)
84000532:	ff 75 08             	push   0x8(%ebp)
84000535:	68 a0 55 00 84       	push   $0x840055a0
8400053a:	e8 d9 1f 00 00       	call   84002518 <iprintf>
8400053f:	83 c4 20             	add    $0x20,%esp
}
84000542:	90                   	nop
84000543:	c9                   	leave  
84000544:	c3                   	ret    

84000545 <show_string>:

static inline void show_string (int row, int col, char * str) {
84000545:	55                   	push   %ebp
84000546:	89 e5                	mov    %esp,%ebp
84000548:	83 ec 08             	sub    $0x8,%esp
    printf("\x1b[%d;%dH%s", row, col, str);
8400054b:	ff 75 10             	push   0x10(%ebp)
8400054e:	ff 75 0c             	push   0xc(%ebp)
84000551:	ff 75 08             	push   0x8(%ebp)
84000554:	68 b3 55 00 84       	push   $0x840055b3
84000559:	e8 ba 1f 00 00       	call   84002518 <iprintf>
8400055e:	83 c4 10             	add    $0x10,%esp
}
84000561:	90                   	nop
84000562:	c9                   	leave  
84000563:	c3                   	ret    

84000564 <clear_map>:

/**
 * 清空整个地图
 */
void clear_map (void) {
84000564:	55                   	push   %ebp
84000565:	89 e5                	mov    %esp,%ebp
84000567:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
8400056a:	83 ec 08             	sub    $0x8,%esp
8400056d:	68 be 55 00 84       	push   $0x840055be
84000572:	68 c3 55 00 84       	push   $0x840055c3
84000577:	e8 9c 1f 00 00       	call   84002518 <iprintf>
8400057c:	83 c4 10             	add    $0x10,%esp
}
8400057f:	90                   	nop
84000580:	c9                   	leave  
84000581:	c3                   	ret    

84000582 <create_map>:

/**
 * 创建地图
 */
void create_map(void) {
84000582:	55                   	push   %ebp
84000583:	89 e5                	mov    %esp,%ebp
84000585:	83 ec 18             	sub    $0x18,%esp
	clear_map();
84000588:	e8 d7 ff ff ff       	call   84000564 <clear_map>

    // 上下行
    for (int col = 1; col < col_max - 1; col++) {
8400058d:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
84000594:	eb 16                	jmp    840005ac <create_map+0x2a>
        show_char(0, col, '=');
84000596:	83 ec 04             	sub    $0x4,%esp
84000599:	6a 3d                	push   $0x3d
8400059b:	ff 75 f4             	push   -0xc(%ebp)
8400059e:	6a 00                	push   $0x0
840005a0:	e8 70 ff ff ff       	call   84000515 <show_char>
840005a5:	83 c4 10             	add    $0x10,%esp
    for (int col = 1; col < col_max - 1; col++) {
840005a8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
840005ac:	a1 a4 63 00 84       	mov    0x840063a4,%eax
840005b1:	83 e8 01             	sub    $0x1,%eax
840005b4:	39 45 f4             	cmp    %eax,-0xc(%ebp)
840005b7:	7c dd                	jl     84000596 <create_map+0x14>
    }
    for (int col = 1; col < col_max - 1; col++) {
840005b9:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
840005c0:	eb 1d                	jmp    840005df <create_map+0x5d>
        show_char(row_max -1, col, '=');
840005c2:	a1 a0 63 00 84       	mov    0x840063a0,%eax
840005c7:	83 e8 01             	sub    $0x1,%eax
840005ca:	83 ec 04             	sub    $0x4,%esp
840005cd:	6a 3d                	push   $0x3d
840005cf:	ff 75 f0             	push   -0x10(%ebp)
840005d2:	50                   	push   %eax
840005d3:	e8 3d ff ff ff       	call   84000515 <show_char>
840005d8:	83 c4 10             	add    $0x10,%esp
    for (int col = 1; col < col_max - 1; col++) {
840005db:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
840005df:	a1 a4 63 00 84       	mov    0x840063a4,%eax
840005e4:	83 e8 01             	sub    $0x1,%eax
840005e7:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840005ea:	7c d6                	jl     840005c2 <create_map+0x40>
    }

    // 左右边界
    for (int row = 1; row < row_max - 1; row++) {
840005ec:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
840005f3:	eb 16                	jmp    8400060b <create_map+0x89>
        show_char(row, 0, '|');
840005f5:	83 ec 04             	sub    $0x4,%esp
840005f8:	6a 7c                	push   $0x7c
840005fa:	6a 00                	push   $0x0
840005fc:	ff 75 ec             	push   -0x14(%ebp)
840005ff:	e8 11 ff ff ff       	call   84000515 <show_char>
84000604:	83 c4 10             	add    $0x10,%esp
    for (int row = 1; row < row_max - 1; row++) {
84000607:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
8400060b:	a1 a0 63 00 84       	mov    0x840063a0,%eax
84000610:	83 e8 01             	sub    $0x1,%eax
84000613:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84000616:	7c dd                	jl     840005f5 <create_map+0x73>
    }
    for (int row = 1; row < row_max - 1; row++) {
84000618:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8400061f:	eb 1d                	jmp    8400063e <create_map+0xbc>
        show_char(row, col_max - 1, '|');
84000621:	a1 a4 63 00 84       	mov    0x840063a4,%eax
84000626:	83 e8 01             	sub    $0x1,%eax
84000629:	83 ec 04             	sub    $0x4,%esp
8400062c:	6a 7c                	push   $0x7c
8400062e:	50                   	push   %eax
8400062f:	ff 75 e8             	push   -0x18(%ebp)
84000632:	e8 de fe ff ff       	call   84000515 <show_char>
84000637:	83 c4 10             	add    $0x10,%esp
    for (int row = 1; row < row_max - 1; row++) {
8400063a:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8400063e:	a1 a0 63 00 84       	mov    0x840063a0,%eax
84000643:	83 e8 01             	sub    $0x1,%eax
84000646:	39 45 e8             	cmp    %eax,-0x18(%ebp)
84000649:	7c d6                	jl     84000621 <create_map+0x9f>
    }
}
8400064b:	90                   	nop
8400064c:	90                   	nop
8400064d:	c9                   	leave  
8400064e:	c3                   	ret    

8400064f <add_head>:

/**
 * 给蛇添加头部
 */
static void add_head (int row, int col) {
8400064f:	55                   	push   %ebp
84000650:	89 e5                	mov    %esp,%ebp
84000652:	83 ec 18             	sub    $0x18,%esp
	body_part_t * part = (body_part_t *)malloc(sizeof(body_part_t));
84000655:	83 ec 0c             	sub    $0xc,%esp
84000658:	6a 0c                	push   $0xc
8400065a:	e8 0a 13 00 00       	call   84001969 <malloc>
8400065f:	83 c4 10             	add    $0x10,%esp
84000662:	89 45 f4             	mov    %eax,-0xc(%ebp)
	part->row = row;
84000665:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000668:	8b 55 08             	mov    0x8(%ebp),%edx
8400066b:	89 10                	mov    %edx,(%eax)
	part->col = col;
8400066d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000670:	8b 55 0c             	mov    0xc(%ebp),%edx
84000673:	89 50 04             	mov    %edx,0x4(%eax)
	part->next = snake.head;
84000676:	8b 15 ac 63 00 84    	mov    0x840063ac,%edx
8400067c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400067f:	89 50 08             	mov    %edx,0x8(%eax)
	snake.head = part;
84000682:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000685:	a3 ac 63 00 84       	mov    %eax,0x840063ac
	show_char(row, col, '*');
8400068a:	83 ec 04             	sub    $0x4,%esp
8400068d:	6a 2a                	push   $0x2a
8400068f:	ff 75 0c             	push   0xc(%ebp)
84000692:	ff 75 08             	push   0x8(%ebp)
84000695:	e8 7b fe ff ff       	call   84000515 <show_char>
8400069a:	83 c4 10             	add    $0x10,%esp
}
8400069d:	90                   	nop
8400069e:	c9                   	leave  
8400069f:	c3                   	ret    

840006a0 <remove_tail>:

/**
 * 移除蛇尾的最后一个结点
 */
static void remove_tail (void) {
840006a0:	55                   	push   %ebp
840006a1:	89 e5                	mov    %esp,%ebp
840006a3:	83 ec 18             	sub    $0x18,%esp
	// 先定位curr到最后一个结点
	body_part_t * pre = (body_part_t *)0;
840006a6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
	body_part_t * curr = snake.head;
840006ad:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840006b2:	89 45 f0             	mov    %eax,-0x10(%ebp)
	while (curr->next) {
840006b5:	eb 0f                	jmp    840006c6 <remove_tail+0x26>
		pre = curr;
840006b7:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006ba:	89 45 f4             	mov    %eax,-0xc(%ebp)
		curr = curr->next;
840006bd:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006c0:	8b 40 08             	mov    0x8(%eax),%eax
840006c3:	89 45 f0             	mov    %eax,-0x10(%ebp)
	while (curr->next) {
840006c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006c9:	8b 40 08             	mov    0x8(%eax),%eax
840006cc:	85 c0                	test   %eax,%eax
840006ce:	75 e7                	jne    840006b7 <remove_tail+0x17>
	}

	show_char(curr->row, curr->col, ' ');
840006d0:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006d3:	8b 50 04             	mov    0x4(%eax),%edx
840006d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006d9:	8b 00                	mov    (%eax),%eax
840006db:	83 ec 04             	sub    $0x4,%esp
840006de:	6a 20                	push   $0x20
840006e0:	52                   	push   %edx
840006e1:	50                   	push   %eax
840006e2:	e8 2e fe ff ff       	call   84000515 <show_char>
840006e7:	83 c4 10             	add    $0x10,%esp

	// 再移除
	pre->next = curr->next;
840006ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006ed:	8b 50 08             	mov    0x8(%eax),%edx
840006f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840006f3:	89 50 08             	mov    %edx,0x8(%eax)
	curr->next = (body_part_t *)0;
840006f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006f9:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
	free(curr);
84000700:	83 ec 0c             	sub    $0xc,%esp
84000703:	ff 75 f0             	push   -0x10(%ebp)
84000706:	e8 7a 12 00 00       	call   84001985 <free>
8400070b:	83 c4 10             	add    $0x10,%esp
}
8400070e:	90                   	nop
8400070f:	c9                   	leave  
84000710:	c3                   	ret    

84000711 <create_snake>:

/**
 * 创建蛇。最开始只有一个头
 */
static void create_snake (void) {
84000711:	55                   	push   %ebp
84000712:	89 e5                	mov    %esp,%ebp
84000714:	83 ec 08             	sub    $0x8,%esp
	snake.head = (body_part_t *)malloc(sizeof(body_part_t));
84000717:	83 ec 0c             	sub    $0xc,%esp
8400071a:	6a 0c                	push   $0xc
8400071c:	e8 48 12 00 00       	call   84001969 <malloc>
84000721:	83 c4 10             	add    $0x10,%esp
84000724:	a3 ac 63 00 84       	mov    %eax,0x840063ac
	snake.head->row = 10;        // 初始位置
84000729:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400072e:	c7 00 0a 00 00 00    	movl   $0xa,(%eax)
	snake.head->col = 20;
84000734:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000739:	c7 40 04 14 00 00 00 	movl   $0x14,0x4(%eax)
	snake.head->next = (body_part_t *)0;
84000740:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000745:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
	snake.status = SNAKE_BIT_NONE;
8400074c:	c7 05 b0 63 00 84 00 	movl   $0x0,0x840063b0
84000753:	00 00 00 
	snake.dir = PLAYER1_KEY_LEFT;
84000756:	c7 05 b4 63 00 84 61 	movl   $0x61,0x840063b4
8400075d:	00 00 00 
    show_char(snake.head->row, snake.head->col, '*');
84000760:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000765:	8b 50 04             	mov    0x4(%eax),%edx
84000768:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400076d:	8b 00                	mov    (%eax),%eax
8400076f:	83 ec 04             	sub    $0x4,%esp
84000772:	6a 2a                	push   $0x2a
84000774:	52                   	push   %edx
84000775:	50                   	push   %eax
84000776:	e8 9a fd ff ff       	call   84000515 <show_char>
8400077b:	83 c4 10             	add    $0x10,%esp
}
8400077e:	90                   	nop
8400077f:	c9                   	leave  
84000780:	c3                   	ret    

84000781 <create_food>:

/**
 * 创建食物
 */
static void create_food(void)  {
84000781:	55                   	push   %ebp
84000782:	89 e5                	mov    %esp,%ebp
84000784:	83 ec 18             	sub    $0x18,%esp
	// 创建一个body
	food = (body_part_t *)malloc(sizeof(body_part_t));
84000787:	83 ec 0c             	sub    $0xc,%esp
8400078a:	6a 0c                	push   $0xc
8400078c:	e8 d8 11 00 00       	call   84001969 <malloc>
84000791:	83 c4 10             	add    $0x10,%esp
84000794:	a3 a8 63 00 84       	mov    %eax,0x840063a8

	// 在设定位置时要避免与身体重合，所以要反复调整
	body_part_t * part = snake.head;
84000799:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400079e:	89 45 f4             	mov    %eax,-0xc(%ebp)
	do {
		// 设定一个随机的位置，没有随机数怎么办？
		// 只要让每次出现的位置有变化即可，不一定要真的随机
		food->row = 1 + rand() % (row_max - 3);
840007a1:	e8 cf 1d 00 00       	call   84002575 <rand>
840007a6:	8b 15 a0 63 00 84    	mov    0x840063a0,%edx
840007ac:	8d 4a fd             	lea    -0x3(%edx),%ecx
840007af:	99                   	cltd   
840007b0:	f7 f9                	idiv   %ecx
840007b2:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840007b7:	83 c2 01             	add    $0x1,%edx
840007ba:	89 10                	mov    %edx,(%eax)
		food->col = 1 + rand() % (col_max - 3);
840007bc:	e8 b4 1d 00 00       	call   84002575 <rand>
840007c1:	8b 15 a4 63 00 84    	mov    0x840063a4,%edx
840007c7:	8d 4a fd             	lea    -0x3(%edx),%ecx
840007ca:	99                   	cltd   
840007cb:	f7 f9                	idiv   %ecx
840007cd:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840007d2:	83 c2 01             	add    $0x1,%edx
840007d5:	89 50 04             	mov    %edx,0x4(%eax)

		// 食物不能在墙上
		if ((food->row < 0) || (food->row >= row_max)
840007d8:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840007dd:	8b 00                	mov    (%eax),%eax
840007df:	85 c0                	test   %eax,%eax
840007e1:	0f 88 95 00 00 00    	js     8400087c <create_food+0xfb>
840007e7:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840007ec:	8b 10                	mov    (%eax),%edx
840007ee:	a1 a0 63 00 84       	mov    0x840063a0,%eax
840007f3:	39 c2                	cmp    %eax,%edx
840007f5:	0f 8d 81 00 00 00    	jge    8400087c <create_food+0xfb>
				|| (food->col < 0) || (food->col >= col_max)) {
840007fb:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000800:	8b 40 04             	mov    0x4(%eax),%eax
84000803:	85 c0                	test   %eax,%eax
84000805:	78 75                	js     8400087c <create_food+0xfb>
84000807:	a1 a8 63 00 84       	mov    0x840063a8,%eax
8400080c:	8b 50 04             	mov    0x4(%eax),%edx
8400080f:	a1 a4 63 00 84       	mov    0x840063a4,%eax
84000814:	39 c2                	cmp    %eax,%edx
84000816:	7d 64                	jge    8400087c <create_food+0xfb>
			continue;
		}

		// 食物不能在蛇身上
		// 遍历，如果有重合，则重来。没有则退出
		while (part) {
84000818:	eb 4f                	jmp    84000869 <create_food+0xe8>
			if ((food->row != snake.head->row) || (food->col != snake.head->col)) {
8400081a:	a1 a8 63 00 84       	mov    0x840063a8,%eax
8400081f:	8b 10                	mov    (%eax),%edx
84000821:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000826:	8b 00                	mov    (%eax),%eax
84000828:	39 c2                	cmp    %eax,%edx
8400082a:	75 14                	jne    84000840 <create_food+0xbf>
8400082c:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000831:	8b 50 04             	mov    0x4(%eax),%edx
84000834:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000839:	8b 40 04             	mov    0x4(%eax),%eax
8400083c:	39 c2                	cmp    %eax,%edx
8400083e:	74 20                	je     84000860 <create_food+0xdf>
				// 将食物显示出来
				show_char(food->row, food->col, '*');
84000840:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000845:	8b 50 04             	mov    0x4(%eax),%edx
84000848:	a1 a8 63 00 84       	mov    0x840063a8,%eax
8400084d:	8b 00                	mov    (%eax),%eax
8400084f:	83 ec 04             	sub    $0x4,%esp
84000852:	6a 2a                	push   $0x2a
84000854:	52                   	push   %edx
84000855:	50                   	push   %eax
84000856:	e8 ba fc ff ff       	call   84000515 <show_char>
8400085b:	83 c4 10             	add    $0x10,%esp
				return;
8400085e:	eb 22                	jmp    84000882 <create_food+0x101>
			}
			part = part->next;
84000860:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000863:	8b 40 08             	mov    0x8(%eax),%eax
84000866:	89 45 f4             	mov    %eax,-0xc(%ebp)
		while (part) {
84000869:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400086d:	75 ab                	jne    8400081a <create_food+0x99>
		}
		part = snake.head;
8400086f:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000874:	89 45 f4             	mov    %eax,-0xc(%ebp)
84000877:	e9 25 ff ff ff       	jmp    840007a1 <create_food+0x20>
			continue;
8400087c:	90                   	nop
		food->row = 1 + rand() % (row_max - 3);
8400087d:	e9 1f ff ff ff       	jmp    840007a1 <create_food+0x20>
	} while (1);
}
84000882:	c9                   	leave  
84000883:	c3                   	ret    

84000884 <free_food>:

/**
 * 释放掉食物
 */
static void free_food (void) {
84000884:	55                   	push   %ebp
84000885:	89 e5                	mov    %esp,%ebp
84000887:	83 ec 08             	sub    $0x8,%esp
	free(food);
8400088a:	a1 a8 63 00 84       	mov    0x840063a8,%eax
8400088f:	83 ec 0c             	sub    $0xc,%esp
84000892:	50                   	push   %eax
84000893:	e8 ed 10 00 00       	call   84001985 <free>
84000898:	83 c4 10             	add    $0x10,%esp
	food = (body_part_t *)0;
8400089b:	c7 05 a8 63 00 84 00 	movl   $0x0,0x840063a8
840008a2:	00 00 00 
}
840008a5:	90                   	nop
840008a6:	c9                   	leave  
840008a7:	c3                   	ret    

840008a8 <move_forward>:

/**
 * 蛇向前移动一个位置，具体移动方向由键盘控制
 */
static void move_forward (int dir) {
840008a8:	55                   	push   %ebp
840008a9:	89 e5                	mov    %esp,%ebp
840008ab:	83 ec 18             	sub    $0x18,%esp
	int next_row, next_col;

	// 计算下一位置
	switch (dir) {
840008ae:	83 7d 08 77          	cmpl   $0x77,0x8(%ebp)
840008b2:	74 5f                	je     84000913 <move_forward+0x6b>
840008b4:	83 7d 08 77          	cmpl   $0x77,0x8(%ebp)
840008b8:	0f 8f 43 01 00 00    	jg     84000a01 <move_forward+0x159>
840008be:	83 7d 08 73          	cmpl   $0x73,0x8(%ebp)
840008c2:	74 69                	je     8400092d <move_forward+0x85>
840008c4:	83 7d 08 73          	cmpl   $0x73,0x8(%ebp)
840008c8:	0f 8f 33 01 00 00    	jg     84000a01 <move_forward+0x159>
840008ce:	83 7d 08 61          	cmpl   $0x61,0x8(%ebp)
840008d2:	74 0b                	je     840008df <move_forward+0x37>
840008d4:	83 7d 08 64          	cmpl   $0x64,0x8(%ebp)
840008d8:	74 1f                	je     840008f9 <move_forward+0x51>
	case PLAYER1_KEY_DOWN:
		next_row = snake.head->row + 1;
		next_col = snake.head->col;
		break;
	default:
		return;
840008da:	e9 22 01 00 00       	jmp    84000a01 <move_forward+0x159>
		next_row = snake.head->row;
840008df:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840008e4:	8b 00                	mov    (%eax),%eax
840008e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col - 1;
840008e9:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840008ee:	8b 40 04             	mov    0x4(%eax),%eax
840008f1:	83 e8 01             	sub    $0x1,%eax
840008f4:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
840008f7:	eb 4d                	jmp    84000946 <move_forward+0x9e>
		next_row = snake.head->row;
840008f9:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840008fe:	8b 00                	mov    (%eax),%eax
84000900:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col + 1;
84000903:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000908:	8b 40 04             	mov    0x4(%eax),%eax
8400090b:	83 c0 01             	add    $0x1,%eax
8400090e:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
84000911:	eb 33                	jmp    84000946 <move_forward+0x9e>
		next_row = snake.head->row - 1;
84000913:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000918:	8b 00                	mov    (%eax),%eax
8400091a:	83 e8 01             	sub    $0x1,%eax
8400091d:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col;
84000920:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000925:	8b 40 04             	mov    0x4(%eax),%eax
84000928:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
8400092b:	eb 19                	jmp    84000946 <move_forward+0x9e>
		next_row = snake.head->row + 1;
8400092d:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000932:	8b 00                	mov    (%eax),%eax
84000934:	83 c0 01             	add    $0x1,%eax
84000937:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col;
8400093a:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400093f:	8b 40 04             	mov    0x4(%eax),%eax
84000942:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
84000945:	90                   	nop
	}

	body_part_t * next_part = snake.head->next;
84000946:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400094b:	8b 40 08             	mov    0x8(%eax),%eax
8400094e:	89 45 ec             	mov    %eax,-0x14(%ebp)
	if (next_part) {
84000951:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
84000955:	74 19                	je     84000970 <move_forward+0xc8>
		if ((next_row == next_part->row) && (next_col == next_part->col)) {
84000957:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400095a:	8b 00                	mov    (%eax),%eax
8400095c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8400095f:	75 0f                	jne    84000970 <move_forward+0xc8>
84000961:	8b 45 ec             	mov    -0x14(%ebp),%eax
84000964:	8b 40 04             	mov    0x4(%eax),%eax
84000967:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8400096a:	0f 84 94 00 00 00    	je     84000a04 <move_forward+0x15c>
			return;
		}
	}

	// 先不管有没有食物，都生成一个头部，然后前移
	add_head(next_row, next_col);
84000970:	83 ec 08             	sub    $0x8,%esp
84000973:	ff 75 f0             	push   -0x10(%ebp)
84000976:	ff 75 f4             	push   -0xc(%ebp)
84000979:	e8 d1 fc ff ff       	call   8400064f <add_head>
8400097e:	83 c4 10             	add    $0x10,%esp

	// 然后检查相应的异常情况
	if (is_hit_itself()) {
84000981:	e8 b5 fa ff ff       	call   8400043b <is_hit_itself>
84000986:	85 c0                	test   %eax,%eax
84000988:	74 11                	je     8400099b <move_forward+0xf3>
		snake.status = SNAKE_BIT_ITSELF;
8400098a:	c7 05 b0 63 00 84 01 	movl   $0x1,0x840063b0
84000991:	00 00 00 
		remove_tail();
84000994:	e8 07 fd ff ff       	call   840006a0 <remove_tail>
84000999:	eb 48                	jmp    840009e3 <move_forward+0x13b>
	} else if (is_hit_wall()) {
8400099b:	e8 ed fa ff ff       	call   8400048d <is_hit_wall>
840009a0:	85 c0                	test   %eax,%eax
840009a2:	74 11                	je     840009b5 <move_forward+0x10d>
		snake.status = SNAKE_BIT_WALL;
840009a4:	c7 05 b0 63 00 84 02 	movl   $0x2,0x840063b0
840009ab:	00 00 00 
		remove_tail();
840009ae:	e8 ed fc ff ff       	call   840006a0 <remove_tail>
840009b3:	eb 2e                	jmp    840009e3 <move_forward+0x13b>
	} else if (is_hit_food()){
840009b5:	e8 24 fb ff ff       	call   840004de <is_hit_food>
840009ba:	85 c0                	test   %eax,%eax
840009bc:	74 16                	je     840009d4 <move_forward+0x12c>
		// 食物被吃掉, 回收，重新生成
		free_food();
840009be:	e8 c1 fe ff ff       	call   84000884 <free_food>
		create_food();
840009c3:	e8 b9 fd ff ff       	call   84000781 <create_food>
		snake.status = SNAKE_BIT_FOOD;
840009c8:	c7 05 b0 63 00 84 03 	movl   $0x3,0x840063b0
840009cf:	00 00 00 
840009d2:	eb 0f                	jmp    840009e3 <move_forward+0x13b>
	} else {
		// 没有吃到食物，需要移除尾部
		remove_tail();
840009d4:	e8 c7 fc ff ff       	call   840006a0 <remove_tail>
		snake.status = SNAKE_BIT_NONE;
840009d9:	c7 05 b0 63 00 84 00 	movl   $0x0,0x840063b0
840009e0:	00 00 00 
	}

	snake.dir = dir;
840009e3:	8b 45 08             	mov    0x8(%ebp),%eax
840009e6:	a3 b4 63 00 84       	mov    %eax,0x840063b4
	fflush(stdout);
840009eb:	e8 6f 0f 00 00       	call   8400195f <__getreent>
840009f0:	8b 40 08             	mov    0x8(%eax),%eax
840009f3:	83 ec 0c             	sub    $0xc,%esp
840009f6:	50                   	push   %eax
840009f7:	e8 d7 04 00 00       	call   84000ed3 <fflush>
840009fc:	83 c4 10             	add    $0x10,%esp
840009ff:	eb 04                	jmp    84000a05 <move_forward+0x15d>
		return;
84000a01:	90                   	nop
84000a02:	eb 01                	jmp    84000a05 <move_forward+0x15d>
			return;
84000a04:	90                   	nop
}
84000a05:	c9                   	leave  
84000a06:	c3                   	ret    

84000a07 <show_welcome>:

/**
 * 初始化游戏
 */
static void show_welcome (void) {
84000a07:	55                   	push   %ebp
84000a08:	89 e5                	mov    %esp,%ebp
84000a0a:	83 ec 08             	sub    $0x8,%esp
	clear_map();
84000a0d:	e8 52 fb ff ff       	call   84000564 <clear_map>
	// setvbuf(stdout, NULL, _IONBF, 0); 调试用

    show_string(0, 0, "Welcome to sname game");
84000a12:	83 ec 04             	sub    $0x4,%esp
84000a15:	68 c6 55 00 84       	push   $0x840055c6
84000a1a:	6a 00                	push   $0x0
84000a1c:	6a 00                	push   $0x0
84000a1e:	e8 22 fb ff ff       	call   84000545 <show_string>
84000a23:	83 c4 10             	add    $0x10,%esp
    show_string(1, 0, "Use a.w.s.d to move snake");
84000a26:	83 ec 04             	sub    $0x4,%esp
84000a29:	68 dc 55 00 84       	push   $0x840055dc
84000a2e:	6a 00                	push   $0x0
84000a30:	6a 01                	push   $0x1
84000a32:	e8 0e fb ff ff       	call   84000545 <show_string>
84000a37:	83 c4 10             	add    $0x10,%esp
    show_string(2, 0, "Press any key to start game");
84000a3a:	83 ec 04             	sub    $0x4,%esp
84000a3d:	68 f6 55 00 84       	push   $0x840055f6
84000a42:	6a 00                	push   $0x0
84000a44:	6a 02                	push   $0x2
84000a46:	e8 fa fa ff ff       	call   84000545 <show_string>
84000a4b:	83 c4 10             	add    $0x10,%esp
	fflush(stdout);
84000a4e:	e8 0c 0f 00 00       	call   8400195f <__getreent>
84000a53:	8b 40 08             	mov    0x8(%eax),%eax
84000a56:	83 ec 0c             	sub    $0xc,%esp
84000a59:	50                   	push   %eax
84000a5a:	e8 74 04 00 00       	call   84000ed3 <fflush>
84000a5f:	83 c4 10             	add    $0x10,%esp
	
	// 按Q即退出，所以无缓存输入
	setvbuf(stdin, NULL, _IONBF, 0);
84000a62:	e8 f8 0e 00 00       	call   8400195f <__getreent>
84000a67:	8b 40 04             	mov    0x4(%eax),%eax
84000a6a:	6a 00                	push   $0x0
84000a6c:	6a 02                	push   $0x2
84000a6e:	6a 00                	push   $0x0
84000a70:	50                   	push   %eax
84000a71:	e8 a8 1b 00 00       	call   8400261e <setvbuf>
84000a76:	83 c4 10             	add    $0x10,%esp
    getchar();
84000a79:	e8 bc 0e 00 00       	call   8400193a <getchar>
}
84000a7e:	90                   	nop
84000a7f:	c9                   	leave  
84000a80:	c3                   	ret    

84000a81 <begin_game>:

/**
 * @brief 开始游戏
 */
static void begin_game (void) {
84000a81:	55                   	push   %ebp
84000a82:	89 e5                	mov    %esp,%ebp
84000a84:	83 ec 08             	sub    $0x8,%esp
    create_map();
84000a87:	e8 f6 fa ff ff       	call   84000582 <create_map>
    create_snake();
84000a8c:	e8 80 fc ff ff       	call   84000711 <create_snake>
    create_food();
84000a91:	e8 eb fc ff ff       	call   84000781 <create_food>
	fflush(stdout);
84000a96:	e8 c4 0e 00 00       	call   8400195f <__getreent>
84000a9b:	8b 40 08             	mov    0x8(%eax),%eax
84000a9e:	83 ec 0c             	sub    $0xc,%esp
84000aa1:	50                   	push   %eax
84000aa2:	e8 2c 04 00 00       	call   84000ed3 <fflush>
84000aa7:	83 c4 10             	add    $0x10,%esp
}
84000aaa:	90                   	nop
84000aab:	c9                   	leave  
84000aac:	c3                   	ret    

84000aad <main>:

int main (int argc, char ** argv) {
84000aad:	8d 4c 24 04          	lea    0x4(%esp),%ecx
84000ab1:	83 e4 f0             	and    $0xfffffff0,%esp
84000ab4:	ff 71 fc             	push   -0x4(%ecx)
84000ab7:	55                   	push   %ebp
84000ab8:	89 e5                	mov    %esp,%ebp
84000aba:	51                   	push   %ecx
84000abb:	83 ec 24             	sub    $0x24,%esp
	row_max = 25;
84000abe:	c7 05 a0 63 00 84 19 	movl   $0x19,0x840063a0
84000ac5:	00 00 00 
	col_max = 80;
84000ac8:	c7 05 a4 63 00 84 50 	movl   $0x50,0x840063a4
84000acf:	00 00 00 

	ioctl(0, TTY_CMD_ECHO, 0, 0);
84000ad2:	6a 00                	push   $0x0
84000ad4:	6a 00                	push   $0x0
84000ad6:	6a 01                	push   $0x1
84000ad8:	6a 00                	push   $0x0
84000ada:	e8 29 f8 ff ff       	call   84000308 <ioctl>
84000adf:	83 c4 10             	add    $0x10,%esp

	show_welcome();
84000ae2:	e8 20 ff ff ff       	call   84000a07 <show_welcome>
    begin_game();
84000ae7:	e8 95 ff ff ff       	call   84000a81 <begin_game>

    int count;
	int cnt = 0;
84000aec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
	do {
		// 检查是否有键盘输入
		ioctl(0, TTY_CMD_IN_COUNT, (int)&count, 0);
84000af3:	8d 45 e4             	lea    -0x1c(%ebp),%eax
84000af6:	6a 00                	push   $0x0
84000af8:	50                   	push   %eax
84000af9:	6a 02                	push   $0x2
84000afb:	6a 00                	push   $0x0
84000afd:	e8 06 f8 ff ff       	call   84000308 <ioctl>
84000b02:	83 c4 10             	add    $0x10,%esp
		if (count) {
84000b05:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84000b08:	85 c0                	test   %eax,%eax
84000b0a:	74 18                	je     84000b24 <main+0x77>
			int ch = getchar();
84000b0c:	e8 29 0e 00 00       	call   8400193a <getchar>
84000b11:	89 45 f0             	mov    %eax,-0x10(%ebp)
			move_forward(ch);
84000b14:	83 ec 0c             	sub    $0xc,%esp
84000b17:	ff 75 f0             	push   -0x10(%ebp)
84000b1a:	e8 89 fd ff ff       	call   840008a8 <move_forward>
84000b1f:	83 c4 10             	add    $0x10,%esp
84000b22:	eb 38                	jmp    84000b5c <main+0xaf>
		} else if (++cnt % 50 == 0) {
84000b24:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84000b28:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84000b2b:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
84000b30:	89 c8                	mov    %ecx,%eax
84000b32:	f7 ea                	imul   %edx
84000b34:	89 d0                	mov    %edx,%eax
84000b36:	c1 f8 04             	sar    $0x4,%eax
84000b39:	89 ca                	mov    %ecx,%edx
84000b3b:	c1 fa 1f             	sar    $0x1f,%edx
84000b3e:	29 d0                	sub    %edx,%eax
84000b40:	6b d0 32             	imul   $0x32,%eax,%edx
84000b43:	89 c8                	mov    %ecx,%eax
84000b45:	29 d0                	sub    %edx,%eax
84000b47:	85 c0                	test   %eax,%eax
84000b49:	75 11                	jne    84000b5c <main+0xaf>
			// 每隔一段时间自动往前移
			move_forward(snake.dir);
84000b4b:	a1 b4 63 00 84       	mov    0x840063b4,%eax
84000b50:	83 ec 0c             	sub    $0xc,%esp
84000b53:	50                   	push   %eax
84000b54:	e8 4f fd ff ff       	call   840008a8 <move_forward>
84000b59:	83 c4 10             	add    $0x10,%esp
		}

		if ((snake.status == SNAKE_BIT_ITSELF) || (snake.status == SNAKE_BIT_WALL)) {
84000b5c:	a1 b0 63 00 84       	mov    0x840063b0,%eax
84000b61:	83 f8 01             	cmp    $0x1,%eax
84000b64:	74 0a                	je     84000b70 <main+0xc3>
84000b66:	a1 b0 63 00 84       	mov    0x840063b0,%eax
84000b6b:	83 f8 02             	cmp    $0x2,%eax
84000b6e:	75 6d                	jne    84000bdd <main+0x130>
			int row = row_max / 2, col = col_max / 2;
84000b70:	a1 a0 63 00 84       	mov    0x840063a0,%eax
84000b75:	89 c2                	mov    %eax,%edx
84000b77:	c1 ea 1f             	shr    $0x1f,%edx
84000b7a:	01 d0                	add    %edx,%eax
84000b7c:	d1 f8                	sar    %eax
84000b7e:	89 45 ec             	mov    %eax,-0x14(%ebp)
84000b81:	a1 a4 63 00 84       	mov    0x840063a4,%eax
84000b86:	89 c2                	mov    %eax,%edx
84000b88:	c1 ea 1f             	shr    $0x1f,%edx
84000b8b:	01 d0                	add    %edx,%eax
84000b8d:	d1 f8                	sar    %eax
84000b8f:	89 45 e8             	mov    %eax,-0x18(%ebp)
			show_string(row, col,  "GAME OVER");
84000b92:	83 ec 04             	sub    $0x4,%esp
84000b95:	68 12 56 00 84       	push   $0x84005612
84000b9a:	ff 75 e8             	push   -0x18(%ebp)
84000b9d:	ff 75 ec             	push   -0x14(%ebp)
84000ba0:	e8 a0 f9 ff ff       	call   84000545 <show_string>
84000ba5:	83 c4 10             	add    $0x10,%esp
			show_string(row + 1, col,  "Press Any key to continue");
84000ba8:	8b 45 ec             	mov    -0x14(%ebp),%eax
84000bab:	83 c0 01             	add    $0x1,%eax
84000bae:	83 ec 04             	sub    $0x4,%esp
84000bb1:	68 1c 56 00 84       	push   $0x8400561c
84000bb6:	ff 75 e8             	push   -0x18(%ebp)
84000bb9:	50                   	push   %eax
84000bba:	e8 86 f9 ff ff       	call   84000545 <show_string>
84000bbf:	83 c4 10             	add    $0x10,%esp
			fflush(stdout);
84000bc2:	e8 98 0d 00 00       	call   8400195f <__getreent>
84000bc7:	8b 40 08             	mov    0x8(%eax),%eax
84000bca:	83 ec 0c             	sub    $0xc,%esp
84000bcd:	50                   	push   %eax
84000bce:	e8 00 03 00 00       	call   84000ed3 <fflush>
84000bd3:	83 c4 10             	add    $0x10,%esp
			getchar();
84000bd6:	e8 5f 0d 00 00       	call   8400193a <getchar>
			break;
84000bdb:	eb 12                	jmp    84000bef <main+0x142>
		}

		msleep(10);
84000bdd:	83 ec 0c             	sub    $0xc,%esp
84000be0:	6a 0a                	push   $0xa
84000be2:	e8 b3 f4 ff ff       	call   8400009a <msleep>
84000be7:	83 c4 10             	add    $0x10,%esp
		ioctl(0, TTY_CMD_IN_COUNT, (int)&count, 0);
84000bea:	e9 04 ff ff ff       	jmp    84000af3 <main+0x46>
	}while (1);

	// 这里是有危险的，如果进程异常退出，将导致回显失败
	ioctl(0, TTY_CMD_ECHO, 1, 0);
84000bef:	6a 00                	push   $0x0
84000bf1:	6a 01                	push   $0x1
84000bf3:	6a 01                	push   $0x1
84000bf5:	6a 00                	push   $0x0
84000bf7:	e8 0c f7 ff ff       	call   84000308 <ioctl>
84000bfc:	83 c4 10             	add    $0x10,%esp
	clear_map();
84000bff:	e8 60 f9 ff ff       	call   84000564 <clear_map>
    return 0;
84000c04:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000c09:	8b 4d fc             	mov    -0x4(%ebp),%ecx
84000c0c:	c9                   	leave  
84000c0d:	8d 61 fc             	lea    -0x4(%ecx),%esp
84000c10:	c3                   	ret    

84000c11 <exit>:
84000c11:	55                   	push   %ebp
84000c12:	89 e5                	mov    %esp,%ebp
84000c14:	83 ec 08             	sub    $0x8,%esp
84000c17:	83 ec 08             	sub    $0x8,%esp
84000c1a:	6a 00                	push   $0x0
84000c1c:	ff 75 08             	push   0x8(%ebp)
84000c1f:	e8 64 1d 00 00       	call   84002988 <__call_exitprocs>
84000c24:	83 c4 10             	add    $0x10,%esp
84000c27:	a1 38 56 00 84       	mov    0x84005638,%eax
84000c2c:	8b 40 3c             	mov    0x3c(%eax),%eax
84000c2f:	85 c0                	test   %eax,%eax
84000c31:	74 17                	je     84000c4a <exit+0x39>
84000c33:	a1 38 56 00 84       	mov    0x84005638,%eax
84000c38:	8b 40 3c             	mov    0x3c(%eax),%eax
84000c3b:	8b 15 38 56 00 84    	mov    0x84005638,%edx
84000c41:	83 ec 0c             	sub    $0xc,%esp
84000c44:	52                   	push   %edx
84000c45:	ff d0                	call   *%eax
84000c47:	83 c4 10             	add    $0x10,%esp
84000c4a:	83 ec 0c             	sub    $0xc,%esp
84000c4d:	ff 75 08             	push   0x8(%ebp)
84000c50:	e8 39 f5 ff ff       	call   8400018e <_exit>

84000c55 <__sflush_r>:
84000c55:	55                   	push   %ebp
84000c56:	89 e5                	mov    %esp,%ebp
84000c58:	57                   	push   %edi
84000c59:	56                   	push   %esi
84000c5a:	53                   	push   %ebx
84000c5b:	83 ec 1c             	sub    $0x1c,%esp
84000c5e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000c61:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c65:	66 89 45 de          	mov    %ax,-0x22(%ebp)
84000c69:	0f bf 45 de          	movswl -0x22(%ebp),%eax
84000c6d:	83 e0 08             	and    $0x8,%eax
84000c70:	85 c0                	test   %eax,%eax
84000c72:	0f 85 93 01 00 00    	jne    84000e0b <__sflush_r+0x1b6>
84000c78:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c7c:	80 cc 08             	or     $0x8,%ah
84000c7f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000c83:	8b 43 04             	mov    0x4(%ebx),%eax
84000c86:	85 c0                	test   %eax,%eax
84000c88:	7f 0b                	jg     84000c95 <__sflush_r+0x40>
84000c8a:	8b 43 3c             	mov    0x3c(%ebx),%eax
84000c8d:	85 c0                	test   %eax,%eax
84000c8f:	0f 8e 6f 01 00 00    	jle    84000e04 <__sflush_r+0x1af>
84000c95:	8b 43 28             	mov    0x28(%ebx),%eax
84000c98:	85 c0                	test   %eax,%eax
84000c9a:	0f 84 64 01 00 00    	je     84000e04 <__sflush_r+0x1af>
84000ca0:	8b 45 08             	mov    0x8(%ebp),%eax
84000ca3:	8b 00                	mov    (%eax),%eax
84000ca5:	89 45 d8             	mov    %eax,-0x28(%ebp)
84000ca8:	8b 45 08             	mov    0x8(%ebp),%eax
84000cab:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84000cb1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000cb5:	98                   	cwtl   
84000cb6:	25 00 10 00 00       	and    $0x1000,%eax
84000cbb:	85 c0                	test   %eax,%eax
84000cbd:	74 08                	je     84000cc7 <__sflush_r+0x72>
84000cbf:	8b 43 50             	mov    0x50(%ebx),%eax
84000cc2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000cc5:	eb 64                	jmp    84000d2b <__sflush_r+0xd6>
84000cc7:	8b 43 28             	mov    0x28(%ebx),%eax
84000cca:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000ccd:	6a 01                	push   $0x1
84000ccf:	6a 00                	push   $0x0
84000cd1:	52                   	push   %edx
84000cd2:	ff 75 08             	push   0x8(%ebp)
84000cd5:	ff d0                	call   *%eax
84000cd7:	83 c4 10             	add    $0x10,%esp
84000cda:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000cdd:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000ce1:	75 48                	jne    84000d2b <__sflush_r+0xd6>
84000ce3:	8b 45 08             	mov    0x8(%ebp),%eax
84000ce6:	8b 00                	mov    (%eax),%eax
84000ce8:	85 c0                	test   %eax,%eax
84000cea:	74 3f                	je     84000d2b <__sflush_r+0xd6>
84000cec:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
84000cf3:	8b 45 08             	mov    0x8(%ebp),%eax
84000cf6:	8b 00                	mov    (%eax),%eax
84000cf8:	83 f8 1d             	cmp    $0x1d,%eax
84000cfb:	74 0a                	je     84000d07 <__sflush_r+0xb2>
84000cfd:	8b 45 08             	mov    0x8(%ebp),%eax
84000d00:	8b 00                	mov    (%eax),%eax
84000d02:	83 f8 16             	cmp    $0x16,%eax
84000d05:	75 11                	jne    84000d18 <__sflush_r+0xc3>
84000d07:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
84000d0e:	8b 45 08             	mov    0x8(%ebp),%eax
84000d11:	8b 55 d8             	mov    -0x28(%ebp),%edx
84000d14:	89 10                	mov    %edx,(%eax)
84000d16:	eb 0b                	jmp    84000d23 <__sflush_r+0xce>
84000d18:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d1c:	83 c8 40             	or     $0x40,%eax
84000d1f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000d23:	8b 45 e0             	mov    -0x20(%ebp),%eax
84000d26:	e9 48 01 00 00       	jmp    84000e73 <__sflush_r+0x21e>
84000d2b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d2f:	98                   	cwtl   
84000d30:	83 e0 04             	and    $0x4,%eax
84000d33:	85 c0                	test   %eax,%eax
84000d35:	74 13                	je     84000d4a <__sflush_r+0xf5>
84000d37:	8b 43 04             	mov    0x4(%ebx),%eax
84000d3a:	29 45 e4             	sub    %eax,-0x1c(%ebp)
84000d3d:	8b 43 30             	mov    0x30(%ebx),%eax
84000d40:	85 c0                	test   %eax,%eax
84000d42:	74 06                	je     84000d4a <__sflush_r+0xf5>
84000d44:	8b 43 3c             	mov    0x3c(%ebx),%eax
84000d47:	29 45 e4             	sub    %eax,-0x1c(%ebp)
84000d4a:	8b 43 28             	mov    0x28(%ebx),%eax
84000d4d:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000d50:	6a 00                	push   $0x0
84000d52:	ff 75 e4             	push   -0x1c(%ebp)
84000d55:	52                   	push   %edx
84000d56:	ff 75 08             	push   0x8(%ebp)
84000d59:	ff d0                	call   *%eax
84000d5b:	83 c4 10             	add    $0x10,%esp
84000d5e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000d61:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000d65:	75 1d                	jne    84000d84 <__sflush_r+0x12f>
84000d67:	8b 45 08             	mov    0x8(%ebp),%eax
84000d6a:	8b 00                	mov    (%eax),%eax
84000d6c:	85 c0                	test   %eax,%eax
84000d6e:	74 14                	je     84000d84 <__sflush_r+0x12f>
84000d70:	8b 45 08             	mov    0x8(%ebp),%eax
84000d73:	8b 00                	mov    (%eax),%eax
84000d75:	83 f8 1d             	cmp    $0x1d,%eax
84000d78:	74 0a                	je     84000d84 <__sflush_r+0x12f>
84000d7a:	8b 45 08             	mov    0x8(%ebp),%eax
84000d7d:	8b 00                	mov    (%eax),%eax
84000d7f:	83 f8 16             	cmp    $0x16,%eax
84000d82:	75 6e                	jne    84000df2 <__sflush_r+0x19d>
84000d84:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d88:	80 e4 f7             	and    $0xf7,%ah
84000d8b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000d8f:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84000d96:	8b 43 10             	mov    0x10(%ebx),%eax
84000d99:	89 03                	mov    %eax,(%ebx)
84000d9b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d9f:	98                   	cwtl   
84000da0:	25 00 10 00 00       	and    $0x1000,%eax
84000da5:	85 c0                	test   %eax,%eax
84000da7:	74 15                	je     84000dbe <__sflush_r+0x169>
84000da9:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000dad:	75 09                	jne    84000db8 <__sflush_r+0x163>
84000daf:	8b 45 08             	mov    0x8(%ebp),%eax
84000db2:	8b 00                	mov    (%eax),%eax
84000db4:	85 c0                	test   %eax,%eax
84000db6:	75 06                	jne    84000dbe <__sflush_r+0x169>
84000db8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84000dbb:	89 43 50             	mov    %eax,0x50(%ebx)
84000dbe:	8b 45 08             	mov    0x8(%ebp),%eax
84000dc1:	8b 55 d8             	mov    -0x28(%ebp),%edx
84000dc4:	89 10                	mov    %edx,(%eax)
84000dc6:	8b 43 30             	mov    0x30(%ebx),%eax
84000dc9:	85 c0                	test   %eax,%eax
84000dcb:	74 37                	je     84000e04 <__sflush_r+0x1af>
84000dcd:	8b 53 30             	mov    0x30(%ebx),%edx
84000dd0:	8d 43 40             	lea    0x40(%ebx),%eax
84000dd3:	39 c2                	cmp    %eax,%edx
84000dd5:	74 12                	je     84000de9 <__sflush_r+0x194>
84000dd7:	8b 43 30             	mov    0x30(%ebx),%eax
84000dda:	83 ec 08             	sub    $0x8,%esp
84000ddd:	50                   	push   %eax
84000dde:	ff 75 08             	push   0x8(%ebp)
84000de1:	e8 28 05 00 00       	call   8400130e <_free_r>
84000de6:	83 c4 10             	add    $0x10,%esp
84000de9:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84000df0:	eb 12                	jmp    84000e04 <__sflush_r+0x1af>
84000df2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000df6:	83 c8 40             	or     $0x40,%eax
84000df9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000dfd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84000e02:	eb 6f                	jmp    84000e73 <__sflush_r+0x21e>
84000e04:	b8 00 00 00 00       	mov    $0x0,%eax
84000e09:	eb 68                	jmp    84000e73 <__sflush_r+0x21e>
84000e0b:	8b 73 10             	mov    0x10(%ebx),%esi
84000e0e:	85 f6                	test   %esi,%esi
84000e10:	75 07                	jne    84000e19 <__sflush_r+0x1c4>
84000e12:	b8 00 00 00 00       	mov    $0x0,%eax
84000e17:	eb 5a                	jmp    84000e73 <__sflush_r+0x21e>
84000e19:	8b 03                	mov    (%ebx),%eax
84000e1b:	29 f0                	sub    %esi,%eax
84000e1d:	89 c7                	mov    %eax,%edi
84000e1f:	89 33                	mov    %esi,(%ebx)
84000e21:	0f bf 45 de          	movswl -0x22(%ebp),%eax
84000e25:	83 e0 03             	and    $0x3,%eax
84000e28:	85 c0                	test   %eax,%eax
84000e2a:	75 05                	jne    84000e31 <__sflush_r+0x1dc>
84000e2c:	8b 43 14             	mov    0x14(%ebx),%eax
84000e2f:	eb 05                	jmp    84000e36 <__sflush_r+0x1e1>
84000e31:	b8 00 00 00 00       	mov    $0x0,%eax
84000e36:	89 43 08             	mov    %eax,0x8(%ebx)
84000e39:	eb 2f                	jmp    84000e6a <__sflush_r+0x215>
84000e3b:	8b 43 24             	mov    0x24(%ebx),%eax
84000e3e:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000e41:	57                   	push   %edi
84000e42:	56                   	push   %esi
84000e43:	52                   	push   %edx
84000e44:	ff 75 08             	push   0x8(%ebp)
84000e47:	ff d0                	call   *%eax
84000e49:	83 c4 10             	add    $0x10,%esp
84000e4c:	85 c0                	test   %eax,%eax
84000e4e:	7f 12                	jg     84000e62 <__sflush_r+0x20d>
84000e50:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000e54:	83 c8 40             	or     $0x40,%eax
84000e57:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000e5b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84000e60:	eb 11                	jmp    84000e73 <__sflush_r+0x21e>
84000e62:	89 c1                	mov    %eax,%ecx
84000e64:	89 c8                	mov    %ecx,%eax
84000e66:	01 c6                	add    %eax,%esi
84000e68:	29 cf                	sub    %ecx,%edi
84000e6a:	85 ff                	test   %edi,%edi
84000e6c:	7f cd                	jg     84000e3b <__sflush_r+0x1e6>
84000e6e:	b8 00 00 00 00       	mov    $0x0,%eax
84000e73:	8d 65 f4             	lea    -0xc(%ebp),%esp
84000e76:	5b                   	pop    %ebx
84000e77:	5e                   	pop    %esi
84000e78:	5f                   	pop    %edi
84000e79:	5d                   	pop    %ebp
84000e7a:	c3                   	ret    

84000e7b <_fflush_r>:
84000e7b:	55                   	push   %ebp
84000e7c:	89 e5                	mov    %esp,%ebp
84000e7e:	53                   	push   %ebx
84000e7f:	83 ec 14             	sub    $0x14,%esp
84000e82:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000e85:	8b 45 08             	mov    0x8(%ebp),%eax
84000e88:	89 45 f4             	mov    %eax,-0xc(%ebp)
84000e8b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000e8f:	74 18                	je     84000ea9 <_fflush_r+0x2e>
84000e91:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000e94:	8b 40 38             	mov    0x38(%eax),%eax
84000e97:	85 c0                	test   %eax,%eax
84000e99:	75 0e                	jne    84000ea9 <_fflush_r+0x2e>
84000e9b:	83 ec 0c             	sub    $0xc,%esp
84000e9e:	ff 75 f4             	push   -0xc(%ebp)
84000ea1:	e8 5b 03 00 00       	call   84001201 <__sinit>
84000ea6:	83 c4 10             	add    $0x10,%esp
84000ea9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000ead:	66 85 c0             	test   %ax,%ax
84000eb0:	75 07                	jne    84000eb9 <_fflush_r+0x3e>
84000eb2:	b8 00 00 00 00       	mov    $0x0,%eax
84000eb7:	eb 15                	jmp    84000ece <_fflush_r+0x53>
84000eb9:	83 ec 08             	sub    $0x8,%esp
84000ebc:	53                   	push   %ebx
84000ebd:	ff 75 08             	push   0x8(%ebp)
84000ec0:	e8 90 fd ff ff       	call   84000c55 <__sflush_r>
84000ec5:	83 c4 10             	add    $0x10,%esp
84000ec8:	89 45 f0             	mov    %eax,-0x10(%ebp)
84000ecb:	8b 45 f0             	mov    -0x10(%ebp),%eax
84000ece:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84000ed1:	c9                   	leave  
84000ed2:	c3                   	ret    

84000ed3 <fflush>:
84000ed3:	55                   	push   %ebp
84000ed4:	89 e5                	mov    %esp,%ebp
84000ed6:	83 ec 08             	sub    $0x8,%esp
84000ed9:	8b 55 08             	mov    0x8(%ebp),%edx
84000edc:	85 d2                	test   %edx,%edx
84000ede:	75 18                	jne    84000ef8 <fflush+0x25>
84000ee0:	a1 38 56 00 84       	mov    0x84005638,%eax
84000ee5:	83 ec 08             	sub    $0x8,%esp
84000ee8:	68 7b 0e 00 84       	push   $0x84000e7b
84000eed:	50                   	push   %eax
84000eee:	e8 bf 09 00 00       	call   840018b2 <_fwalk_reent>
84000ef3:	83 c4 10             	add    $0x10,%esp
84000ef6:	eb 12                	jmp    84000f0a <fflush+0x37>
84000ef8:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84000efd:	83 ec 08             	sub    $0x8,%esp
84000f00:	52                   	push   %edx
84000f01:	50                   	push   %eax
84000f02:	e8 74 ff ff ff       	call   84000e7b <_fflush_r>
84000f07:	83 c4 10             	add    $0x10,%esp
84000f0a:	c9                   	leave  
84000f0b:	c3                   	ret    

84000f0c <std>:
84000f0c:	55                   	push   %ebp
84000f0d:	89 e5                	mov    %esp,%ebp
84000f0f:	83 ec 08             	sub    $0x8,%esp
84000f12:	8b 45 08             	mov    0x8(%ebp),%eax
84000f15:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84000f1b:	8b 45 08             	mov    0x8(%ebp),%eax
84000f1e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
84000f25:	8b 45 08             	mov    0x8(%ebp),%eax
84000f28:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
84000f2f:	8b 45 0c             	mov    0xc(%ebp),%eax
84000f32:	89 c2                	mov    %eax,%edx
84000f34:	8b 45 08             	mov    0x8(%ebp),%eax
84000f37:	66 89 50 0c          	mov    %dx,0xc(%eax)
84000f3b:	8b 45 08             	mov    0x8(%ebp),%eax
84000f3e:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
84000f45:	8b 45 10             	mov    0x10(%ebp),%eax
84000f48:	89 c2                	mov    %eax,%edx
84000f4a:	8b 45 08             	mov    0x8(%ebp),%eax
84000f4d:	66 89 50 0e          	mov    %dx,0xe(%eax)
84000f51:	8b 45 08             	mov    0x8(%ebp),%eax
84000f54:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
84000f5b:	8b 45 08             	mov    0x8(%ebp),%eax
84000f5e:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
84000f65:	8b 45 08             	mov    0x8(%ebp),%eax
84000f68:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
84000f6f:	8b 45 08             	mov    0x8(%ebp),%eax
84000f72:	83 c0 5c             	add    $0x5c,%eax
84000f75:	83 ec 04             	sub    $0x4,%esp
84000f78:	6a 08                	push   $0x8
84000f7a:	6a 00                	push   $0x0
84000f7c:	50                   	push   %eax
84000f7d:	e8 d5 14 00 00       	call   84002457 <memset>
84000f82:	83 c4 10             	add    $0x10,%esp
84000f85:	8b 45 08             	mov    0x8(%ebp),%eax
84000f88:	8b 55 08             	mov    0x8(%ebp),%edx
84000f8b:	89 50 1c             	mov    %edx,0x1c(%eax)
84000f8e:	8b 45 08             	mov    0x8(%ebp),%eax
84000f91:	c7 40 20 2a 28 00 84 	movl   $0x8400282a,0x20(%eax)
84000f98:	8b 45 08             	mov    0x8(%ebp),%eax
84000f9b:	c7 40 24 78 28 00 84 	movl   $0x84002878,0x24(%eax)
84000fa2:	8b 45 08             	mov    0x8(%ebp),%eax
84000fa5:	c7 40 28 d3 28 00 84 	movl   $0x840028d3,0x28(%eax)
84000fac:	8b 45 08             	mov    0x8(%ebp),%eax
84000faf:	c7 40 2c 1d 29 00 84 	movl   $0x8400291d,0x2c(%eax)
84000fb6:	90                   	nop
84000fb7:	c9                   	leave  
84000fb8:	c3                   	ret    

84000fb9 <stdin_init>:
84000fb9:	55                   	push   %ebp
84000fba:	89 e5                	mov    %esp,%ebp
84000fbc:	83 ec 08             	sub    $0x8,%esp
84000fbf:	83 ec 04             	sub    $0x4,%esp
84000fc2:	6a 00                	push   $0x0
84000fc4:	6a 04                	push   $0x4
84000fc6:	ff 75 08             	push   0x8(%ebp)
84000fc9:	e8 3e ff ff ff       	call   84000f0c <std>
84000fce:	83 c4 10             	add    $0x10,%esp
84000fd1:	90                   	nop
84000fd2:	c9                   	leave  
84000fd3:	c3                   	ret    

84000fd4 <stdout_init>:
84000fd4:	55                   	push   %ebp
84000fd5:	89 e5                	mov    %esp,%ebp
84000fd7:	83 ec 08             	sub    $0x8,%esp
84000fda:	83 ec 04             	sub    $0x4,%esp
84000fdd:	6a 01                	push   $0x1
84000fdf:	6a 09                	push   $0x9
84000fe1:	ff 75 08             	push   0x8(%ebp)
84000fe4:	e8 23 ff ff ff       	call   84000f0c <std>
84000fe9:	83 c4 10             	add    $0x10,%esp
84000fec:	90                   	nop
84000fed:	c9                   	leave  
84000fee:	c3                   	ret    

84000fef <stderr_init>:
84000fef:	55                   	push   %ebp
84000ff0:	89 e5                	mov    %esp,%ebp
84000ff2:	83 ec 08             	sub    $0x8,%esp
84000ff5:	83 ec 04             	sub    $0x4,%esp
84000ff8:	6a 02                	push   $0x2
84000ffa:	6a 12                	push   $0x12
84000ffc:	ff 75 08             	push   0x8(%ebp)
84000fff:	e8 08 ff ff ff       	call   84000f0c <std>
84001004:	83 c4 10             	add    $0x10,%esp
84001007:	90                   	nop
84001008:	c9                   	leave  
84001009:	c3                   	ret    

8400100a <__sfmoreglue>:
8400100a:	55                   	push   %ebp
8400100b:	89 e5                	mov    %esp,%ebp
8400100d:	53                   	push   %ebx
8400100e:	83 ec 14             	sub    $0x14,%esp
84001011:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84001014:	8d 43 ff             	lea    -0x1(%ebx),%eax
84001017:	6b c0 68             	imul   $0x68,%eax,%eax
8400101a:	83 c0 74             	add    $0x74,%eax
8400101d:	83 ec 08             	sub    $0x8,%esp
84001020:	50                   	push   %eax
84001021:	ff 75 08             	push   0x8(%ebp)
84001024:	e8 0c 0c 00 00       	call   84001c35 <_malloc_r>
84001029:	83 c4 10             	add    $0x10,%esp
8400102c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400102f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84001033:	75 07                	jne    8400103c <__sfmoreglue+0x32>
84001035:	b8 00 00 00 00       	mov    $0x0,%eax
8400103a:	eb 38                	jmp    84001074 <__sfmoreglue+0x6a>
8400103c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400103f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84001045:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001048:	89 58 04             	mov    %ebx,0x4(%eax)
8400104b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400104e:	8d 50 0c             	lea    0xc(%eax),%edx
84001051:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001054:	89 50 08             	mov    %edx,0x8(%eax)
84001057:	89 d8                	mov    %ebx,%eax
84001059:	6b c0 68             	imul   $0x68,%eax,%eax
8400105c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400105f:	83 c2 0c             	add    $0xc,%edx
84001062:	83 ec 04             	sub    $0x4,%esp
84001065:	50                   	push   %eax
84001066:	6a 00                	push   $0x0
84001068:	52                   	push   %edx
84001069:	e8 e9 13 00 00       	call   84002457 <memset>
8400106e:	83 c4 10             	add    $0x10,%esp
84001071:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001074:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84001077:	c9                   	leave  
84001078:	c3                   	ret    

84001079 <__sfp>:
84001079:	55                   	push   %ebp
8400107a:	89 e5                	mov    %esp,%ebp
8400107c:	83 ec 18             	sub    $0x18,%esp
8400107f:	e8 16 02 00 00       	call   8400129a <__sfp_lock_acquire>
84001084:	a1 38 56 00 84       	mov    0x84005638,%eax
84001089:	8b 40 38             	mov    0x38(%eax),%eax
8400108c:	85 c0                	test   %eax,%eax
8400108e:	75 11                	jne    840010a1 <__sfp+0x28>
84001090:	a1 38 56 00 84       	mov    0x84005638,%eax
84001095:	83 ec 0c             	sub    $0xc,%esp
84001098:	50                   	push   %eax
84001099:	e8 63 01 00 00       	call   84001201 <__sinit>
8400109e:	83 c4 10             	add    $0x10,%esp
840010a1:	a1 38 56 00 84       	mov    0x84005638,%eax
840010a6:	05 e0 02 00 00       	add    $0x2e0,%eax
840010ab:	89 45 ec             	mov    %eax,-0x14(%ebp)
840010ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010b1:	8b 40 08             	mov    0x8(%eax),%eax
840010b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
840010b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010ba:	8b 40 04             	mov    0x4(%eax),%eax
840010bd:	89 45 f0             	mov    %eax,-0x10(%ebp)
840010c0:	eb 10                	jmp    840010d2 <__sfp+0x59>
840010c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840010c5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840010c9:	66 85 c0             	test   %ax,%ax
840010cc:	74 58                	je     84001126 <__sfp+0xad>
840010ce:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
840010d2:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
840010d6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
840010da:	79 e6                	jns    840010c2 <__sfp+0x49>
840010dc:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010df:	8b 00                	mov    (%eax),%eax
840010e1:	85 c0                	test   %eax,%eax
840010e3:	75 1e                	jne    84001103 <__sfp+0x8a>
840010e5:	83 ec 08             	sub    $0x8,%esp
840010e8:	6a 04                	push   $0x4
840010ea:	ff 75 08             	push   0x8(%ebp)
840010ed:	e8 18 ff ff ff       	call   8400100a <__sfmoreglue>
840010f2:	83 c4 10             	add    $0x10,%esp
840010f5:	8b 55 ec             	mov    -0x14(%ebp),%edx
840010f8:	89 02                	mov    %eax,(%edx)
840010fa:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010fd:	8b 00                	mov    (%eax),%eax
840010ff:	85 c0                	test   %eax,%eax
84001101:	74 0a                	je     8400110d <__sfp+0x94>
84001103:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001106:	8b 00                	mov    (%eax),%eax
84001108:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400110b:	eb a1                	jmp    840010ae <__sfp+0x35>
8400110d:	90                   	nop
8400110e:	e8 8d 01 00 00       	call   840012a0 <__sfp_lock_release>
84001113:	8b 45 08             	mov    0x8(%ebp),%eax
84001116:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8400111c:	b8 00 00 00 00       	mov    $0x0,%eax
84001121:	e9 9e 00 00 00       	jmp    840011c4 <__sfp+0x14b>
84001126:	90                   	nop
84001127:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400112a:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
84001130:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001133:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
84001139:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400113c:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
84001143:	e8 58 01 00 00       	call   840012a0 <__sfp_lock_release>
84001148:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400114b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84001151:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001154:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8400115b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400115e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
84001165:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001168:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8400116f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001172:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
84001179:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400117c:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
84001183:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001186:	83 c0 5c             	add    $0x5c,%eax
84001189:	83 ec 04             	sub    $0x4,%esp
8400118c:	6a 08                	push   $0x8
8400118e:	6a 00                	push   $0x0
84001190:	50                   	push   %eax
84001191:	e8 c1 12 00 00       	call   84002457 <memset>
84001196:	83 c4 10             	add    $0x10,%esp
84001199:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400119c:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
840011a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011a6:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
840011ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011b0:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
840011b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011ba:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
840011c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011c4:	c9                   	leave  
840011c5:	c3                   	ret    

840011c6 <_cleanup_r>:
840011c6:	55                   	push   %ebp
840011c7:	89 e5                	mov    %esp,%ebp
840011c9:	83 ec 18             	sub    $0x18,%esp
840011cc:	c7 45 f4 dd 2a 00 84 	movl   $0x84002add,-0xc(%ebp)
840011d3:	83 ec 08             	sub    $0x8,%esp
840011d6:	ff 75 f4             	push   -0xc(%ebp)
840011d9:	ff 75 08             	push   0x8(%ebp)
840011dc:	e8 d1 06 00 00       	call   840018b2 <_fwalk_reent>
840011e1:	83 c4 10             	add    $0x10,%esp
840011e4:	90                   	nop
840011e5:	c9                   	leave  
840011e6:	c3                   	ret    

840011e7 <_cleanup>:
840011e7:	55                   	push   %ebp
840011e8:	89 e5                	mov    %esp,%ebp
840011ea:	83 ec 08             	sub    $0x8,%esp
840011ed:	a1 38 56 00 84       	mov    0x84005638,%eax
840011f2:	83 ec 0c             	sub    $0xc,%esp
840011f5:	50                   	push   %eax
840011f6:	e8 cb ff ff ff       	call   840011c6 <_cleanup_r>
840011fb:	83 c4 10             	add    $0x10,%esp
840011fe:	90                   	nop
840011ff:	c9                   	leave  
84001200:	c3                   	ret    

84001201 <__sinit>:
84001201:	55                   	push   %ebp
84001202:	89 e5                	mov    %esp,%ebp
84001204:	83 ec 08             	sub    $0x8,%esp
84001207:	e8 9a 00 00 00       	call   840012a6 <__sinit_lock_acquire>
8400120c:	8b 45 08             	mov    0x8(%ebp),%eax
8400120f:	8b 40 38             	mov    0x38(%eax),%eax
84001212:	85 c0                	test   %eax,%eax
84001214:	74 07                	je     8400121d <__sinit+0x1c>
84001216:	e8 91 00 00 00       	call   840012ac <__sinit_lock_release>
8400121b:	eb 7b                	jmp    84001298 <__sinit+0x97>
8400121d:	8b 45 08             	mov    0x8(%ebp),%eax
84001220:	c7 40 3c c6 11 00 84 	movl   $0x840011c6,0x3c(%eax)
84001227:	8b 45 08             	mov    0x8(%ebp),%eax
8400122a:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
84001231:	00 00 00 
84001234:	8b 45 08             	mov    0x8(%ebp),%eax
84001237:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8400123e:	00 00 00 
84001241:	8b 45 08             	mov    0x8(%ebp),%eax
84001244:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8400124a:	8b 45 08             	mov    0x8(%ebp),%eax
8400124d:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
84001253:	8b 45 08             	mov    0x8(%ebp),%eax
84001256:	8b 40 04             	mov    0x4(%eax),%eax
84001259:	83 ec 0c             	sub    $0xc,%esp
8400125c:	50                   	push   %eax
8400125d:	e8 57 fd ff ff       	call   84000fb9 <stdin_init>
84001262:	83 c4 10             	add    $0x10,%esp
84001265:	8b 45 08             	mov    0x8(%ebp),%eax
84001268:	8b 40 08             	mov    0x8(%eax),%eax
8400126b:	83 ec 0c             	sub    $0xc,%esp
8400126e:	50                   	push   %eax
8400126f:	e8 60 fd ff ff       	call   84000fd4 <stdout_init>
84001274:	83 c4 10             	add    $0x10,%esp
84001277:	8b 45 08             	mov    0x8(%ebp),%eax
8400127a:	8b 40 0c             	mov    0xc(%eax),%eax
8400127d:	83 ec 0c             	sub    $0xc,%esp
84001280:	50                   	push   %eax
84001281:	e8 69 fd ff ff       	call   84000fef <stderr_init>
84001286:	83 c4 10             	add    $0x10,%esp
84001289:	8b 45 08             	mov    0x8(%ebp),%eax
8400128c:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
84001293:	e8 14 00 00 00       	call   840012ac <__sinit_lock_release>
84001298:	c9                   	leave  
84001299:	c3                   	ret    

8400129a <__sfp_lock_acquire>:
8400129a:	55                   	push   %ebp
8400129b:	89 e5                	mov    %esp,%ebp
8400129d:	90                   	nop
8400129e:	5d                   	pop    %ebp
8400129f:	c3                   	ret    

840012a0 <__sfp_lock_release>:
840012a0:	55                   	push   %ebp
840012a1:	89 e5                	mov    %esp,%ebp
840012a3:	90                   	nop
840012a4:	5d                   	pop    %ebp
840012a5:	c3                   	ret    

840012a6 <__sinit_lock_acquire>:
840012a6:	55                   	push   %ebp
840012a7:	89 e5                	mov    %esp,%ebp
840012a9:	90                   	nop
840012aa:	5d                   	pop    %ebp
840012ab:	c3                   	ret    

840012ac <__sinit_lock_release>:
840012ac:	55                   	push   %ebp
840012ad:	89 e5                	mov    %esp,%ebp
840012af:	90                   	nop
840012b0:	5d                   	pop    %ebp
840012b1:	c3                   	ret    

840012b2 <__fp_lock>:
840012b2:	55                   	push   %ebp
840012b3:	89 e5                	mov    %esp,%ebp
840012b5:	b8 00 00 00 00       	mov    $0x0,%eax
840012ba:	5d                   	pop    %ebp
840012bb:	c3                   	ret    

840012bc <__fp_unlock>:
840012bc:	55                   	push   %ebp
840012bd:	89 e5                	mov    %esp,%ebp
840012bf:	b8 00 00 00 00       	mov    $0x0,%eax
840012c4:	5d                   	pop    %ebp
840012c5:	c3                   	ret    

840012c6 <__fp_lock_all>:
840012c6:	55                   	push   %ebp
840012c7:	89 e5                	mov    %esp,%ebp
840012c9:	83 ec 08             	sub    $0x8,%esp
840012cc:	e8 c9 ff ff ff       	call   8400129a <__sfp_lock_acquire>
840012d1:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
840012d6:	83 ec 08             	sub    $0x8,%esp
840012d9:	68 b2 12 00 84       	push   $0x840012b2
840012de:	50                   	push   %eax
840012df:	e8 66 05 00 00       	call   8400184a <_fwalk>
840012e4:	83 c4 10             	add    $0x10,%esp
840012e7:	90                   	nop
840012e8:	c9                   	leave  
840012e9:	c3                   	ret    

840012ea <__fp_unlock_all>:
840012ea:	55                   	push   %ebp
840012eb:	89 e5                	mov    %esp,%ebp
840012ed:	83 ec 08             	sub    $0x8,%esp
840012f0:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
840012f5:	83 ec 08             	sub    $0x8,%esp
840012f8:	68 bc 12 00 84       	push   $0x840012bc
840012fd:	50                   	push   %eax
840012fe:	e8 47 05 00 00       	call   8400184a <_fwalk>
84001303:	83 c4 10             	add    $0x10,%esp
84001306:	e8 95 ff ff ff       	call   840012a0 <__sfp_lock_release>
8400130b:	90                   	nop
8400130c:	c9                   	leave  
8400130d:	c3                   	ret    

8400130e <_free_r>:
8400130e:	55                   	push   %ebp
8400130f:	89 e5                	mov    %esp,%ebp
84001311:	53                   	push   %ebx
84001312:	83 ec 34             	sub    $0x34,%esp
84001315:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84001319:	0f 84 c4 03 00 00    	je     840016e3 <_free_r+0x3d5>
8400131f:	83 ec 0c             	sub    $0xc,%esp
84001322:	ff 75 08             	push   0x8(%ebp)
84001325:	e8 b5 11 00 00       	call   840024df <__malloc_lock>
8400132a:	83 c4 10             	add    $0x10,%esp
8400132d:	8b 45 0c             	mov    0xc(%ebp),%eax
84001330:	83 e8 08             	sub    $0x8,%eax
84001333:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001336:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001339:	8b 40 04             	mov    0x4(%eax),%eax
8400133c:	89 45 e0             	mov    %eax,-0x20(%ebp)
8400133f:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001342:	83 e0 fe             	and    $0xfffffffe,%eax
84001345:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001348:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400134b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400134e:	01 d0                	add    %edx,%eax
84001350:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001353:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001356:	8b 40 04             	mov    0x4(%eax),%eax
84001359:	83 e0 fc             	and    $0xfffffffc,%eax
8400135c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8400135f:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001364:	8b 40 08             	mov    0x8(%eax),%eax
84001367:	39 45 dc             	cmp    %eax,-0x24(%ebp)
8400136a:	0f 85 94 00 00 00    	jne    84001404 <_free_r+0xf6>
84001370:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001373:	01 45 f0             	add    %eax,-0x10(%ebp)
84001376:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001379:	83 e0 01             	and    $0x1,%eax
8400137c:	85 c0                	test   %eax,%eax
8400137e:	75 3a                	jne    840013ba <_free_r+0xac>
84001380:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001383:	8b 00                	mov    (%eax),%eax
84001385:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001388:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8400138b:	f7 d8                	neg    %eax
8400138d:	01 45 f4             	add    %eax,-0xc(%ebp)
84001390:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001393:	01 45 f0             	add    %eax,-0x10(%ebp)
84001396:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001399:	8b 40 0c             	mov    0xc(%eax),%eax
8400139c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400139f:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013a2:	8b 40 08             	mov    0x8(%eax),%eax
840013a5:	89 45 e8             	mov    %eax,-0x18(%ebp)
840013a8:	8b 45 e8             	mov    -0x18(%ebp),%eax
840013ab:	8b 55 ec             	mov    -0x14(%ebp),%edx
840013ae:	89 50 0c             	mov    %edx,0xc(%eax)
840013b1:	8b 45 ec             	mov    -0x14(%ebp),%eax
840013b4:	8b 55 e8             	mov    -0x18(%ebp),%edx
840013b7:	89 50 08             	mov    %edx,0x8(%eax)
840013ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
840013bd:	83 c8 01             	or     $0x1,%eax
840013c0:	89 c2                	mov    %eax,%edx
840013c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013c5:	89 50 04             	mov    %edx,0x4(%eax)
840013c8:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
840013cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013d0:	89 42 08             	mov    %eax,0x8(%edx)
840013d3:	a1 08 62 00 84       	mov    0x84006208,%eax
840013d8:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840013db:	72 14                	jb     840013f1 <_free_r+0xe3>
840013dd:	a1 c0 63 00 84       	mov    0x840063c0,%eax
840013e2:	83 ec 08             	sub    $0x8,%esp
840013e5:	50                   	push   %eax
840013e6:	ff 75 08             	push   0x8(%ebp)
840013e9:	e8 fb 02 00 00       	call   840016e9 <_malloc_trim_r>
840013ee:	83 c4 10             	add    $0x10,%esp
840013f1:	83 ec 0c             	sub    $0xc,%esp
840013f4:	ff 75 08             	push   0x8(%ebp)
840013f7:	e8 e9 10 00 00       	call   840024e5 <__malloc_unlock>
840013fc:	83 c4 10             	add    $0x10,%esp
840013ff:	e9 e0 02 00 00       	jmp    840016e4 <_free_r+0x3d6>
84001404:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001407:	8b 55 d8             	mov    -0x28(%ebp),%edx
8400140a:	89 50 04             	mov    %edx,0x4(%eax)
8400140d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84001414:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001417:	83 e0 01             	and    $0x1,%eax
8400141a:	85 c0                	test   %eax,%eax
8400141c:	75 52                	jne    84001470 <_free_r+0x162>
8400141e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001421:	8b 00                	mov    (%eax),%eax
84001423:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001426:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001429:	f7 d8                	neg    %eax
8400142b:	01 45 f4             	add    %eax,-0xc(%ebp)
8400142e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001431:	01 45 f0             	add    %eax,-0x10(%ebp)
84001434:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001437:	8b 40 08             	mov    0x8(%eax),%eax
8400143a:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
8400143f:	39 d0                	cmp    %edx,%eax
84001441:	75 09                	jne    8400144c <_free_r+0x13e>
84001443:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8400144a:	eb 24                	jmp    84001470 <_free_r+0x162>
8400144c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400144f:	8b 40 0c             	mov    0xc(%eax),%eax
84001452:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001455:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001458:	8b 40 08             	mov    0x8(%eax),%eax
8400145b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400145e:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001461:	8b 55 ec             	mov    -0x14(%ebp),%edx
84001464:	89 50 0c             	mov    %edx,0xc(%eax)
84001467:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400146a:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400146d:	89 50 08             	mov    %edx,0x8(%eax)
84001470:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001473:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001476:	01 d0                	add    %edx,%eax
84001478:	8b 40 04             	mov    0x4(%eax),%eax
8400147b:	83 e0 01             	and    $0x1,%eax
8400147e:	85 c0                	test   %eax,%eax
84001480:	75 75                	jne    840014f7 <_free_r+0x1e9>
84001482:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001485:	01 45 f0             	add    %eax,-0x10(%ebp)
84001488:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8400148c:	75 45                	jne    840014d3 <_free_r+0x1c5>
8400148e:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001491:	8b 40 08             	mov    0x8(%eax),%eax
84001494:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001499:	39 d0                	cmp    %edx,%eax
8400149b:	75 36                	jne    840014d3 <_free_r+0x1c5>
8400149d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
840014a4:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
840014a9:	8b 55 f4             	mov    -0xc(%ebp),%edx
840014ac:	89 50 0c             	mov    %edx,0xc(%eax)
840014af:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
840014b4:	8b 40 0c             	mov    0xc(%eax),%eax
840014b7:	89 42 08             	mov    %eax,0x8(%edx)
840014ba:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
840014bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014c2:	89 50 0c             	mov    %edx,0xc(%eax)
840014c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014c8:	8b 50 0c             	mov    0xc(%eax),%edx
840014cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014ce:	89 50 08             	mov    %edx,0x8(%eax)
840014d1:	eb 24                	jmp    840014f7 <_free_r+0x1e9>
840014d3:	8b 45 dc             	mov    -0x24(%ebp),%eax
840014d6:	8b 40 0c             	mov    0xc(%eax),%eax
840014d9:	89 45 ec             	mov    %eax,-0x14(%ebp)
840014dc:	8b 45 dc             	mov    -0x24(%ebp),%eax
840014df:	8b 40 08             	mov    0x8(%eax),%eax
840014e2:	89 45 e8             	mov    %eax,-0x18(%ebp)
840014e5:	8b 45 e8             	mov    -0x18(%ebp),%eax
840014e8:	8b 55 ec             	mov    -0x14(%ebp),%edx
840014eb:	89 50 0c             	mov    %edx,0xc(%eax)
840014ee:	8b 45 ec             	mov    -0x14(%ebp),%eax
840014f1:	8b 55 e8             	mov    -0x18(%ebp),%edx
840014f4:	89 50 08             	mov    %edx,0x8(%eax)
840014f7:	8b 45 f0             	mov    -0x10(%ebp),%eax
840014fa:	83 c8 01             	or     $0x1,%eax
840014fd:	89 c2                	mov    %eax,%edx
840014ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001502:	89 50 04             	mov    %edx,0x4(%eax)
84001505:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001508:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400150b:	01 c2                	add    %eax,%edx
8400150d:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001510:	89 02                	mov    %eax,(%edx)
84001512:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84001516:	0f 85 b7 01 00 00    	jne    840016d3 <_free_r+0x3c5>
8400151c:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
84001523:	77 7f                	ja     840015a4 <_free_r+0x296>
84001525:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001528:	c1 e8 03             	shr    $0x3,%eax
8400152b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8400152e:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001533:	8b 58 04             	mov    0x4(%eax),%ebx
84001536:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001539:	8d 50 03             	lea    0x3(%eax),%edx
8400153c:	85 c0                	test   %eax,%eax
8400153e:	0f 48 c2             	cmovs  %edx,%eax
84001541:	c1 f8 02             	sar    $0x2,%eax
84001544:	ba 01 00 00 00       	mov    $0x1,%edx
84001549:	89 c1                	mov    %eax,%ecx
8400154b:	d3 e2                	shl    %cl,%edx
8400154d:	89 d0                	mov    %edx,%eax
8400154f:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84001554:	09 d8                	or     %ebx,%eax
84001556:	89 42 04             	mov    %eax,0x4(%edx)
84001559:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400155c:	83 c0 01             	add    $0x1,%eax
8400155f:	01 c0                	add    %eax,%eax
84001561:	c1 e0 02             	shl    $0x2,%eax
84001564:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001569:	83 e8 08             	sub    $0x8,%eax
8400156c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400156f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001572:	8b 40 08             	mov    0x8(%eax),%eax
84001575:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001578:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400157b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8400157e:	89 50 0c             	mov    %edx,0xc(%eax)
84001581:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001584:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001587:	89 50 08             	mov    %edx,0x8(%eax)
8400158a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400158d:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001590:	89 50 08             	mov    %edx,0x8(%eax)
84001593:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001596:	8b 50 08             	mov    0x8(%eax),%edx
84001599:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400159c:	89 50 0c             	mov    %edx,0xc(%eax)
8400159f:	e9 2f 01 00 00       	jmp    840016d3 <_free_r+0x3c5>
840015a4:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015a7:	c1 e8 09             	shr    $0x9,%eax
840015aa:	85 c0                	test   %eax,%eax
840015ac:	75 08                	jne    840015b6 <_free_r+0x2a8>
840015ae:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015b1:	c1 e8 03             	shr    $0x3,%eax
840015b4:	eb 77                	jmp    8400162d <_free_r+0x31f>
840015b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015b9:	c1 e8 09             	shr    $0x9,%eax
840015bc:	83 f8 04             	cmp    $0x4,%eax
840015bf:	77 0b                	ja     840015cc <_free_r+0x2be>
840015c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015c4:	c1 e8 06             	shr    $0x6,%eax
840015c7:	83 c0 38             	add    $0x38,%eax
840015ca:	eb 61                	jmp    8400162d <_free_r+0x31f>
840015cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015cf:	c1 e8 09             	shr    $0x9,%eax
840015d2:	83 f8 14             	cmp    $0x14,%eax
840015d5:	77 0b                	ja     840015e2 <_free_r+0x2d4>
840015d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015da:	c1 e8 09             	shr    $0x9,%eax
840015dd:	83 c0 5b             	add    $0x5b,%eax
840015e0:	eb 4b                	jmp    8400162d <_free_r+0x31f>
840015e2:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015e5:	c1 e8 09             	shr    $0x9,%eax
840015e8:	83 f8 54             	cmp    $0x54,%eax
840015eb:	77 0b                	ja     840015f8 <_free_r+0x2ea>
840015ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015f0:	c1 e8 0c             	shr    $0xc,%eax
840015f3:	83 c0 6e             	add    $0x6e,%eax
840015f6:	eb 35                	jmp    8400162d <_free_r+0x31f>
840015f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015fb:	c1 e8 09             	shr    $0x9,%eax
840015fe:	3d 54 01 00 00       	cmp    $0x154,%eax
84001603:	77 0b                	ja     84001610 <_free_r+0x302>
84001605:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001608:	c1 e8 0f             	shr    $0xf,%eax
8400160b:	83 c0 77             	add    $0x77,%eax
8400160e:	eb 1d                	jmp    8400162d <_free_r+0x31f>
84001610:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001613:	c1 e8 09             	shr    $0x9,%eax
84001616:	3d 54 05 00 00       	cmp    $0x554,%eax
8400161b:	77 0b                	ja     84001628 <_free_r+0x31a>
8400161d:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001620:	c1 e8 12             	shr    $0x12,%eax
84001623:	83 c0 7c             	add    $0x7c,%eax
84001626:	eb 05                	jmp    8400162d <_free_r+0x31f>
84001628:	b8 7e 00 00 00       	mov    $0x7e,%eax
8400162d:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001630:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001633:	83 c0 01             	add    $0x1,%eax
84001636:	01 c0                	add    %eax,%eax
84001638:	c1 e0 02             	shl    $0x2,%eax
8400163b:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001640:	83 e8 08             	sub    $0x8,%eax
84001643:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001646:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001649:	8b 40 08             	mov    0x8(%eax),%eax
8400164c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400164f:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001652:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84001655:	75 36                	jne    8400168d <_free_r+0x37f>
84001657:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400165c:	8b 58 04             	mov    0x4(%eax),%ebx
8400165f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001662:	8d 50 03             	lea    0x3(%eax),%edx
84001665:	85 c0                	test   %eax,%eax
84001667:	0f 48 c2             	cmovs  %edx,%eax
8400166a:	c1 f8 02             	sar    $0x2,%eax
8400166d:	ba 01 00 00 00       	mov    $0x1,%edx
84001672:	89 c1                	mov    %eax,%ecx
84001674:	d3 e2                	shl    %cl,%edx
84001676:	89 d0                	mov    %edx,%eax
84001678:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
8400167d:	09 d8                	or     %ebx,%eax
8400167f:	89 42 04             	mov    %eax,0x4(%edx)
84001682:	eb 28                	jmp    840016ac <_free_r+0x39e>
84001684:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001687:	8b 40 08             	mov    0x8(%eax),%eax
8400168a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400168d:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001690:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84001693:	74 0e                	je     840016a3 <_free_r+0x395>
84001695:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001698:	8b 40 04             	mov    0x4(%eax),%eax
8400169b:	83 e0 fc             	and    $0xfffffffc,%eax
8400169e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840016a1:	72 e1                	jb     84001684 <_free_r+0x376>
840016a3:	8b 45 e8             	mov    -0x18(%ebp),%eax
840016a6:	8b 40 0c             	mov    0xc(%eax),%eax
840016a9:	89 45 ec             	mov    %eax,-0x14(%ebp)
840016ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
840016af:	8b 55 ec             	mov    -0x14(%ebp),%edx
840016b2:	89 50 0c             	mov    %edx,0xc(%eax)
840016b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
840016b8:	8b 55 e8             	mov    -0x18(%ebp),%edx
840016bb:	89 50 08             	mov    %edx,0x8(%eax)
840016be:	8b 45 ec             	mov    -0x14(%ebp),%eax
840016c1:	8b 55 f4             	mov    -0xc(%ebp),%edx
840016c4:	89 50 08             	mov    %edx,0x8(%eax)
840016c7:	8b 45 ec             	mov    -0x14(%ebp),%eax
840016ca:	8b 50 08             	mov    0x8(%eax),%edx
840016cd:	8b 45 e8             	mov    -0x18(%ebp),%eax
840016d0:	89 50 0c             	mov    %edx,0xc(%eax)
840016d3:	83 ec 0c             	sub    $0xc,%esp
840016d6:	ff 75 08             	push   0x8(%ebp)
840016d9:	e8 07 0e 00 00       	call   840024e5 <__malloc_unlock>
840016de:	83 c4 10             	add    $0x10,%esp
840016e1:	eb 01                	jmp    840016e4 <_free_r+0x3d6>
840016e3:	90                   	nop
840016e4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840016e7:	c9                   	leave  
840016e8:	c3                   	ret    

840016e9 <_malloc_trim_r>:
840016e9:	55                   	push   %ebp
840016ea:	89 e5                	mov    %esp,%ebp
840016ec:	83 ec 28             	sub    $0x28,%esp
840016ef:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
840016f6:	83 ec 0c             	sub    $0xc,%esp
840016f9:	ff 75 08             	push   0x8(%ebp)
840016fc:	e8 de 0d 00 00       	call   840024df <__malloc_lock>
84001701:	83 c4 10             	add    $0x10,%esp
84001704:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001709:	8b 40 08             	mov    0x8(%eax),%eax
8400170c:	8b 40 04             	mov    0x4(%eax),%eax
8400170f:	83 e0 fc             	and    $0xfffffffc,%eax
84001712:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001715:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001718:	2b 45 0c             	sub    0xc(%ebp),%eax
8400171b:	89 c2                	mov    %eax,%edx
8400171d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001720:	01 d0                	add    %edx,%eax
84001722:	83 e8 11             	sub    $0x11,%eax
84001725:	ba 00 00 00 00       	mov    $0x0,%edx
8400172a:	f7 75 f4             	divl   -0xc(%ebp)
8400172d:	83 e8 01             	sub    $0x1,%eax
84001730:	0f af 45 f4          	imul   -0xc(%ebp),%eax
84001734:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001737:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400173a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8400173d:	7d 18                	jge    84001757 <_malloc_trim_r+0x6e>
8400173f:	83 ec 0c             	sub    $0xc,%esp
84001742:	ff 75 08             	push   0x8(%ebp)
84001745:	e8 9b 0d 00 00       	call   840024e5 <__malloc_unlock>
8400174a:	83 c4 10             	add    $0x10,%esp
8400174d:	b8 00 00 00 00       	mov    $0x0,%eax
84001752:	e9 f1 00 00 00       	jmp    84001848 <_malloc_trim_r+0x15f>
84001757:	83 ec 08             	sub    $0x8,%esp
8400175a:	6a 00                	push   $0x0
8400175c:	ff 75 08             	push   0x8(%ebp)
8400175f:	e8 7a 0e 00 00       	call   840025de <_sbrk_r>
84001764:	83 c4 10             	add    $0x10,%esp
84001767:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400176a:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400176f:	8b 50 08             	mov    0x8(%eax),%edx
84001772:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001775:	01 d0                	add    %edx,%eax
84001777:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8400177a:	74 18                	je     84001794 <_malloc_trim_r+0xab>
8400177c:	83 ec 0c             	sub    $0xc,%esp
8400177f:	ff 75 08             	push   0x8(%ebp)
84001782:	e8 5e 0d 00 00       	call   840024e5 <__malloc_unlock>
84001787:	83 c4 10             	add    $0x10,%esp
8400178a:	b8 00 00 00 00       	mov    $0x0,%eax
8400178f:	e9 b4 00 00 00       	jmp    84001848 <_malloc_trim_r+0x15f>
84001794:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001797:	f7 d8                	neg    %eax
84001799:	83 ec 08             	sub    $0x8,%esp
8400179c:	50                   	push   %eax
8400179d:	ff 75 08             	push   0x8(%ebp)
840017a0:	e8 39 0e 00 00       	call   840025de <_sbrk_r>
840017a5:	83 c4 10             	add    $0x10,%esp
840017a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
840017ab:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
840017af:	75 61                	jne    84001812 <_malloc_trim_r+0x129>
840017b1:	83 ec 08             	sub    $0x8,%esp
840017b4:	6a 00                	push   $0x0
840017b6:	ff 75 08             	push   0x8(%ebp)
840017b9:	e8 20 0e 00 00       	call   840025de <_sbrk_r>
840017be:	83 c4 10             	add    $0x10,%esp
840017c1:	89 45 e8             	mov    %eax,-0x18(%ebp)
840017c4:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840017c9:	8b 50 08             	mov    0x8(%eax),%edx
840017cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
840017cf:	29 d0                	sub    %edx,%eax
840017d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
840017d4:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
840017d8:	7e 23                	jle    840017fd <_malloc_trim_r+0x114>
840017da:	8b 15 0c 62 00 84    	mov    0x8400620c,%edx
840017e0:	8b 45 e8             	mov    -0x18(%ebp),%eax
840017e3:	29 d0                	sub    %edx,%eax
840017e5:	a3 e0 63 00 84       	mov    %eax,0x840063e0
840017ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
840017ed:	83 c8 01             	or     $0x1,%eax
840017f0:	89 c2                	mov    %eax,%edx
840017f2:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840017f7:	8b 40 08             	mov    0x8(%eax),%eax
840017fa:	89 50 04             	mov    %edx,0x4(%eax)
840017fd:	83 ec 0c             	sub    $0xc,%esp
84001800:	ff 75 08             	push   0x8(%ebp)
84001803:	e8 dd 0c 00 00       	call   840024e5 <__malloc_unlock>
84001808:	83 c4 10             	add    $0x10,%esp
8400180b:	b8 00 00 00 00       	mov    $0x0,%eax
84001810:	eb 36                	jmp    84001848 <_malloc_trim_r+0x15f>
84001812:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001815:	2b 45 ec             	sub    -0x14(%ebp),%eax
84001818:	83 c8 01             	or     $0x1,%eax
8400181b:	89 c2                	mov    %eax,%edx
8400181d:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001822:	8b 40 08             	mov    0x8(%eax),%eax
84001825:	89 50 04             	mov    %edx,0x4(%eax)
84001828:	a1 e0 63 00 84       	mov    0x840063e0,%eax
8400182d:	2b 45 ec             	sub    -0x14(%ebp),%eax
84001830:	a3 e0 63 00 84       	mov    %eax,0x840063e0
84001835:	83 ec 0c             	sub    $0xc,%esp
84001838:	ff 75 08             	push   0x8(%ebp)
8400183b:	e8 a5 0c 00 00       	call   840024e5 <__malloc_unlock>
84001840:	83 c4 10             	add    $0x10,%esp
84001843:	b8 01 00 00 00       	mov    $0x1,%eax
84001848:	c9                   	leave  
84001849:	c3                   	ret    

8400184a <_fwalk>:
8400184a:	55                   	push   %ebp
8400184b:	89 e5                	mov    %esp,%ebp
8400184d:	57                   	push   %edi
8400184e:	56                   	push   %esi
8400184f:	53                   	push   %ebx
84001850:	83 ec 1c             	sub    $0x1c,%esp
84001853:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400185a:	8b 45 08             	mov    0x8(%ebp),%eax
8400185d:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
84001863:	eb 3e                	jmp    840018a3 <_fwalk+0x59>
84001865:	8b 5e 08             	mov    0x8(%esi),%ebx
84001868:	8b 7e 04             	mov    0x4(%esi),%edi
8400186b:	eb 2d                	jmp    8400189a <_fwalk+0x50>
8400186d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84001871:	66 85 c0             	test   %ax,%ax
84001874:	74 21                	je     84001897 <_fwalk+0x4d>
84001876:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400187a:	66 83 f8 01          	cmp    $0x1,%ax
8400187e:	74 17                	je     84001897 <_fwalk+0x4d>
84001880:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84001884:	66 83 f8 ff          	cmp    $0xffff,%ax
84001888:	74 0d                	je     84001897 <_fwalk+0x4d>
8400188a:	83 ec 0c             	sub    $0xc,%esp
8400188d:	53                   	push   %ebx
8400188e:	ff 55 0c             	call   *0xc(%ebp)
84001891:	83 c4 10             	add    $0x10,%esp
84001894:	09 45 e4             	or     %eax,-0x1c(%ebp)
84001897:	83 c3 68             	add    $0x68,%ebx
8400189a:	83 ef 01             	sub    $0x1,%edi
8400189d:	85 ff                	test   %edi,%edi
8400189f:	79 cc                	jns    8400186d <_fwalk+0x23>
840018a1:	8b 36                	mov    (%esi),%esi
840018a3:	85 f6                	test   %esi,%esi
840018a5:	75 be                	jne    84001865 <_fwalk+0x1b>
840018a7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
840018aa:	8d 65 f4             	lea    -0xc(%ebp),%esp
840018ad:	5b                   	pop    %ebx
840018ae:	5e                   	pop    %esi
840018af:	5f                   	pop    %edi
840018b0:	5d                   	pop    %ebp
840018b1:	c3                   	ret    

840018b2 <_fwalk_reent>:
840018b2:	55                   	push   %ebp
840018b3:	89 e5                	mov    %esp,%ebp
840018b5:	57                   	push   %edi
840018b6:	56                   	push   %esi
840018b7:	53                   	push   %ebx
840018b8:	83 ec 1c             	sub    $0x1c,%esp
840018bb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840018c2:	8b 45 08             	mov    0x8(%ebp),%eax
840018c5:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
840018cb:	eb 41                	jmp    8400190e <_fwalk_reent+0x5c>
840018cd:	8b 5e 08             	mov    0x8(%esi),%ebx
840018d0:	8b 7e 04             	mov    0x4(%esi),%edi
840018d3:	eb 30                	jmp    84001905 <_fwalk_reent+0x53>
840018d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840018d9:	66 85 c0             	test   %ax,%ax
840018dc:	74 24                	je     84001902 <_fwalk_reent+0x50>
840018de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840018e2:	66 83 f8 01          	cmp    $0x1,%ax
840018e6:	74 1a                	je     84001902 <_fwalk_reent+0x50>
840018e8:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840018ec:	66 83 f8 ff          	cmp    $0xffff,%ax
840018f0:	74 10                	je     84001902 <_fwalk_reent+0x50>
840018f2:	83 ec 08             	sub    $0x8,%esp
840018f5:	53                   	push   %ebx
840018f6:	ff 75 08             	push   0x8(%ebp)
840018f9:	ff 55 0c             	call   *0xc(%ebp)
840018fc:	83 c4 10             	add    $0x10,%esp
840018ff:	09 45 e4             	or     %eax,-0x1c(%ebp)
84001902:	83 c3 68             	add    $0x68,%ebx
84001905:	83 ef 01             	sub    $0x1,%edi
84001908:	85 ff                	test   %edi,%edi
8400190a:	79 c9                	jns    840018d5 <_fwalk_reent+0x23>
8400190c:	8b 36                	mov    (%esi),%esi
8400190e:	85 f6                	test   %esi,%esi
84001910:	75 bb                	jne    840018cd <_fwalk_reent+0x1b>
84001912:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84001915:	8d 65 f4             	lea    -0xc(%ebp),%esp
84001918:	5b                   	pop    %ebx
84001919:	5e                   	pop    %esi
8400191a:	5f                   	pop    %edi
8400191b:	5d                   	pop    %ebp
8400191c:	c3                   	ret    

8400191d <_getchar_r>:
8400191d:	55                   	push   %ebp
8400191e:	89 e5                	mov    %esp,%ebp
84001920:	83 ec 08             	sub    $0x8,%esp
84001923:	8b 45 08             	mov    0x8(%ebp),%eax
84001926:	8b 40 04             	mov    0x4(%eax),%eax
84001929:	83 ec 08             	sub    $0x8,%esp
8400192c:	50                   	push   %eax
8400192d:	ff 75 08             	push   0x8(%ebp)
84001930:	e8 cc 12 00 00       	call   84002c01 <_getc_r>
84001935:	83 c4 10             	add    $0x10,%esp
84001938:	c9                   	leave  
84001939:	c3                   	ret    

8400193a <getchar>:
8400193a:	55                   	push   %ebp
8400193b:	89 e5                	mov    %esp,%ebp
8400193d:	83 ec 18             	sub    $0x18,%esp
84001940:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84001945:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001948:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400194b:	8b 40 04             	mov    0x4(%eax),%eax
8400194e:	83 ec 08             	sub    $0x8,%esp
84001951:	50                   	push   %eax
84001952:	ff 75 f4             	push   -0xc(%ebp)
84001955:	e8 a7 12 00 00       	call   84002c01 <_getc_r>
8400195a:	83 c4 10             	add    $0x10,%esp
8400195d:	c9                   	leave  
8400195e:	c3                   	ret    

8400195f <__getreent>:
8400195f:	55                   	push   %ebp
84001960:	89 e5                	mov    %esp,%ebp
84001962:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84001967:	5d                   	pop    %ebp
84001968:	c3                   	ret    

84001969 <malloc>:
84001969:	55                   	push   %ebp
8400196a:	89 e5                	mov    %esp,%ebp
8400196c:	83 ec 08             	sub    $0x8,%esp
8400196f:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84001974:	83 ec 08             	sub    $0x8,%esp
84001977:	ff 75 08             	push   0x8(%ebp)
8400197a:	50                   	push   %eax
8400197b:	e8 b5 02 00 00       	call   84001c35 <_malloc_r>
84001980:	83 c4 10             	add    $0x10,%esp
84001983:	c9                   	leave  
84001984:	c3                   	ret    

84001985 <free>:
84001985:	55                   	push   %ebp
84001986:	89 e5                	mov    %esp,%ebp
84001988:	83 ec 08             	sub    $0x8,%esp
8400198b:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84001990:	83 ec 08             	sub    $0x8,%esp
84001993:	ff 75 08             	push   0x8(%ebp)
84001996:	50                   	push   %eax
84001997:	e8 72 f9 ff ff       	call   8400130e <_free_r>
8400199c:	83 c4 10             	add    $0x10,%esp
8400199f:	90                   	nop
840019a0:	c9                   	leave  
840019a1:	c3                   	ret    

840019a2 <malloc_extend_top>:
840019a2:	55                   	push   %ebp
840019a3:	89 e5                	mov    %esp,%ebp
840019a5:	83 ec 38             	sub    $0x38,%esp
840019a8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840019af:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840019b4:	8b 40 08             	mov    0x8(%eax),%eax
840019b7:	89 45 e0             	mov    %eax,-0x20(%ebp)
840019ba:	8b 45 e0             	mov    -0x20(%ebp),%eax
840019bd:	8b 40 04             	mov    0x4(%eax),%eax
840019c0:	83 e0 fc             	and    $0xfffffffc,%eax
840019c3:	89 45 dc             	mov    %eax,-0x24(%ebp)
840019c6:	8b 55 e0             	mov    -0x20(%ebp),%edx
840019c9:	8b 45 dc             	mov    -0x24(%ebp),%eax
840019cc:	01 d0                	add    %edx,%eax
840019ce:	89 45 d8             	mov    %eax,-0x28(%ebp)
840019d1:	8b 15 c0 63 00 84    	mov    0x840063c0,%edx
840019d7:	8b 45 0c             	mov    0xc(%ebp),%eax
840019da:	01 d0                	add    %edx,%eax
840019dc:	83 c0 10             	add    $0x10,%eax
840019df:	89 45 e8             	mov    %eax,-0x18(%ebp)
840019e2:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
840019e9:	a1 0c 62 00 84       	mov    0x8400620c,%eax
840019ee:	83 f8 ff             	cmp    $0xffffffff,%eax
840019f1:	74 15                	je     84001a08 <malloc_extend_top+0x66>
840019f3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
840019f6:	8b 45 e8             	mov    -0x18(%ebp),%eax
840019f9:	01 d0                	add    %edx,%eax
840019fb:	8d 50 ff             	lea    -0x1(%eax),%edx
840019fe:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001a01:	f7 d8                	neg    %eax
84001a03:	21 d0                	and    %edx,%eax
84001a05:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001a08:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001a0b:	83 ec 08             	sub    $0x8,%esp
84001a0e:	50                   	push   %eax
84001a0f:	ff 75 08             	push   0x8(%ebp)
84001a12:	e8 c7 0b 00 00       	call   840025de <_sbrk_r>
84001a17:	83 c4 10             	add    $0x10,%esp
84001a1a:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001a1d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84001a21:	0f 84 0b 02 00 00    	je     84001c32 <malloc_extend_top+0x290>
84001a27:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a2a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84001a2d:	73 0e                	jae    84001a3d <malloc_extend_top+0x9b>
84001a2f:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001a34:	39 45 e0             	cmp    %eax,-0x20(%ebp)
84001a37:	0f 85 f5 01 00 00    	jne    84001c32 <malloc_extend_top+0x290>
84001a3d:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001a42:	89 c2                	mov    %eax,%edx
84001a44:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001a47:	01 d0                	add    %edx,%eax
84001a49:	a3 e0 63 00 84       	mov    %eax,0x840063e0
84001a4e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a51:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84001a54:	75 30                	jne    84001a86 <malloc_extend_top+0xe4>
84001a56:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001a59:	8d 50 ff             	lea    -0x1(%eax),%edx
84001a5c:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001a5f:	21 d0                	and    %edx,%eax
84001a61:	85 c0                	test   %eax,%eax
84001a63:	75 21                	jne    84001a86 <malloc_extend_top+0xe4>
84001a65:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001a68:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001a6b:	01 d0                	add    %edx,%eax
84001a6d:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001a70:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001a75:	8b 40 08             	mov    0x8(%eax),%eax
84001a78:	8b 55 d0             	mov    -0x30(%ebp),%edx
84001a7b:	83 ca 01             	or     $0x1,%edx
84001a7e:	89 50 04             	mov    %edx,0x4(%eax)
84001a81:	e9 76 01 00 00       	jmp    84001bfc <malloc_extend_top+0x25a>
84001a86:	a1 0c 62 00 84       	mov    0x8400620c,%eax
84001a8b:	83 f8 ff             	cmp    $0xffffffff,%eax
84001a8e:	75 0a                	jne    84001a9a <malloc_extend_top+0xf8>
84001a90:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a93:	a3 0c 62 00 84       	mov    %eax,0x8400620c
84001a98:	eb 13                	jmp    84001aad <malloc_extend_top+0x10b>
84001a9a:	8b 15 e0 63 00 84    	mov    0x840063e0,%edx
84001aa0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001aa3:	2b 45 d8             	sub    -0x28(%ebp),%eax
84001aa6:	01 d0                	add    %edx,%eax
84001aa8:	a3 e0 63 00 84       	mov    %eax,0x840063e0
84001aad:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ab0:	83 c0 08             	add    $0x8,%eax
84001ab3:	83 e0 07             	and    $0x7,%eax
84001ab6:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001ab9:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
84001abd:	74 13                	je     84001ad2 <malloc_extend_top+0x130>
84001abf:	b8 08 00 00 00       	mov    $0x8,%eax
84001ac4:	2b 45 cc             	sub    -0x34(%ebp),%eax
84001ac7:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001aca:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001acd:	01 45 f4             	add    %eax,-0xc(%ebp)
84001ad0:	eb 07                	jmp    84001ad9 <malloc_extend_top+0x137>
84001ad2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84001ad9:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001adc:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001adf:	01 d0                	add    %edx,%eax
84001ae1:	89 c2                	mov    %eax,%edx
84001ae3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001ae6:	83 e8 01             	sub    $0x1,%eax
84001ae9:	21 c2                	and    %eax,%edx
84001aeb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001aee:	29 d0                	sub    %edx,%eax
84001af0:	01 45 f0             	add    %eax,-0x10(%ebp)
84001af3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001af6:	83 e8 01             	sub    $0x1,%eax
84001af9:	21 45 f0             	and    %eax,-0x10(%ebp)
84001afc:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001aff:	83 ec 08             	sub    $0x8,%esp
84001b02:	50                   	push   %eax
84001b03:	ff 75 08             	push   0x8(%ebp)
84001b06:	e8 d3 0a 00 00       	call   840025de <_sbrk_r>
84001b0b:	83 c4 10             	add    $0x10,%esp
84001b0e:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001b11:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
84001b15:	75 28                	jne    84001b3f <malloc_extend_top+0x19d>
84001b17:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84001b1e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84001b25:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001b28:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001b2b:	01 d0                	add    %edx,%eax
84001b2d:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001b30:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
84001b34:	74 09                	je     84001b3f <malloc_extend_top+0x19d>
84001b36:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001b39:	83 e8 08             	sub    $0x8,%eax
84001b3c:	01 45 ec             	add    %eax,-0x14(%ebp)
84001b3f:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001b44:	89 c2                	mov    %eax,%edx
84001b46:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b49:	01 d0                	add    %edx,%eax
84001b4b:	a3 e0 63 00 84       	mov    %eax,0x840063e0
84001b50:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84001b55:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001b58:	89 42 08             	mov    %eax,0x8(%edx)
84001b5b:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001b5e:	2b 45 f4             	sub    -0xc(%ebp),%eax
84001b61:	89 c2                	mov    %eax,%edx
84001b63:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b66:	01 d0                	add    %edx,%eax
84001b68:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001b6b:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001b70:	8b 40 08             	mov    0x8(%eax),%eax
84001b73:	8b 55 d0             	mov    -0x30(%ebp),%edx
84001b76:	83 ca 01             	or     $0x1,%edx
84001b79:	89 50 04             	mov    %edx,0x4(%eax)
84001b7c:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001b81:	39 45 e0             	cmp    %eax,-0x20(%ebp)
84001b84:	74 76                	je     84001bfc <malloc_extend_top+0x25a>
84001b86:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
84001b8a:	77 14                	ja     84001ba0 <malloc_extend_top+0x1fe>
84001b8c:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001b91:	8b 40 08             	mov    0x8(%eax),%eax
84001b94:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
84001b9b:	e9 93 00 00 00       	jmp    84001c33 <malloc_extend_top+0x291>
84001ba0:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001ba3:	83 e8 0c             	sub    $0xc,%eax
84001ba6:	83 e0 f8             	and    $0xfffffff8,%eax
84001ba9:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001bac:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001baf:	8b 40 04             	mov    0x4(%eax),%eax
84001bb2:	83 e0 01             	and    $0x1,%eax
84001bb5:	0b 45 dc             	or     -0x24(%ebp),%eax
84001bb8:	89 c2                	mov    %eax,%edx
84001bba:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bbd:	89 50 04             	mov    %edx,0x4(%eax)
84001bc0:	8b 55 e0             	mov    -0x20(%ebp),%edx
84001bc3:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001bc6:	01 d0                	add    %edx,%eax
84001bc8:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
84001bcf:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001bd2:	8d 50 04             	lea    0x4(%eax),%edx
84001bd5:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bd8:	01 d0                	add    %edx,%eax
84001bda:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
84001be1:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
84001be5:	76 15                	jbe    84001bfc <malloc_extend_top+0x25a>
84001be7:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bea:	83 c0 08             	add    $0x8,%eax
84001bed:	83 ec 08             	sub    $0x8,%esp
84001bf0:	50                   	push   %eax
84001bf1:	ff 75 08             	push   0x8(%ebp)
84001bf4:	e8 15 f7 ff ff       	call   8400130e <_free_r>
84001bf9:	83 c4 10             	add    $0x10,%esp
84001bfc:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001c01:	89 c2                	mov    %eax,%edx
84001c03:	a1 c4 63 00 84       	mov    0x840063c4,%eax
84001c08:	39 c2                	cmp    %eax,%edx
84001c0a:	76 0a                	jbe    84001c16 <malloc_extend_top+0x274>
84001c0c:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001c11:	a3 c4 63 00 84       	mov    %eax,0x840063c4
84001c16:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001c1b:	89 c2                	mov    %eax,%edx
84001c1d:	a1 c8 63 00 84       	mov    0x840063c8,%eax
84001c22:	39 c2                	cmp    %eax,%edx
84001c24:	76 0d                	jbe    84001c33 <malloc_extend_top+0x291>
84001c26:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001c2b:	a3 c8 63 00 84       	mov    %eax,0x840063c8
84001c30:	eb 01                	jmp    84001c33 <malloc_extend_top+0x291>
84001c32:	90                   	nop
84001c33:	c9                   	leave  
84001c34:	c3                   	ret    

84001c35 <_malloc_r>:
84001c35:	55                   	push   %ebp
84001c36:	89 e5                	mov    %esp,%ebp
84001c38:	53                   	push   %ebx
84001c39:	83 ec 44             	sub    $0x44,%esp
84001c3c:	8b 45 0c             	mov    0xc(%ebp),%eax
84001c3f:	83 c0 0b             	add    $0xb,%eax
84001c42:	83 f8 16             	cmp    $0x16,%eax
84001c45:	76 0b                	jbe    84001c52 <_malloc_r+0x1d>
84001c47:	8b 45 0c             	mov    0xc(%ebp),%eax
84001c4a:	83 c0 0b             	add    $0xb,%eax
84001c4d:	83 e0 f8             	and    $0xfffffff8,%eax
84001c50:	eb 05                	jmp    84001c57 <_malloc_r+0x22>
84001c52:	b8 10 00 00 00       	mov    $0x10,%eax
84001c57:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001c5a:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c5d:	85 c0                	test   %eax,%eax
84001c5f:	78 08                	js     84001c69 <_malloc_r+0x34>
84001c61:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c64:	3b 45 0c             	cmp    0xc(%ebp),%eax
84001c67:	73 13                	jae    84001c7c <_malloc_r+0x47>
84001c69:	8b 45 08             	mov    0x8(%ebp),%eax
84001c6c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
84001c72:	b8 00 00 00 00       	mov    $0x0,%eax
84001c77:	e9 d6 07 00 00       	jmp    84002452 <_malloc_r+0x81d>
84001c7c:	83 ec 0c             	sub    $0xc,%esp
84001c7f:	ff 75 08             	push   0x8(%ebp)
84001c82:	e8 58 08 00 00       	call   840024df <__malloc_lock>
84001c87:	83 c4 10             	add    $0x10,%esp
84001c8a:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
84001c91:	0f 87 b0 00 00 00    	ja     84001d47 <_malloc_r+0x112>
84001c97:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c9a:	c1 e8 03             	shr    $0x3,%eax
84001c9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001ca0:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001ca3:	83 c0 01             	add    $0x1,%eax
84001ca6:	01 c0                	add    %eax,%eax
84001ca8:	c1 e0 02             	shl    $0x2,%eax
84001cab:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001cb0:	83 e8 08             	sub    $0x8,%eax
84001cb3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001cb6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001cb9:	8b 40 0c             	mov    0xc(%eax),%eax
84001cbc:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001cbf:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cc2:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
84001cc5:	75 0d                	jne    84001cd4 <_malloc_r+0x9f>
84001cc7:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
84001ccb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001cce:	8b 40 0c             	mov    0xc(%eax),%eax
84001cd1:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001cd4:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cd7:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
84001cda:	74 62                	je     84001d3e <_malloc_r+0x109>
84001cdc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cdf:	8b 40 04             	mov    0x4(%eax),%eax
84001ce2:	83 e0 fc             	and    $0xfffffffc,%eax
84001ce5:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001ce8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ceb:	8b 40 0c             	mov    0xc(%eax),%eax
84001cee:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001cf1:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cf4:	8b 40 08             	mov    0x8(%eax),%eax
84001cf7:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001cfa:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001cfd:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001d00:	89 50 0c             	mov    %edx,0xc(%eax)
84001d03:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001d06:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001d09:	89 50 08             	mov    %edx,0x8(%eax)
84001d0c:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001d0f:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001d12:	01 d0                	add    %edx,%eax
84001d14:	8b 50 04             	mov    0x4(%eax),%edx
84001d17:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001d1a:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001d1d:	01 c8                	add    %ecx,%eax
84001d1f:	83 ca 01             	or     $0x1,%edx
84001d22:	89 50 04             	mov    %edx,0x4(%eax)
84001d25:	83 ec 0c             	sub    $0xc,%esp
84001d28:	ff 75 08             	push   0x8(%ebp)
84001d2b:	e8 b5 07 00 00       	call   840024e5 <__malloc_unlock>
84001d30:	83 c4 10             	add    $0x10,%esp
84001d33:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001d36:	83 c0 08             	add    $0x8,%eax
84001d39:	e9 14 07 00 00       	jmp    84002452 <_malloc_r+0x81d>
84001d3e:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
84001d42:	e9 46 01 00 00       	jmp    84001e8d <_malloc_r+0x258>
84001d47:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d4a:	c1 e8 09             	shr    $0x9,%eax
84001d4d:	85 c0                	test   %eax,%eax
84001d4f:	75 08                	jne    84001d59 <_malloc_r+0x124>
84001d51:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d54:	c1 e8 03             	shr    $0x3,%eax
84001d57:	eb 77                	jmp    84001dd0 <_malloc_r+0x19b>
84001d59:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d5c:	c1 e8 09             	shr    $0x9,%eax
84001d5f:	83 f8 04             	cmp    $0x4,%eax
84001d62:	77 0b                	ja     84001d6f <_malloc_r+0x13a>
84001d64:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d67:	c1 e8 06             	shr    $0x6,%eax
84001d6a:	83 c0 38             	add    $0x38,%eax
84001d6d:	eb 61                	jmp    84001dd0 <_malloc_r+0x19b>
84001d6f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d72:	c1 e8 09             	shr    $0x9,%eax
84001d75:	83 f8 14             	cmp    $0x14,%eax
84001d78:	77 0b                	ja     84001d85 <_malloc_r+0x150>
84001d7a:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d7d:	c1 e8 09             	shr    $0x9,%eax
84001d80:	83 c0 5b             	add    $0x5b,%eax
84001d83:	eb 4b                	jmp    84001dd0 <_malloc_r+0x19b>
84001d85:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d88:	c1 e8 09             	shr    $0x9,%eax
84001d8b:	83 f8 54             	cmp    $0x54,%eax
84001d8e:	77 0b                	ja     84001d9b <_malloc_r+0x166>
84001d90:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d93:	c1 e8 0c             	shr    $0xc,%eax
84001d96:	83 c0 6e             	add    $0x6e,%eax
84001d99:	eb 35                	jmp    84001dd0 <_malloc_r+0x19b>
84001d9b:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d9e:	c1 e8 09             	shr    $0x9,%eax
84001da1:	3d 54 01 00 00       	cmp    $0x154,%eax
84001da6:	77 0b                	ja     84001db3 <_malloc_r+0x17e>
84001da8:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001dab:	c1 e8 0f             	shr    $0xf,%eax
84001dae:	83 c0 77             	add    $0x77,%eax
84001db1:	eb 1d                	jmp    84001dd0 <_malloc_r+0x19b>
84001db3:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001db6:	c1 e8 09             	shr    $0x9,%eax
84001db9:	3d 54 05 00 00       	cmp    $0x554,%eax
84001dbe:	77 0b                	ja     84001dcb <_malloc_r+0x196>
84001dc0:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001dc3:	c1 e8 12             	shr    $0x12,%eax
84001dc6:	83 c0 7c             	add    $0x7c,%eax
84001dc9:	eb 05                	jmp    84001dd0 <_malloc_r+0x19b>
84001dcb:	b8 7e 00 00 00       	mov    $0x7e,%eax
84001dd0:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001dd3:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001dd6:	83 c0 01             	add    $0x1,%eax
84001dd9:	01 c0                	add    %eax,%eax
84001ddb:	c1 e0 02             	shl    $0x2,%eax
84001dde:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001de3:	83 e8 08             	sub    $0x8,%eax
84001de6:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001de9:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001dec:	8b 40 0c             	mov    0xc(%eax),%eax
84001def:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001df2:	e9 86 00 00 00       	jmp    84001e7d <_malloc_r+0x248>
84001df7:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001dfa:	8b 40 04             	mov    0x4(%eax),%eax
84001dfd:	83 e0 fc             	and    $0xfffffffc,%eax
84001e00:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001e03:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e06:	2b 45 d0             	sub    -0x30(%ebp),%eax
84001e09:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001e0c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
84001e10:	7e 06                	jle    84001e18 <_malloc_r+0x1e3>
84001e12:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
84001e16:	eb 71                	jmp    84001e89 <_malloc_r+0x254>
84001e18:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84001e1c:	78 56                	js     84001e74 <_malloc_r+0x23f>
84001e1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e21:	8b 40 0c             	mov    0xc(%eax),%eax
84001e24:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001e27:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e2a:	8b 40 08             	mov    0x8(%eax),%eax
84001e2d:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001e30:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001e33:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001e36:	89 50 0c             	mov    %edx,0xc(%eax)
84001e39:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001e3c:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001e3f:	89 50 08             	mov    %edx,0x8(%eax)
84001e42:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001e45:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e48:	01 d0                	add    %edx,%eax
84001e4a:	8b 50 04             	mov    0x4(%eax),%edx
84001e4d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001e50:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e53:	01 c8                	add    %ecx,%eax
84001e55:	83 ca 01             	or     $0x1,%edx
84001e58:	89 50 04             	mov    %edx,0x4(%eax)
84001e5b:	83 ec 0c             	sub    $0xc,%esp
84001e5e:	ff 75 08             	push   0x8(%ebp)
84001e61:	e8 7f 06 00 00       	call   840024e5 <__malloc_unlock>
84001e66:	83 c4 10             	add    $0x10,%esp
84001e69:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e6c:	83 c0 08             	add    $0x8,%eax
84001e6f:	e9 de 05 00 00       	jmp    84002452 <_malloc_r+0x81d>
84001e74:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e77:	8b 40 0c             	mov    0xc(%eax),%eax
84001e7a:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001e7d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e80:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84001e83:	0f 85 6e ff ff ff    	jne    84001df7 <_malloc_r+0x1c2>
84001e89:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84001e8d:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84001e92:	8b 40 08             	mov    0x8(%eax),%eax
84001e95:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001e98:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84001e9d:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84001ea0:	0f 84 9c 02 00 00    	je     84002142 <_malloc_r+0x50d>
84001ea6:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ea9:	8b 40 04             	mov    0x4(%eax),%eax
84001eac:	83 e0 fc             	and    $0xfffffffc,%eax
84001eaf:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001eb2:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001eb5:	2b 45 d0             	sub    -0x30(%ebp),%eax
84001eb8:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001ebb:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
84001ebf:	7e 7a                	jle    84001f3b <_malloc_r+0x306>
84001ec1:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001ec4:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001ec7:	01 d0                	add    %edx,%eax
84001ec9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
84001ecc:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001ecf:	83 c8 01             	or     $0x1,%eax
84001ed2:	89 c2                	mov    %eax,%edx
84001ed4:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ed7:	89 50 04             	mov    %edx,0x4(%eax)
84001eda:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84001edf:	8b 55 c4             	mov    -0x3c(%ebp),%edx
84001ee2:	89 50 0c             	mov    %edx,0xc(%eax)
84001ee5:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001eea:	8b 40 0c             	mov    0xc(%eax),%eax
84001eed:	89 42 08             	mov    %eax,0x8(%edx)
84001ef0:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001ef5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001ef8:	89 50 0c             	mov    %edx,0xc(%eax)
84001efb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001efe:	8b 50 0c             	mov    0xc(%eax),%edx
84001f01:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f04:	89 50 08             	mov    %edx,0x8(%eax)
84001f07:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001f0a:	83 c8 01             	or     $0x1,%eax
84001f0d:	89 c2                	mov    %eax,%edx
84001f0f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f12:	89 50 04             	mov    %edx,0x4(%eax)
84001f15:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001f18:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f1b:	01 c2                	add    %eax,%edx
84001f1d:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001f20:	89 02                	mov    %eax,(%edx)
84001f22:	83 ec 0c             	sub    $0xc,%esp
84001f25:	ff 75 08             	push   0x8(%ebp)
84001f28:	e8 b8 05 00 00       	call   840024e5 <__malloc_unlock>
84001f2d:	83 c4 10             	add    $0x10,%esp
84001f30:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001f33:	83 c0 08             	add    $0x8,%eax
84001f36:	e9 17 05 00 00       	jmp    84002452 <_malloc_r+0x81d>
84001f3b:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84001f40:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001f45:	89 50 0c             	mov    %edx,0xc(%eax)
84001f48:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001f4d:	8b 40 0c             	mov    0xc(%eax),%eax
84001f50:	89 42 08             	mov    %eax,0x8(%edx)
84001f53:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84001f57:	78 32                	js     84001f8b <_malloc_r+0x356>
84001f59:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001f5c:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f5f:	01 d0                	add    %edx,%eax
84001f61:	8b 50 04             	mov    0x4(%eax),%edx
84001f64:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001f67:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f6a:	01 c8                	add    %ecx,%eax
84001f6c:	83 ca 01             	or     $0x1,%edx
84001f6f:	89 50 04             	mov    %edx,0x4(%eax)
84001f72:	83 ec 0c             	sub    $0xc,%esp
84001f75:	ff 75 08             	push   0x8(%ebp)
84001f78:	e8 68 05 00 00       	call   840024e5 <__malloc_unlock>
84001f7d:	83 c4 10             	add    $0x10,%esp
84001f80:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001f83:	83 c0 08             	add    $0x8,%eax
84001f86:	e9 c7 04 00 00       	jmp    84002452 <_malloc_r+0x81d>
84001f8b:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
84001f92:	77 7f                	ja     84002013 <_malloc_r+0x3de>
84001f94:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f97:	c1 e8 03             	shr    $0x3,%eax
84001f9a:	89 45 c8             	mov    %eax,-0x38(%ebp)
84001f9d:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001fa2:	8b 58 04             	mov    0x4(%eax),%ebx
84001fa5:	8b 45 c8             	mov    -0x38(%ebp),%eax
84001fa8:	8d 50 03             	lea    0x3(%eax),%edx
84001fab:	85 c0                	test   %eax,%eax
84001fad:	0f 48 c2             	cmovs  %edx,%eax
84001fb0:	c1 f8 02             	sar    $0x2,%eax
84001fb3:	ba 01 00 00 00       	mov    $0x1,%edx
84001fb8:	89 c1                	mov    %eax,%ecx
84001fba:	d3 e2                	shl    %cl,%edx
84001fbc:	89 d0                	mov    %edx,%eax
84001fbe:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84001fc3:	09 d8                	or     %ebx,%eax
84001fc5:	89 42 04             	mov    %eax,0x4(%edx)
84001fc8:	8b 45 c8             	mov    -0x38(%ebp),%eax
84001fcb:	83 c0 01             	add    $0x1,%eax
84001fce:	01 c0                	add    %eax,%eax
84001fd0:	c1 e0 02             	shl    $0x2,%eax
84001fd3:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001fd8:	83 e8 08             	sub    $0x8,%eax
84001fdb:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001fde:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001fe1:	8b 40 08             	mov    0x8(%eax),%eax
84001fe4:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001fe7:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001fea:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001fed:	89 50 0c             	mov    %edx,0xc(%eax)
84001ff0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ff3:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001ff6:	89 50 08             	mov    %edx,0x8(%eax)
84001ff9:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001ffc:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001fff:	89 50 08             	mov    %edx,0x8(%eax)
84002002:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002005:	8b 50 08             	mov    0x8(%eax),%edx
84002008:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400200b:	89 50 0c             	mov    %edx,0xc(%eax)
8400200e:	e9 2f 01 00 00       	jmp    84002142 <_malloc_r+0x50d>
84002013:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002016:	c1 e8 09             	shr    $0x9,%eax
84002019:	85 c0                	test   %eax,%eax
8400201b:	75 08                	jne    84002025 <_malloc_r+0x3f0>
8400201d:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002020:	c1 e8 03             	shr    $0x3,%eax
84002023:	eb 77                	jmp    8400209c <_malloc_r+0x467>
84002025:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002028:	c1 e8 09             	shr    $0x9,%eax
8400202b:	83 f8 04             	cmp    $0x4,%eax
8400202e:	77 0b                	ja     8400203b <_malloc_r+0x406>
84002030:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002033:	c1 e8 06             	shr    $0x6,%eax
84002036:	83 c0 38             	add    $0x38,%eax
84002039:	eb 61                	jmp    8400209c <_malloc_r+0x467>
8400203b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400203e:	c1 e8 09             	shr    $0x9,%eax
84002041:	83 f8 14             	cmp    $0x14,%eax
84002044:	77 0b                	ja     84002051 <_malloc_r+0x41c>
84002046:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002049:	c1 e8 09             	shr    $0x9,%eax
8400204c:	83 c0 5b             	add    $0x5b,%eax
8400204f:	eb 4b                	jmp    8400209c <_malloc_r+0x467>
84002051:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002054:	c1 e8 09             	shr    $0x9,%eax
84002057:	83 f8 54             	cmp    $0x54,%eax
8400205a:	77 0b                	ja     84002067 <_malloc_r+0x432>
8400205c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400205f:	c1 e8 0c             	shr    $0xc,%eax
84002062:	83 c0 6e             	add    $0x6e,%eax
84002065:	eb 35                	jmp    8400209c <_malloc_r+0x467>
84002067:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400206a:	c1 e8 09             	shr    $0x9,%eax
8400206d:	3d 54 01 00 00       	cmp    $0x154,%eax
84002072:	77 0b                	ja     8400207f <_malloc_r+0x44a>
84002074:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002077:	c1 e8 0f             	shr    $0xf,%eax
8400207a:	83 c0 77             	add    $0x77,%eax
8400207d:	eb 1d                	jmp    8400209c <_malloc_r+0x467>
8400207f:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002082:	c1 e8 09             	shr    $0x9,%eax
84002085:	3d 54 05 00 00       	cmp    $0x554,%eax
8400208a:	77 0b                	ja     84002097 <_malloc_r+0x462>
8400208c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400208f:	c1 e8 12             	shr    $0x12,%eax
84002092:	83 c0 7c             	add    $0x7c,%eax
84002095:	eb 05                	jmp    8400209c <_malloc_r+0x467>
84002097:	b8 7e 00 00 00       	mov    $0x7e,%eax
8400209c:	89 45 c8             	mov    %eax,-0x38(%ebp)
8400209f:	8b 45 c8             	mov    -0x38(%ebp),%eax
840020a2:	83 c0 01             	add    $0x1,%eax
840020a5:	01 c0                	add    %eax,%eax
840020a7:	c1 e0 02             	shl    $0x2,%eax
840020aa:	05 00 5e 00 84       	add    $0x84005e00,%eax
840020af:	83 e8 08             	sub    $0x8,%eax
840020b2:	89 45 d8             	mov    %eax,-0x28(%ebp)
840020b5:	8b 45 d8             	mov    -0x28(%ebp),%eax
840020b8:	8b 40 08             	mov    0x8(%eax),%eax
840020bb:	89 45 dc             	mov    %eax,-0x24(%ebp)
840020be:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020c1:	3b 45 d8             	cmp    -0x28(%ebp),%eax
840020c4:	75 36                	jne    840020fc <_malloc_r+0x4c7>
840020c6:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840020cb:	8b 58 04             	mov    0x4(%eax),%ebx
840020ce:	8b 45 c8             	mov    -0x38(%ebp),%eax
840020d1:	8d 50 03             	lea    0x3(%eax),%edx
840020d4:	85 c0                	test   %eax,%eax
840020d6:	0f 48 c2             	cmovs  %edx,%eax
840020d9:	c1 f8 02             	sar    $0x2,%eax
840020dc:	ba 01 00 00 00       	mov    $0x1,%edx
840020e1:	89 c1                	mov    %eax,%ecx
840020e3:	d3 e2                	shl    %cl,%edx
840020e5:	89 d0                	mov    %edx,%eax
840020e7:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
840020ec:	09 d8                	or     %ebx,%eax
840020ee:	89 42 04             	mov    %eax,0x4(%edx)
840020f1:	eb 28                	jmp    8400211b <_malloc_r+0x4e6>
840020f3:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020f6:	8b 40 08             	mov    0x8(%eax),%eax
840020f9:	89 45 dc             	mov    %eax,-0x24(%ebp)
840020fc:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020ff:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84002102:	74 0e                	je     84002112 <_malloc_r+0x4dd>
84002104:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002107:	8b 40 04             	mov    0x4(%eax),%eax
8400210a:	83 e0 fc             	and    $0xfffffffc,%eax
8400210d:	39 45 cc             	cmp    %eax,-0x34(%ebp)
84002110:	72 e1                	jb     840020f3 <_malloc_r+0x4be>
84002112:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002115:	8b 40 0c             	mov    0xc(%eax),%eax
84002118:	89 45 d8             	mov    %eax,-0x28(%ebp)
8400211b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400211e:	8b 55 d8             	mov    -0x28(%ebp),%edx
84002121:	89 50 0c             	mov    %edx,0xc(%eax)
84002124:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002127:	8b 55 dc             	mov    -0x24(%ebp),%edx
8400212a:	89 50 08             	mov    %edx,0x8(%eax)
8400212d:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002130:	8b 55 f4             	mov    -0xc(%ebp),%edx
84002133:	89 50 08             	mov    %edx,0x8(%eax)
84002136:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002139:	8b 50 08             	mov    0x8(%eax),%edx
8400213c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400213f:	89 50 0c             	mov    %edx,0xc(%eax)
84002142:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002145:	8d 50 03             	lea    0x3(%eax),%edx
84002148:	85 c0                	test   %eax,%eax
8400214a:	0f 48 c2             	cmovs  %edx,%eax
8400214d:	c1 f8 02             	sar    $0x2,%eax
84002150:	ba 01 00 00 00       	mov    $0x1,%edx
84002155:	89 c1                	mov    %eax,%ecx
84002157:	d3 e2                	shl    %cl,%edx
84002159:	89 d0                	mov    %edx,%eax
8400215b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8400215e:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002163:	8b 40 04             	mov    0x4(%eax),%eax
84002166:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
84002169:	0f 87 13 02 00 00    	ja     84002382 <_malloc_r+0x74d>
8400216f:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002174:	8b 40 04             	mov    0x4(%eax),%eax
84002177:	23 45 e4             	and    -0x1c(%ebp),%eax
8400217a:	85 c0                	test   %eax,%eax
8400217c:	75 27                	jne    840021a5 <_malloc_r+0x570>
8400217e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002181:	83 e0 fc             	and    $0xfffffffc,%eax
84002184:	83 c0 04             	add    $0x4,%eax
84002187:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400218a:	d1 65 e4             	shll   -0x1c(%ebp)
8400218d:	eb 07                	jmp    84002196 <_malloc_r+0x561>
8400218f:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
84002193:	d1 65 e4             	shll   -0x1c(%ebp)
84002196:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400219b:	8b 40 04             	mov    0x4(%eax),%eax
8400219e:	23 45 e4             	and    -0x1c(%ebp),%eax
840021a1:	85 c0                	test   %eax,%eax
840021a3:	74 ea                	je     8400218f <_malloc_r+0x55a>
840021a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
840021a8:	89 45 e0             	mov    %eax,-0x20(%ebp)
840021ab:	8b 45 f0             	mov    -0x10(%ebp),%eax
840021ae:	83 c0 01             	add    $0x1,%eax
840021b1:	01 c0                	add    %eax,%eax
840021b3:	c1 e0 02             	shl    $0x2,%eax
840021b6:	05 00 5e 00 84       	add    $0x84005e00,%eax
840021bb:	83 e8 08             	sub    $0x8,%eax
840021be:	89 45 ec             	mov    %eax,-0x14(%ebp)
840021c1:	8b 45 ec             	mov    -0x14(%ebp),%eax
840021c4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
840021c7:	8b 45 ec             	mov    -0x14(%ebp),%eax
840021ca:	8b 40 0c             	mov    0xc(%eax),%eax
840021cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
840021d0:	e9 22 01 00 00       	jmp    840022f7 <_malloc_r+0x6c2>
840021d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021d8:	8b 40 04             	mov    0x4(%eax),%eax
840021db:	83 e0 fc             	and    $0xfffffffc,%eax
840021de:	89 45 cc             	mov    %eax,-0x34(%ebp)
840021e1:	8b 45 cc             	mov    -0x34(%ebp),%eax
840021e4:	2b 45 d0             	sub    -0x30(%ebp),%eax
840021e7:	89 45 e8             	mov    %eax,-0x18(%ebp)
840021ea:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840021ee:	0f 8e 9e 00 00 00    	jle    84002292 <_malloc_r+0x65d>
840021f4:	8b 55 f4             	mov    -0xc(%ebp),%edx
840021f7:	8b 45 d0             	mov    -0x30(%ebp),%eax
840021fa:	01 d0                	add    %edx,%eax
840021fc:	89 45 c4             	mov    %eax,-0x3c(%ebp)
840021ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
84002202:	83 c8 01             	or     $0x1,%eax
84002205:	89 c2                	mov    %eax,%edx
84002207:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400220a:	89 50 04             	mov    %edx,0x4(%eax)
8400220d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002210:	8b 40 0c             	mov    0xc(%eax),%eax
84002213:	89 45 d8             	mov    %eax,-0x28(%ebp)
84002216:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002219:	8b 40 08             	mov    0x8(%eax),%eax
8400221c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400221f:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002222:	8b 55 d8             	mov    -0x28(%ebp),%edx
84002225:	89 50 0c             	mov    %edx,0xc(%eax)
84002228:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400222b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8400222e:	89 50 08             	mov    %edx,0x8(%eax)
84002231:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84002236:	8b 55 c4             	mov    -0x3c(%ebp),%edx
84002239:	89 50 0c             	mov    %edx,0xc(%eax)
8400223c:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84002241:	8b 40 0c             	mov    0xc(%eax),%eax
84002244:	89 42 08             	mov    %eax,0x8(%edx)
84002247:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
8400224c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400224f:	89 50 0c             	mov    %edx,0xc(%eax)
84002252:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002255:	8b 50 0c             	mov    0xc(%eax),%edx
84002258:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400225b:	89 50 08             	mov    %edx,0x8(%eax)
8400225e:	8b 45 e8             	mov    -0x18(%ebp),%eax
84002261:	83 c8 01             	or     $0x1,%eax
84002264:	89 c2                	mov    %eax,%edx
84002266:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002269:	89 50 04             	mov    %edx,0x4(%eax)
8400226c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400226f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002272:	01 c2                	add    %eax,%edx
84002274:	8b 45 e8             	mov    -0x18(%ebp),%eax
84002277:	89 02                	mov    %eax,(%edx)
84002279:	83 ec 0c             	sub    $0xc,%esp
8400227c:	ff 75 08             	push   0x8(%ebp)
8400227f:	e8 61 02 00 00       	call   840024e5 <__malloc_unlock>
84002284:	83 c4 10             	add    $0x10,%esp
84002287:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400228a:	83 c0 08             	add    $0x8,%eax
8400228d:	e9 c0 01 00 00       	jmp    84002452 <_malloc_r+0x81d>
84002292:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84002296:	78 56                	js     840022ee <_malloc_r+0x6b9>
84002298:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400229b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400229e:	01 d0                	add    %edx,%eax
840022a0:	8b 50 04             	mov    0x4(%eax),%edx
840022a3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
840022a6:	8b 45 cc             	mov    -0x34(%ebp),%eax
840022a9:	01 c8                	add    %ecx,%eax
840022ab:	83 ca 01             	or     $0x1,%edx
840022ae:	89 50 04             	mov    %edx,0x4(%eax)
840022b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022b4:	8b 40 0c             	mov    0xc(%eax),%eax
840022b7:	89 45 d8             	mov    %eax,-0x28(%ebp)
840022ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022bd:	8b 40 08             	mov    0x8(%eax),%eax
840022c0:	89 45 dc             	mov    %eax,-0x24(%ebp)
840022c3:	8b 45 dc             	mov    -0x24(%ebp),%eax
840022c6:	8b 55 d8             	mov    -0x28(%ebp),%edx
840022c9:	89 50 0c             	mov    %edx,0xc(%eax)
840022cc:	8b 45 d8             	mov    -0x28(%ebp),%eax
840022cf:	8b 55 dc             	mov    -0x24(%ebp),%edx
840022d2:	89 50 08             	mov    %edx,0x8(%eax)
840022d5:	83 ec 0c             	sub    $0xc,%esp
840022d8:	ff 75 08             	push   0x8(%ebp)
840022db:	e8 05 02 00 00       	call   840024e5 <__malloc_unlock>
840022e0:	83 c4 10             	add    $0x10,%esp
840022e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022e6:	83 c0 08             	add    $0x8,%eax
840022e9:	e9 64 01 00 00       	jmp    84002452 <_malloc_r+0x81d>
840022ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022f1:	8b 40 0c             	mov    0xc(%eax),%eax
840022f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
840022f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022fa:	3b 45 ec             	cmp    -0x14(%ebp),%eax
840022fd:	0f 85 d2 fe ff ff    	jne    840021d5 <_malloc_r+0x5a0>
84002303:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
84002307:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8400230b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400230e:	83 e0 03             	and    $0x3,%eax
84002311:	85 c0                	test   %eax,%eax
84002313:	0f 85 ae fe ff ff    	jne    840021c7 <_malloc_r+0x592>
84002319:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400231c:	83 e0 03             	and    $0x3,%eax
8400231f:	85 c0                	test   %eax,%eax
84002321:	75 19                	jne    8400233c <_malloc_r+0x707>
84002323:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002328:	8b 48 04             	mov    0x4(%eax),%ecx
8400232b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400232e:	f7 d0                	not    %eax
84002330:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84002335:	21 c8                	and    %ecx,%eax
84002337:	89 42 04             	mov    %eax,0x4(%edx)
8400233a:	eb 13                	jmp    8400234f <_malloc_r+0x71a>
8400233c:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
84002340:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
84002344:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84002347:	8b 40 08             	mov    0x8(%eax),%eax
8400234a:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
8400234d:	74 ca                	je     84002319 <_malloc_r+0x6e4>
8400234f:	d1 65 e4             	shll   -0x1c(%ebp)
84002352:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002357:	8b 40 04             	mov    0x4(%eax),%eax
8400235a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8400235d:	77 23                	ja     84002382 <_malloc_r+0x74d>
8400235f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84002363:	74 1d                	je     84002382 <_malloc_r+0x74d>
84002365:	eb 07                	jmp    8400236e <_malloc_r+0x739>
84002367:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8400236b:	d1 65 e4             	shll   -0x1c(%ebp)
8400236e:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002373:	8b 40 04             	mov    0x4(%eax),%eax
84002376:	23 45 e4             	and    -0x1c(%ebp),%eax
84002379:	85 c0                	test   %eax,%eax
8400237b:	74 ea                	je     84002367 <_malloc_r+0x732>
8400237d:	e9 23 fe ff ff       	jmp    840021a5 <_malloc_r+0x570>
84002382:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002387:	8b 40 08             	mov    0x8(%eax),%eax
8400238a:	8b 40 04             	mov    0x4(%eax),%eax
8400238d:	83 e0 fc             	and    $0xfffffffc,%eax
84002390:	2b 45 d0             	sub    -0x30(%ebp),%eax
84002393:	89 45 e8             	mov    %eax,-0x18(%ebp)
84002396:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400239b:	8b 40 08             	mov    0x8(%eax),%eax
8400239e:	8b 40 04             	mov    0x4(%eax),%eax
840023a1:	83 e0 fc             	and    $0xfffffffc,%eax
840023a4:	39 45 d0             	cmp    %eax,-0x30(%ebp)
840023a7:	77 06                	ja     840023af <_malloc_r+0x77a>
840023a9:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840023ad:	7f 53                	jg     84002402 <_malloc_r+0x7cd>
840023af:	83 ec 08             	sub    $0x8,%esp
840023b2:	ff 75 d0             	push   -0x30(%ebp)
840023b5:	ff 75 08             	push   0x8(%ebp)
840023b8:	e8 e5 f5 ff ff       	call   840019a2 <malloc_extend_top>
840023bd:	83 c4 10             	add    $0x10,%esp
840023c0:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840023c5:	8b 40 08             	mov    0x8(%eax),%eax
840023c8:	8b 40 04             	mov    0x4(%eax),%eax
840023cb:	83 e0 fc             	and    $0xfffffffc,%eax
840023ce:	2b 45 d0             	sub    -0x30(%ebp),%eax
840023d1:	89 45 e8             	mov    %eax,-0x18(%ebp)
840023d4:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840023d9:	8b 40 08             	mov    0x8(%eax),%eax
840023dc:	8b 40 04             	mov    0x4(%eax),%eax
840023df:	83 e0 fc             	and    $0xfffffffc,%eax
840023e2:	39 45 d0             	cmp    %eax,-0x30(%ebp)
840023e5:	77 06                	ja     840023ed <_malloc_r+0x7b8>
840023e7:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840023eb:	7f 15                	jg     84002402 <_malloc_r+0x7cd>
840023ed:	83 ec 0c             	sub    $0xc,%esp
840023f0:	ff 75 08             	push   0x8(%ebp)
840023f3:	e8 ed 00 00 00       	call   840024e5 <__malloc_unlock>
840023f8:	83 c4 10             	add    $0x10,%esp
840023fb:	b8 00 00 00 00       	mov    $0x0,%eax
84002400:	eb 50                	jmp    84002452 <_malloc_r+0x81d>
84002402:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002407:	8b 40 08             	mov    0x8(%eax),%eax
8400240a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400240d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84002410:	83 c8 01             	or     $0x1,%eax
84002413:	89 c2                	mov    %eax,%edx
84002415:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002418:	89 50 04             	mov    %edx,0x4(%eax)
8400241b:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84002420:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84002423:	8b 45 d0             	mov    -0x30(%ebp),%eax
84002426:	01 c8                	add    %ecx,%eax
84002428:	89 42 08             	mov    %eax,0x8(%edx)
8400242b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400242e:	83 c8 01             	or     $0x1,%eax
84002431:	89 c2                	mov    %eax,%edx
84002433:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002438:	8b 40 08             	mov    0x8(%eax),%eax
8400243b:	89 50 04             	mov    %edx,0x4(%eax)
8400243e:	83 ec 0c             	sub    $0xc,%esp
84002441:	ff 75 08             	push   0x8(%ebp)
84002444:	e8 9c 00 00 00       	call   840024e5 <__malloc_unlock>
84002449:	83 c4 10             	add    $0x10,%esp
8400244c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400244f:	83 c0 08             	add    $0x8,%eax
84002452:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002455:	c9                   	leave  
84002456:	c3                   	ret    

84002457 <memset>:
84002457:	55                   	push   %ebp
84002458:	89 e5                	mov    %esp,%ebp
8400245a:	57                   	push   %edi
8400245b:	8b 7d 08             	mov    0x8(%ebp),%edi
8400245e:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
84002462:	8b 4d 10             	mov    0x10(%ebp),%ecx
84002465:	fc                   	cld    
84002466:	83 f9 10             	cmp    $0x10,%ecx
84002469:	76 69                	jbe    840024d4 <memset+0x7d>
8400246b:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002471:	74 4c                	je     840024bf <memset+0x68>
84002473:	88 07                	mov    %al,(%edi)
84002475:	47                   	inc    %edi
84002476:	49                   	dec    %ecx
84002477:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400247d:	74 40                	je     840024bf <memset+0x68>
8400247f:	88 07                	mov    %al,(%edi)
84002481:	47                   	inc    %edi
84002482:	49                   	dec    %ecx
84002483:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002489:	74 34                	je     840024bf <memset+0x68>
8400248b:	88 07                	mov    %al,(%edi)
8400248d:	47                   	inc    %edi
8400248e:	49                   	dec    %ecx
8400248f:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002495:	74 28                	je     840024bf <memset+0x68>
84002497:	88 07                	mov    %al,(%edi)
84002499:	47                   	inc    %edi
8400249a:	49                   	dec    %ecx
8400249b:	f7 c7 07 00 00 00    	test   $0x7,%edi
840024a1:	74 1c                	je     840024bf <memset+0x68>
840024a3:	88 07                	mov    %al,(%edi)
840024a5:	47                   	inc    %edi
840024a6:	49                   	dec    %ecx
840024a7:	f7 c7 07 00 00 00    	test   $0x7,%edi
840024ad:	74 10                	je     840024bf <memset+0x68>
840024af:	88 07                	mov    %al,(%edi)
840024b1:	47                   	inc    %edi
840024b2:	49                   	dec    %ecx
840024b3:	f7 c7 07 00 00 00    	test   $0x7,%edi
840024b9:	74 04                	je     840024bf <memset+0x68>
840024bb:	88 07                	mov    %al,(%edi)
840024bd:	47                   	inc    %edi
840024be:	49                   	dec    %ecx
840024bf:	88 c4                	mov    %al,%ah
840024c1:	89 c2                	mov    %eax,%edx
840024c3:	c1 e2 10             	shl    $0x10,%edx
840024c6:	09 d0                	or     %edx,%eax
840024c8:	89 ca                	mov    %ecx,%edx
840024ca:	c1 e9 02             	shr    $0x2,%ecx
840024cd:	83 e2 03             	and    $0x3,%edx
840024d0:	f3 ab                	rep stos %eax,%es:(%edi)
840024d2:	89 d1                	mov    %edx,%ecx
840024d4:	f3 aa                	rep stos %al,%es:(%edi)
840024d6:	8b 45 08             	mov    0x8(%ebp),%eax
840024d9:	8d 65 fc             	lea    -0x4(%ebp),%esp
840024dc:	5f                   	pop    %edi
840024dd:	c9                   	leave  
840024de:	c3                   	ret    

840024df <__malloc_lock>:
840024df:	55                   	push   %ebp
840024e0:	89 e5                	mov    %esp,%ebp
840024e2:	90                   	nop
840024e3:	5d                   	pop    %ebp
840024e4:	c3                   	ret    

840024e5 <__malloc_unlock>:
840024e5:	55                   	push   %ebp
840024e6:	89 e5                	mov    %esp,%ebp
840024e8:	90                   	nop
840024e9:	5d                   	pop    %ebp
840024ea:	c3                   	ret    

840024eb <_iprintf_r>:
840024eb:	55                   	push   %ebp
840024ec:	89 e5                	mov    %esp,%ebp
840024ee:	83 ec 18             	sub    $0x18,%esp
840024f1:	8d 45 10             	lea    0x10(%ebp),%eax
840024f4:	89 45 f0             	mov    %eax,-0x10(%ebp)
840024f7:	8b 55 f0             	mov    -0x10(%ebp),%edx
840024fa:	8b 45 08             	mov    0x8(%ebp),%eax
840024fd:	8b 40 08             	mov    0x8(%eax),%eax
84002500:	52                   	push   %edx
84002501:	ff 75 0c             	push   0xc(%ebp)
84002504:	50                   	push   %eax
84002505:	ff 75 08             	push   0x8(%ebp)
84002508:	e8 9f 0b 00 00       	call   840030ac <_vfiprintf_r>
8400250d:	83 c4 10             	add    $0x10,%esp
84002510:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002513:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002516:	c9                   	leave  
84002517:	c3                   	ret    

84002518 <iprintf>:
84002518:	55                   	push   %ebp
84002519:	89 e5                	mov    %esp,%ebp
8400251b:	83 ec 18             	sub    $0x18,%esp
8400251e:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002523:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002526:	8d 45 0c             	lea    0xc(%ebp),%eax
84002529:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400252c:	8b 55 ec             	mov    -0x14(%ebp),%edx
8400252f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002532:	8b 40 08             	mov    0x8(%eax),%eax
84002535:	52                   	push   %edx
84002536:	ff 75 08             	push   0x8(%ebp)
84002539:	50                   	push   %eax
8400253a:	ff 75 f4             	push   -0xc(%ebp)
8400253d:	e8 6a 0b 00 00       	call   840030ac <_vfiprintf_r>
84002542:	83 c4 10             	add    $0x10,%esp
84002545:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002548:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400254b:	c9                   	leave  
8400254c:	c3                   	ret    

8400254d <srand>:
8400254d:	55                   	push   %ebp
8400254e:	89 e5                	mov    %esp,%ebp
84002550:	83 ec 10             	sub    $0x10,%esp
84002553:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002558:	89 45 fc             	mov    %eax,-0x4(%ebp)
8400255b:	8b 45 08             	mov    0x8(%ebp),%eax
8400255e:	ba 00 00 00 00       	mov    $0x0,%edx
84002563:	8b 4d fc             	mov    -0x4(%ebp),%ecx
84002566:	89 81 a4 00 00 00    	mov    %eax,0xa4(%ecx)
8400256c:	89 91 a8 00 00 00    	mov    %edx,0xa8(%ecx)
84002572:	90                   	nop
84002573:	c9                   	leave  
84002574:	c3                   	ret    

84002575 <rand>:
84002575:	55                   	push   %ebp
84002576:	89 e5                	mov    %esp,%ebp
84002578:	53                   	push   %ebx
84002579:	83 ec 14             	sub    $0x14,%esp
8400257c:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002581:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002584:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002587:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
8400258d:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
84002593:	69 da 2d 7f 95 4c    	imul   $0x4c957f2d,%edx,%ebx
84002599:	69 c8 2d f4 51 58    	imul   $0x5851f42d,%eax,%ecx
8400259f:	01 d9                	add    %ebx,%ecx
840025a1:	bb 2d 7f 95 4c       	mov    $0x4c957f2d,%ebx
840025a6:	f7 e3                	mul    %ebx
840025a8:	01 d1                	add    %edx,%ecx
840025aa:	89 ca                	mov    %ecx,%edx
840025ac:	83 c0 01             	add    $0x1,%eax
840025af:	83 d2 00             	adc    $0x0,%edx
840025b2:	8b 4d f4             	mov    -0xc(%ebp),%ecx
840025b5:	89 81 a4 00 00 00    	mov    %eax,0xa4(%ecx)
840025bb:	89 91 a8 00 00 00    	mov    %edx,0xa8(%ecx)
840025c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
840025c4:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
840025ca:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
840025d0:	89 d0                	mov    %edx,%eax
840025d2:	31 d2                	xor    %edx,%edx
840025d4:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
840025d9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840025dc:	c9                   	leave  
840025dd:	c3                   	ret    

840025de <_sbrk_r>:
840025de:	55                   	push   %ebp
840025df:	89 e5                	mov    %esp,%ebp
840025e1:	83 ec 18             	sub    $0x18,%esp
840025e4:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
840025eb:	00 00 00 
840025ee:	83 ec 0c             	sub    $0xc,%esp
840025f1:	ff 75 0c             	push   0xc(%ebp)
840025f4:	e8 cd dc ff ff       	call   840002c6 <sbrk>
840025f9:	83 c4 10             	add    $0x10,%esp
840025fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
840025ff:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002603:	75 14                	jne    84002619 <_sbrk_r+0x3b>
84002605:	a1 10 64 00 84       	mov    0x84006410,%eax
8400260a:	85 c0                	test   %eax,%eax
8400260c:	74 0b                	je     84002619 <_sbrk_r+0x3b>
8400260e:	8b 15 10 64 00 84    	mov    0x84006410,%edx
84002614:	8b 45 08             	mov    0x8(%ebp),%eax
84002617:	89 10                	mov    %edx,(%eax)
84002619:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400261c:	c9                   	leave  
8400261d:	c3                   	ret    

8400261e <setvbuf>:
8400261e:	55                   	push   %ebp
8400261f:	89 e5                	mov    %esp,%ebp
84002621:	57                   	push   %edi
84002622:	56                   	push   %esi
84002623:	53                   	push   %ebx
84002624:	83 ec 2c             	sub    $0x2c,%esp
84002627:	8b 5d 08             	mov    0x8(%ebp),%ebx
8400262a:	8b 7d 10             	mov    0x10(%ebp),%edi
8400262d:	8b 75 14             	mov    0x14(%ebp),%esi
84002630:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84002637:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
8400263c:	89 45 e0             	mov    %eax,-0x20(%ebp)
8400263f:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002642:	89 45 dc             	mov    %eax,-0x24(%ebp)
84002645:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84002649:	74 18                	je     84002663 <setvbuf+0x45>
8400264b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400264e:	8b 40 38             	mov    0x38(%eax),%eax
84002651:	85 c0                	test   %eax,%eax
84002653:	75 0e                	jne    84002663 <setvbuf+0x45>
84002655:	83 ec 0c             	sub    $0xc,%esp
84002658:	ff 75 dc             	push   -0x24(%ebp)
8400265b:	e8 a1 eb ff ff       	call   84001201 <__sinit>
84002660:	83 c4 10             	add    $0x10,%esp
84002663:	83 ff 02             	cmp    $0x2,%edi
84002666:	74 19                	je     84002681 <setvbuf+0x63>
84002668:	85 ff                	test   %edi,%edi
8400266a:	74 05                	je     84002671 <setvbuf+0x53>
8400266c:	83 ff 01             	cmp    $0x1,%edi
8400266f:	75 06                	jne    84002677 <setvbuf+0x59>
84002671:	89 f0                	mov    %esi,%eax
84002673:	85 c0                	test   %eax,%eax
84002675:	79 0a                	jns    84002681 <setvbuf+0x63>
84002677:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400267c:	e9 a1 01 00 00       	jmp    84002822 <setvbuf+0x204>
84002681:	83 ec 08             	sub    $0x8,%esp
84002684:	53                   	push   %ebx
84002685:	ff 75 e0             	push   -0x20(%ebp)
84002688:	e8 ee e7 ff ff       	call   84000e7b <_fflush_r>
8400268d:	83 c4 10             	add    $0x10,%esp
84002690:	8b 43 30             	mov    0x30(%ebx),%eax
84002693:	85 c0                	test   %eax,%eax
84002695:	74 23                	je     840026ba <setvbuf+0x9c>
84002697:	8b 53 30             	mov    0x30(%ebx),%edx
8400269a:	8d 43 40             	lea    0x40(%ebx),%eax
8400269d:	39 c2                	cmp    %eax,%edx
8400269f:	74 12                	je     840026b3 <setvbuf+0x95>
840026a1:	8b 43 30             	mov    0x30(%ebx),%eax
840026a4:	83 ec 08             	sub    $0x8,%esp
840026a7:	50                   	push   %eax
840026a8:	ff 75 e0             	push   -0x20(%ebp)
840026ab:	e8 5e ec ff ff       	call   8400130e <_free_r>
840026b0:	83 c4 10             	add    $0x10,%esp
840026b3:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
840026ba:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
840026c1:	8b 43 18             	mov    0x18(%ebx),%eax
840026c4:	89 43 04             	mov    %eax,0x4(%ebx)
840026c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840026cb:	98                   	cwtl   
840026cc:	25 80 00 00 00       	and    $0x80,%eax
840026d1:	85 c0                	test   %eax,%eax
840026d3:	74 12                	je     840026e7 <setvbuf+0xc9>
840026d5:	8b 43 10             	mov    0x10(%ebx),%eax
840026d8:	83 ec 08             	sub    $0x8,%esp
840026db:	50                   	push   %eax
840026dc:	ff 75 e0             	push   -0x20(%ebp)
840026df:	e8 2a ec ff ff       	call   8400130e <_free_r>
840026e4:	83 c4 10             	add    $0x10,%esp
840026e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840026eb:	66 25 5c f3          	and    $0xf35c,%ax
840026ef:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840026f3:	83 ff 02             	cmp    $0x2,%edi
840026f6:	74 6f                	je     84002767 <setvbuf+0x149>
840026f8:	8d 45 d4             	lea    -0x2c(%ebp),%eax
840026fb:	50                   	push   %eax
840026fc:	8d 45 d8             	lea    -0x28(%ebp),%eax
840026ff:	50                   	push   %eax
84002700:	53                   	push   %ebx
84002701:	ff 75 e0             	push   -0x20(%ebp)
84002704:	e8 01 07 00 00       	call   84002e0a <__swhatbuf_r>
84002709:	83 c4 10             	add    $0x10,%esp
8400270c:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
84002710:	09 d0                	or     %edx,%eax
84002712:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002716:	85 f6                	test   %esi,%esi
84002718:	75 0a                	jne    84002724 <setvbuf+0x106>
8400271a:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
84002721:	8b 75 d8             	mov    -0x28(%ebp),%esi
84002724:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84002728:	75 73                	jne    8400279d <setvbuf+0x17f>
8400272a:	83 ec 0c             	sub    $0xc,%esp
8400272d:	56                   	push   %esi
8400272e:	e8 36 f2 ff ff       	call   84001969 <malloc>
84002733:	83 c4 10             	add    $0x10,%esp
84002736:	89 45 0c             	mov    %eax,0xc(%ebp)
84002739:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400273d:	75 20                	jne    8400275f <setvbuf+0x141>
8400273f:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
84002746:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002749:	39 c6                	cmp    %eax,%esi
8400274b:	74 12                	je     8400275f <setvbuf+0x141>
8400274d:	8b 75 d8             	mov    -0x28(%ebp),%esi
84002750:	83 ec 0c             	sub    $0xc,%esp
84002753:	56                   	push   %esi
84002754:	e8 10 f2 ff ff       	call   84001969 <malloc>
84002759:	83 c4 10             	add    $0x10,%esp
8400275c:	89 45 0c             	mov    %eax,0xc(%ebp)
8400275f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84002763:	75 2e                	jne    84002793 <setvbuf+0x175>
84002765:	eb 01                	jmp    84002768 <setvbuf+0x14a>
84002767:	90                   	nop
84002768:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400276c:	83 c8 02             	or     $0x2,%eax
8400276f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002773:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8400277a:	8d 43 43             	lea    0x43(%ebx),%eax
8400277d:	89 03                	mov    %eax,(%ebx)
8400277f:	8b 03                	mov    (%ebx),%eax
84002781:	89 43 10             	mov    %eax,0x10(%ebx)
84002784:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
8400278b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400278e:	e9 8f 00 00 00       	jmp    84002822 <setvbuf+0x204>
84002793:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002797:	0c 80                	or     $0x80,%al
84002799:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400279d:	8b 45 e0             	mov    -0x20(%ebp),%eax
840027a0:	8b 40 38             	mov    0x38(%eax),%eax
840027a3:	85 c0                	test   %eax,%eax
840027a5:	75 0e                	jne    840027b5 <setvbuf+0x197>
840027a7:	83 ec 0c             	sub    $0xc,%esp
840027aa:	ff 75 e0             	push   -0x20(%ebp)
840027ad:	e8 4f ea ff ff       	call   84001201 <__sinit>
840027b2:	83 c4 10             	add    $0x10,%esp
840027b5:	8b 45 d8             	mov    -0x28(%ebp),%eax
840027b8:	39 c6                	cmp    %eax,%esi
840027ba:	74 0b                	je     840027c7 <setvbuf+0x1a9>
840027bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027c0:	80 cc 08             	or     $0x8,%ah
840027c3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027c7:	83 ff 01             	cmp    $0x1,%edi
840027ca:	75 0b                	jne    840027d7 <setvbuf+0x1b9>
840027cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027d0:	83 c8 01             	or     $0x1,%eax
840027d3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027d7:	8b 45 0c             	mov    0xc(%ebp),%eax
840027da:	89 03                	mov    %eax,(%ebx)
840027dc:	8b 03                	mov    (%ebx),%eax
840027de:	89 43 10             	mov    %eax,0x10(%ebx)
840027e1:	89 f0                	mov    %esi,%eax
840027e3:	89 43 14             	mov    %eax,0x14(%ebx)
840027e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027ea:	98                   	cwtl   
840027eb:	83 e0 08             	and    $0x8,%eax
840027ee:	85 c0                	test   %eax,%eax
840027f0:	74 24                	je     84002816 <setvbuf+0x1f8>
840027f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027f6:	98                   	cwtl   
840027f7:	83 e0 01             	and    $0x1,%eax
840027fa:	85 c0                	test   %eax,%eax
840027fc:	74 11                	je     8400280f <setvbuf+0x1f1>
840027fe:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84002805:	8b 43 14             	mov    0x14(%ebx),%eax
84002808:	f7 d8                	neg    %eax
8400280a:	89 43 18             	mov    %eax,0x18(%ebx)
8400280d:	eb 0e                	jmp    8400281d <setvbuf+0x1ff>
8400280f:	89 f0                	mov    %esi,%eax
84002811:	89 43 08             	mov    %eax,0x8(%ebx)
84002814:	eb 07                	jmp    8400281d <setvbuf+0x1ff>
84002816:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8400281d:	b8 00 00 00 00       	mov    $0x0,%eax
84002822:	8d 65 f4             	lea    -0xc(%ebp),%esp
84002825:	5b                   	pop    %ebx
84002826:	5e                   	pop    %esi
84002827:	5f                   	pop    %edi
84002828:	5d                   	pop    %ebp
84002829:	c3                   	ret    

8400282a <__sread>:
8400282a:	55                   	push   %ebp
8400282b:	89 e5                	mov    %esp,%ebp
8400282d:	56                   	push   %esi
8400282e:	53                   	push   %ebx
8400282f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002832:	8b 55 14             	mov    0x14(%ebp),%edx
84002835:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002839:	98                   	cwtl   
8400283a:	52                   	push   %edx
8400283b:	ff 75 10             	push   0x10(%ebp)
8400283e:	50                   	push   %eax
8400283f:	ff 75 08             	push   0x8(%ebp)
84002842:	e8 a5 11 00 00       	call   840039ec <_read_r>
84002847:	83 c4 10             	add    $0x10,%esp
8400284a:	89 c6                	mov    %eax,%esi
8400284c:	85 f6                	test   %esi,%esi
8400284e:	78 0a                	js     8400285a <__sread+0x30>
84002850:	8b 43 50             	mov    0x50(%ebx),%eax
84002853:	01 f0                	add    %esi,%eax
84002855:	89 43 50             	mov    %eax,0x50(%ebx)
84002858:	eb 0b                	jmp    84002865 <__sread+0x3b>
8400285a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400285e:	80 e4 ef             	and    $0xef,%ah
84002861:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002865:	89 f0                	mov    %esi,%eax
84002867:	8d 65 f8             	lea    -0x8(%ebp),%esp
8400286a:	5b                   	pop    %ebx
8400286b:	5e                   	pop    %esi
8400286c:	5d                   	pop    %ebp
8400286d:	c3                   	ret    

8400286e <__seofread>:
8400286e:	55                   	push   %ebp
8400286f:	89 e5                	mov    %esp,%ebp
84002871:	b8 00 00 00 00       	mov    $0x0,%eax
84002876:	5d                   	pop    %ebp
84002877:	c3                   	ret    

84002878 <__swrite>:
84002878:	55                   	push   %ebp
84002879:	89 e5                	mov    %esp,%ebp
8400287b:	53                   	push   %ebx
8400287c:	83 ec 14             	sub    $0x14,%esp
8400287f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002882:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002886:	98                   	cwtl   
84002887:	25 00 01 00 00       	and    $0x100,%eax
8400288c:	85 c0                	test   %eax,%eax
8400288e:	74 15                	je     840028a5 <__swrite+0x2d>
84002890:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002894:	98                   	cwtl   
84002895:	6a 02                	push   $0x2
84002897:	6a 00                	push   $0x0
84002899:	50                   	push   %eax
8400289a:	ff 75 08             	push   0x8(%ebp)
8400289d:	e8 35 04 00 00       	call   84002cd7 <_lseek_r>
840028a2:	83 c4 10             	add    $0x10,%esp
840028a5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840028a9:	80 e4 ef             	and    $0xef,%ah
840028ac:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840028b0:	8b 55 14             	mov    0x14(%ebp),%edx
840028b3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840028b7:	98                   	cwtl   
840028b8:	52                   	push   %edx
840028b9:	ff 75 10             	push   0x10(%ebp)
840028bc:	50                   	push   %eax
840028bd:	ff 75 08             	push   0x8(%ebp)
840028c0:	e8 7d 00 00 00       	call   84002942 <_write_r>
840028c5:	83 c4 10             	add    $0x10,%esp
840028c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
840028cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
840028ce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840028d1:	c9                   	leave  
840028d2:	c3                   	ret    

840028d3 <__sseek>:
840028d3:	55                   	push   %ebp
840028d4:	89 e5                	mov    %esp,%ebp
840028d6:	56                   	push   %esi
840028d7:	53                   	push   %ebx
840028d8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
840028db:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840028df:	98                   	cwtl   
840028e0:	ff 75 14             	push   0x14(%ebp)
840028e3:	ff 75 10             	push   0x10(%ebp)
840028e6:	50                   	push   %eax
840028e7:	ff 75 08             	push   0x8(%ebp)
840028ea:	e8 e8 03 00 00       	call   84002cd7 <_lseek_r>
840028ef:	83 c4 10             	add    $0x10,%esp
840028f2:	89 c6                	mov    %eax,%esi
840028f4:	83 fe ff             	cmp    $0xffffffff,%esi
840028f7:	75 0d                	jne    84002906 <__sseek+0x33>
840028f9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840028fd:	80 e4 ef             	and    $0xef,%ah
84002900:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002904:	eb 0e                	jmp    84002914 <__sseek+0x41>
84002906:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400290a:	80 cc 10             	or     $0x10,%ah
8400290d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002911:	89 73 50             	mov    %esi,0x50(%ebx)
84002914:	89 f0                	mov    %esi,%eax
84002916:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002919:	5b                   	pop    %ebx
8400291a:	5e                   	pop    %esi
8400291b:	5d                   	pop    %ebp
8400291c:	c3                   	ret    

8400291d <__sclose>:
8400291d:	55                   	push   %ebp
8400291e:	89 e5                	mov    %esp,%ebp
84002920:	83 ec 18             	sub    $0x18,%esp
84002923:	8b 45 0c             	mov    0xc(%ebp),%eax
84002926:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002929:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400292c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002930:	98                   	cwtl   
84002931:	83 ec 08             	sub    $0x8,%esp
84002934:	50                   	push   %eax
84002935:	ff 75 08             	push   0x8(%ebp)
84002938:	e8 60 01 00 00       	call   84002a9d <_close_r>
8400293d:	83 c4 10             	add    $0x10,%esp
84002940:	c9                   	leave  
84002941:	c3                   	ret    

84002942 <_write_r>:
84002942:	55                   	push   %ebp
84002943:	89 e5                	mov    %esp,%ebp
84002945:	83 ec 18             	sub    $0x18,%esp
84002948:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
8400294f:	00 00 00 
84002952:	83 ec 04             	sub    $0x4,%esp
84002955:	ff 75 14             	push   0x14(%ebp)
84002958:	ff 75 10             	push   0x10(%ebp)
8400295b:	ff 75 0c             	push   0xc(%ebp)
8400295e:	e8 a0 d8 ff ff       	call   84000203 <write>
84002963:	83 c4 10             	add    $0x10,%esp
84002966:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002969:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8400296d:	75 14                	jne    84002983 <_write_r+0x41>
8400296f:	a1 10 64 00 84       	mov    0x84006410,%eax
84002974:	85 c0                	test   %eax,%eax
84002976:	74 0b                	je     84002983 <_write_r+0x41>
84002978:	8b 15 10 64 00 84    	mov    0x84006410,%edx
8400297e:	8b 45 08             	mov    0x8(%ebp),%eax
84002981:	89 10                	mov    %edx,(%eax)
84002983:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002986:	c9                   	leave  
84002987:	c3                   	ret    

84002988 <__call_exitprocs>:
84002988:	55                   	push   %ebp
84002989:	89 e5                	mov    %esp,%ebp
8400298b:	57                   	push   %edi
8400298c:	56                   	push   %esi
8400298d:	53                   	push   %ebx
8400298e:	83 ec 1c             	sub    $0x1c,%esp
84002991:	a1 38 56 00 84       	mov    0x84005638,%eax
84002996:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
8400299c:	a1 38 56 00 84       	mov    0x84005638,%eax
840029a1:	05 48 01 00 00       	add    $0x148,%eax
840029a6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
840029a9:	90                   	nop
840029aa:	85 db                	test   %ebx,%ebx
840029ac:	0f 84 e1 00 00 00    	je     84002a93 <__call_exitprocs+0x10b>
840029b2:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
840029b8:	8b 43 04             	mov    0x4(%ebx),%eax
840029bb:	8d 70 ff             	lea    -0x1(%eax),%esi
840029be:	e9 c6 00 00 00       	jmp    84002a89 <__call_exitprocs+0x101>
840029c3:	b8 01 00 00 00       	mov    $0x1,%eax
840029c8:	89 f1                	mov    %esi,%ecx
840029ca:	d3 e0                	shl    %cl,%eax
840029cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
840029cf:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
840029d3:	74 17                	je     840029ec <__call_exitprocs+0x64>
840029d5:	85 ff                	test   %edi,%edi
840029d7:	0f 84 a5 00 00 00    	je     84002a82 <__call_exitprocs+0xfa>
840029dd:	8d 46 20             	lea    0x20(%esi),%eax
840029e0:	8b 04 87             	mov    (%edi,%eax,4),%eax
840029e3:	39 45 0c             	cmp    %eax,0xc(%ebp)
840029e6:	0f 85 96 00 00 00    	jne    84002a82 <__call_exitprocs+0xfa>
840029ec:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
840029f0:	89 45 dc             	mov    %eax,-0x24(%ebp)
840029f3:	8b 43 04             	mov    0x4(%ebx),%eax
840029f6:	83 e8 01             	sub    $0x1,%eax
840029f9:	39 c6                	cmp    %eax,%esi
840029fb:	75 0b                	jne    84002a08 <__call_exitprocs+0x80>
840029fd:	8b 43 04             	mov    0x4(%ebx),%eax
84002a00:	83 e8 01             	sub    $0x1,%eax
84002a03:	89 43 04             	mov    %eax,0x4(%ebx)
84002a06:	eb 08                	jmp    84002a10 <__call_exitprocs+0x88>
84002a08:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
84002a0f:	00 
84002a10:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84002a14:	74 6f                	je     84002a85 <__call_exitprocs+0xfd>
84002a16:	8b 43 04             	mov    0x4(%ebx),%eax
84002a19:	89 45 d8             	mov    %eax,-0x28(%ebp)
84002a1c:	85 ff                	test   %edi,%edi
84002a1e:	74 0f                	je     84002a2f <__call_exitprocs+0xa7>
84002a20:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
84002a26:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002a29:	21 d0                	and    %edx,%eax
84002a2b:	85 c0                	test   %eax,%eax
84002a2d:	75 07                	jne    84002a36 <__call_exitprocs+0xae>
84002a2f:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a32:	ff d0                	call   *%eax
84002a34:	eb 32                	jmp    84002a68 <__call_exitprocs+0xe0>
84002a36:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
84002a3c:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002a3f:	21 d0                	and    %edx,%eax
84002a41:	85 c0                	test   %eax,%eax
84002a43:	75 14                	jne    84002a59 <__call_exitprocs+0xd1>
84002a45:	8b 04 b7             	mov    (%edi,%esi,4),%eax
84002a48:	83 ec 08             	sub    $0x8,%esp
84002a4b:	50                   	push   %eax
84002a4c:	ff 75 08             	push   0x8(%ebp)
84002a4f:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a52:	ff d0                	call   *%eax
84002a54:	83 c4 10             	add    $0x10,%esp
84002a57:	eb 0f                	jmp    84002a68 <__call_exitprocs+0xe0>
84002a59:	8b 04 b7             	mov    (%edi,%esi,4),%eax
84002a5c:	83 ec 0c             	sub    $0xc,%esp
84002a5f:	50                   	push   %eax
84002a60:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a63:	ff d0                	call   *%eax
84002a65:	83 c4 10             	add    $0x10,%esp
84002a68:	8b 43 04             	mov    0x4(%ebx),%eax
84002a6b:	39 45 d8             	cmp    %eax,-0x28(%ebp)
84002a6e:	0f 85 1d ff ff ff    	jne    84002991 <__call_exitprocs+0x9>
84002a74:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84002a77:	8b 00                	mov    (%eax),%eax
84002a79:	39 c3                	cmp    %eax,%ebx
84002a7b:	74 09                	je     84002a86 <__call_exitprocs+0xfe>
84002a7d:	e9 0f ff ff ff       	jmp    84002991 <__call_exitprocs+0x9>
84002a82:	90                   	nop
84002a83:	eb 01                	jmp    84002a86 <__call_exitprocs+0xfe>
84002a85:	90                   	nop
84002a86:	83 ee 01             	sub    $0x1,%esi
84002a89:	85 f6                	test   %esi,%esi
84002a8b:	0f 89 32 ff ff ff    	jns    840029c3 <__call_exitprocs+0x3b>
84002a91:	eb 01                	jmp    84002a94 <__call_exitprocs+0x10c>
84002a93:	90                   	nop
84002a94:	90                   	nop
84002a95:	8d 65 f4             	lea    -0xc(%ebp),%esp
84002a98:	5b                   	pop    %ebx
84002a99:	5e                   	pop    %esi
84002a9a:	5f                   	pop    %edi
84002a9b:	5d                   	pop    %ebp
84002a9c:	c3                   	ret    

84002a9d <_close_r>:
84002a9d:	55                   	push   %ebp
84002a9e:	89 e5                	mov    %esp,%ebp
84002aa0:	83 ec 18             	sub    $0x18,%esp
84002aa3:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
84002aaa:	00 00 00 
84002aad:	83 ec 0c             	sub    $0xc,%esp
84002ab0:	ff 75 0c             	push   0xc(%ebp)
84002ab3:	e8 78 d7 ff ff       	call   84000230 <close>
84002ab8:	83 c4 10             	add    $0x10,%esp
84002abb:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002abe:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002ac2:	75 14                	jne    84002ad8 <_close_r+0x3b>
84002ac4:	a1 10 64 00 84       	mov    0x84006410,%eax
84002ac9:	85 c0                	test   %eax,%eax
84002acb:	74 0b                	je     84002ad8 <_close_r+0x3b>
84002acd:	8b 15 10 64 00 84    	mov    0x84006410,%edx
84002ad3:	8b 45 08             	mov    0x8(%ebp),%eax
84002ad6:	89 10                	mov    %edx,(%eax)
84002ad8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002adb:	c9                   	leave  
84002adc:	c3                   	ret    

84002add <_fclose_r>:
84002add:	55                   	push   %ebp
84002ade:	89 e5                	mov    %esp,%ebp
84002ae0:	53                   	push   %ebx
84002ae1:	83 ec 14             	sub    $0x14,%esp
84002ae4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002ae7:	85 db                	test   %ebx,%ebx
84002ae9:	75 0a                	jne    84002af5 <_fclose_r+0x18>
84002aeb:	b8 00 00 00 00       	mov    $0x0,%eax
84002af0:	e9 ea 00 00 00       	jmp    84002bdf <_fclose_r+0x102>
84002af5:	8b 45 08             	mov    0x8(%ebp),%eax
84002af8:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002afb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84002aff:	74 18                	je     84002b19 <_fclose_r+0x3c>
84002b01:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002b04:	8b 40 38             	mov    0x38(%eax),%eax
84002b07:	85 c0                	test   %eax,%eax
84002b09:	75 0e                	jne    84002b19 <_fclose_r+0x3c>
84002b0b:	83 ec 0c             	sub    $0xc,%esp
84002b0e:	ff 75 f0             	push   -0x10(%ebp)
84002b11:	e8 eb e6 ff ff       	call   84001201 <__sinit>
84002b16:	83 c4 10             	add    $0x10,%esp
84002b19:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002b1d:	66 85 c0             	test   %ax,%ax
84002b20:	75 0a                	jne    84002b2c <_fclose_r+0x4f>
84002b22:	b8 00 00 00 00       	mov    $0x0,%eax
84002b27:	e9 b3 00 00 00       	jmp    84002bdf <_fclose_r+0x102>
84002b2c:	83 ec 08             	sub    $0x8,%esp
84002b2f:	53                   	push   %ebx
84002b30:	ff 75 08             	push   0x8(%ebp)
84002b33:	e8 1d e1 ff ff       	call   84000c55 <__sflush_r>
84002b38:	83 c4 10             	add    $0x10,%esp
84002b3b:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002b3e:	8b 43 2c             	mov    0x2c(%ebx),%eax
84002b41:	85 c0                	test   %eax,%eax
84002b43:	74 1d                	je     84002b62 <_fclose_r+0x85>
84002b45:	8b 43 2c             	mov    0x2c(%ebx),%eax
84002b48:	8b 53 1c             	mov    0x1c(%ebx),%edx
84002b4b:	83 ec 08             	sub    $0x8,%esp
84002b4e:	52                   	push   %edx
84002b4f:	ff 75 08             	push   0x8(%ebp)
84002b52:	ff d0                	call   *%eax
84002b54:	83 c4 10             	add    $0x10,%esp
84002b57:	85 c0                	test   %eax,%eax
84002b59:	79 07                	jns    84002b62 <_fclose_r+0x85>
84002b5b:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
84002b62:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002b66:	98                   	cwtl   
84002b67:	25 80 00 00 00       	and    $0x80,%eax
84002b6c:	85 c0                	test   %eax,%eax
84002b6e:	74 12                	je     84002b82 <_fclose_r+0xa5>
84002b70:	8b 43 10             	mov    0x10(%ebx),%eax
84002b73:	83 ec 08             	sub    $0x8,%esp
84002b76:	50                   	push   %eax
84002b77:	ff 75 08             	push   0x8(%ebp)
84002b7a:	e8 8f e7 ff ff       	call   8400130e <_free_r>
84002b7f:	83 c4 10             	add    $0x10,%esp
84002b82:	8b 43 30             	mov    0x30(%ebx),%eax
84002b85:	85 c0                	test   %eax,%eax
84002b87:	74 23                	je     84002bac <_fclose_r+0xcf>
84002b89:	8b 53 30             	mov    0x30(%ebx),%edx
84002b8c:	8d 43 40             	lea    0x40(%ebx),%eax
84002b8f:	39 c2                	cmp    %eax,%edx
84002b91:	74 12                	je     84002ba5 <_fclose_r+0xc8>
84002b93:	8b 43 30             	mov    0x30(%ebx),%eax
84002b96:	83 ec 08             	sub    $0x8,%esp
84002b99:	50                   	push   %eax
84002b9a:	ff 75 08             	push   0x8(%ebp)
84002b9d:	e8 6c e7 ff ff       	call   8400130e <_free_r>
84002ba2:	83 c4 10             	add    $0x10,%esp
84002ba5:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84002bac:	8b 43 44             	mov    0x44(%ebx),%eax
84002baf:	85 c0                	test   %eax,%eax
84002bb1:	74 19                	je     84002bcc <_fclose_r+0xef>
84002bb3:	8b 43 44             	mov    0x44(%ebx),%eax
84002bb6:	83 ec 08             	sub    $0x8,%esp
84002bb9:	50                   	push   %eax
84002bba:	ff 75 08             	push   0x8(%ebp)
84002bbd:	e8 4c e7 ff ff       	call   8400130e <_free_r>
84002bc2:	83 c4 10             	add    $0x10,%esp
84002bc5:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
84002bcc:	e8 c9 e6 ff ff       	call   8400129a <__sfp_lock_acquire>
84002bd1:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
84002bd7:	e8 c4 e6 ff ff       	call   840012a0 <__sfp_lock_release>
84002bdc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002bdf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002be2:	c9                   	leave  
84002be3:	c3                   	ret    

84002be4 <fclose>:
84002be4:	55                   	push   %ebp
84002be5:	89 e5                	mov    %esp,%ebp
84002be7:	83 ec 08             	sub    $0x8,%esp
84002bea:	8b 55 08             	mov    0x8(%ebp),%edx
84002bed:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002bf2:	83 ec 08             	sub    $0x8,%esp
84002bf5:	52                   	push   %edx
84002bf6:	50                   	push   %eax
84002bf7:	e8 e1 fe ff ff       	call   84002add <_fclose_r>
84002bfc:	83 c4 10             	add    $0x10,%esp
84002bff:	c9                   	leave  
84002c00:	c3                   	ret    

84002c01 <_getc_r>:
84002c01:	55                   	push   %ebp
84002c02:	89 e5                	mov    %esp,%ebp
84002c04:	53                   	push   %ebx
84002c05:	83 ec 14             	sub    $0x14,%esp
84002c08:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002c0b:	8b 45 08             	mov    0x8(%ebp),%eax
84002c0e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002c11:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84002c15:	74 18                	je     84002c2f <_getc_r+0x2e>
84002c17:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002c1a:	8b 40 38             	mov    0x38(%eax),%eax
84002c1d:	85 c0                	test   %eax,%eax
84002c1f:	75 0e                	jne    84002c2f <_getc_r+0x2e>
84002c21:	83 ec 0c             	sub    $0xc,%esp
84002c24:	ff 75 f4             	push   -0xc(%ebp)
84002c27:	e8 d5 e5 ff ff       	call   84001201 <__sinit>
84002c2c:	83 c4 10             	add    $0x10,%esp
84002c2f:	8b 43 04             	mov    0x4(%ebx),%eax
84002c32:	83 e8 01             	sub    $0x1,%eax
84002c35:	89 43 04             	mov    %eax,0x4(%ebx)
84002c38:	8b 43 04             	mov    0x4(%ebx),%eax
84002c3b:	85 c0                	test   %eax,%eax
84002c3d:	79 11                	jns    84002c50 <_getc_r+0x4f>
84002c3f:	83 ec 08             	sub    $0x8,%esp
84002c42:	53                   	push   %ebx
84002c43:	ff 75 08             	push   0x8(%ebp)
84002c46:	e8 7e 0f 00 00       	call   84003bc9 <__srget_r>
84002c4b:	83 c4 10             	add    $0x10,%esp
84002c4e:	eb 0d                	jmp    84002c5d <_getc_r+0x5c>
84002c50:	8b 03                	mov    (%ebx),%eax
84002c52:	8d 50 01             	lea    0x1(%eax),%edx
84002c55:	89 13                	mov    %edx,(%ebx)
84002c57:	0f b6 00             	movzbl (%eax),%eax
84002c5a:	0f b6 c0             	movzbl %al,%eax
84002c5d:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002c60:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002c63:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002c66:	c9                   	leave  
84002c67:	c3                   	ret    

84002c68 <getc>:
84002c68:	55                   	push   %ebp
84002c69:	89 e5                	mov    %esp,%ebp
84002c6b:	53                   	push   %ebx
84002c6c:	83 ec 14             	sub    $0x14,%esp
84002c6f:	8b 5d 08             	mov    0x8(%ebp),%ebx
84002c72:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002c77:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002c7a:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002c7d:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002c80:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84002c84:	74 18                	je     84002c9e <getc+0x36>
84002c86:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002c89:	8b 40 38             	mov    0x38(%eax),%eax
84002c8c:	85 c0                	test   %eax,%eax
84002c8e:	75 0e                	jne    84002c9e <getc+0x36>
84002c90:	83 ec 0c             	sub    $0xc,%esp
84002c93:	ff 75 f0             	push   -0x10(%ebp)
84002c96:	e8 66 e5 ff ff       	call   84001201 <__sinit>
84002c9b:	83 c4 10             	add    $0x10,%esp
84002c9e:	8b 43 04             	mov    0x4(%ebx),%eax
84002ca1:	83 e8 01             	sub    $0x1,%eax
84002ca4:	89 43 04             	mov    %eax,0x4(%ebx)
84002ca7:	8b 43 04             	mov    0x4(%ebx),%eax
84002caa:	85 c0                	test   %eax,%eax
84002cac:	79 11                	jns    84002cbf <getc+0x57>
84002cae:	83 ec 08             	sub    $0x8,%esp
84002cb1:	53                   	push   %ebx
84002cb2:	ff 75 f4             	push   -0xc(%ebp)
84002cb5:	e8 0f 0f 00 00       	call   84003bc9 <__srget_r>
84002cba:	83 c4 10             	add    $0x10,%esp
84002cbd:	eb 0d                	jmp    84002ccc <getc+0x64>
84002cbf:	8b 03                	mov    (%ebx),%eax
84002cc1:	8d 50 01             	lea    0x1(%eax),%edx
84002cc4:	89 13                	mov    %edx,(%ebx)
84002cc6:	0f b6 00             	movzbl (%eax),%eax
84002cc9:	0f b6 c0             	movzbl %al,%eax
84002ccc:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002ccf:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002cd2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002cd5:	c9                   	leave  
84002cd6:	c3                   	ret    

84002cd7 <_lseek_r>:
84002cd7:	55                   	push   %ebp
84002cd8:	89 e5                	mov    %esp,%ebp
84002cda:	83 ec 18             	sub    $0x18,%esp
84002cdd:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
84002ce4:	00 00 00 
84002ce7:	83 ec 04             	sub    $0x4,%esp
84002cea:	ff 75 14             	push   0x14(%ebp)
84002ced:	ff 75 10             	push   0x10(%ebp)
84002cf0:	ff 75 0c             	push   0xc(%ebp)
84002cf3:	e8 59 d5 ff ff       	call   84000251 <lseek>
84002cf8:	83 c4 10             	add    $0x10,%esp
84002cfb:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002cfe:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002d02:	75 14                	jne    84002d18 <_lseek_r+0x41>
84002d04:	a1 10 64 00 84       	mov    0x84006410,%eax
84002d09:	85 c0                	test   %eax,%eax
84002d0b:	74 0b                	je     84002d18 <_lseek_r+0x41>
84002d0d:	8b 15 10 64 00 84    	mov    0x84006410,%edx
84002d13:	8b 45 08             	mov    0x8(%ebp),%eax
84002d16:	89 10                	mov    %edx,(%eax)
84002d18:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002d1b:	c9                   	leave  
84002d1c:	c3                   	ret    

84002d1d <__smakebuf_r>:
84002d1d:	55                   	push   %ebp
84002d1e:	89 e5                	mov    %esp,%ebp
84002d20:	56                   	push   %esi
84002d21:	53                   	push   %ebx
84002d22:	83 ec 10             	sub    $0x10,%esp
84002d25:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002d28:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d2c:	98                   	cwtl   
84002d2d:	83 e0 02             	and    $0x2,%eax
84002d30:	85 c0                	test   %eax,%eax
84002d32:	74 16                	je     84002d4a <__smakebuf_r+0x2d>
84002d34:	8d 43 43             	lea    0x43(%ebx),%eax
84002d37:	89 03                	mov    %eax,(%ebx)
84002d39:	8b 03                	mov    (%ebx),%eax
84002d3b:	89 43 10             	mov    %eax,0x10(%ebx)
84002d3e:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002d45:	e9 b9 00 00 00       	jmp    84002e03 <__smakebuf_r+0xe6>
84002d4a:	8d 45 ec             	lea    -0x14(%ebp),%eax
84002d4d:	50                   	push   %eax
84002d4e:	8d 45 f0             	lea    -0x10(%ebp),%eax
84002d51:	50                   	push   %eax
84002d52:	53                   	push   %ebx
84002d53:	ff 75 08             	push   0x8(%ebp)
84002d56:	e8 af 00 00 00       	call   84002e0a <__swhatbuf_r>
84002d5b:	83 c4 10             	add    $0x10,%esp
84002d5e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002d61:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002d64:	83 ec 08             	sub    $0x8,%esp
84002d67:	50                   	push   %eax
84002d68:	ff 75 08             	push   0x8(%ebp)
84002d6b:	e8 c5 ee ff ff       	call   84001c35 <_malloc_r>
84002d70:	83 c4 10             	add    $0x10,%esp
84002d73:	89 c6                	mov    %eax,%esi
84002d75:	85 f6                	test   %esi,%esi
84002d77:	75 2f                	jne    84002da8 <__smakebuf_r+0x8b>
84002d79:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d7d:	98                   	cwtl   
84002d7e:	25 00 02 00 00       	and    $0x200,%eax
84002d83:	85 c0                	test   %eax,%eax
84002d85:	75 7c                	jne    84002e03 <__smakebuf_r+0xe6>
84002d87:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d8b:	83 e0 fc             	and    $0xfffffffc,%eax
84002d8e:	83 c8 02             	or     $0x2,%eax
84002d91:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002d95:	8d 43 43             	lea    0x43(%ebx),%eax
84002d98:	89 03                	mov    %eax,(%ebx)
84002d9a:	8b 03                	mov    (%ebx),%eax
84002d9c:	89 43 10             	mov    %eax,0x10(%ebx)
84002d9f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002da6:	eb 5b                	jmp    84002e03 <__smakebuf_r+0xe6>
84002da8:	8b 45 08             	mov    0x8(%ebp),%eax
84002dab:	c7 40 3c c6 11 00 84 	movl   $0x840011c6,0x3c(%eax)
84002db2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002db6:	0c 80                	or     $0x80,%al
84002db8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002dbc:	89 33                	mov    %esi,(%ebx)
84002dbe:	8b 03                	mov    (%ebx),%eax
84002dc0:	89 43 10             	mov    %eax,0x10(%ebx)
84002dc3:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002dc6:	89 43 14             	mov    %eax,0x14(%ebx)
84002dc9:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002dcc:	85 c0                	test   %eax,%eax
84002dce:	74 26                	je     84002df6 <__smakebuf_r+0xd9>
84002dd0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002dd4:	98                   	cwtl   
84002dd5:	83 ec 08             	sub    $0x8,%esp
84002dd8:	50                   	push   %eax
84002dd9:	ff 75 08             	push   0x8(%ebp)
84002ddc:	e8 8c 17 00 00       	call   8400456d <_isatty_r>
84002de1:	83 c4 10             	add    $0x10,%esp
84002de4:	85 c0                	test   %eax,%eax
84002de6:	74 0e                	je     84002df6 <__smakebuf_r+0xd9>
84002de8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002dec:	83 e0 fc             	and    $0xfffffffc,%eax
84002def:	83 c8 01             	or     $0x1,%eax
84002df2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002df6:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
84002dfa:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002dfd:	09 d0                	or     %edx,%eax
84002dff:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002e03:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002e06:	5b                   	pop    %ebx
84002e07:	5e                   	pop    %esi
84002e08:	5d                   	pop    %ebp
84002e09:	c3                   	ret    

84002e0a <__swhatbuf_r>:
84002e0a:	55                   	push   %ebp
84002e0b:	89 e5                	mov    %esp,%ebp
84002e0d:	83 ec 58             	sub    $0x58,%esp
84002e10:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
84002e17:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e1a:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002e1e:	66 85 c0             	test   %ax,%ax
84002e21:	78 1f                	js     84002e42 <__swhatbuf_r+0x38>
84002e23:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e26:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002e2a:	98                   	cwtl   
84002e2b:	83 ec 04             	sub    $0x4,%esp
84002e2e:	8d 55 ac             	lea    -0x54(%ebp),%edx
84002e31:	52                   	push   %edx
84002e32:	50                   	push   %eax
84002e33:	ff 75 08             	push   0x8(%ebp)
84002e36:	e8 51 12 00 00       	call   8400408c <_fstat_r>
84002e3b:	83 c4 10             	add    $0x10,%esp
84002e3e:	85 c0                	test   %eax,%eax
84002e40:	79 35                	jns    84002e77 <__swhatbuf_r+0x6d>
84002e42:	8b 45 14             	mov    0x14(%ebp),%eax
84002e45:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84002e4b:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e4e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84002e52:	98                   	cwtl   
84002e53:	25 80 00 00 00       	and    $0x80,%eax
84002e58:	85 c0                	test   %eax,%eax
84002e5a:	74 0b                	je     84002e67 <__swhatbuf_r+0x5d>
84002e5c:	8b 45 10             	mov    0x10(%ebp),%eax
84002e5f:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
84002e65:	eb 09                	jmp    84002e70 <__swhatbuf_r+0x66>
84002e67:	8b 45 10             	mov    0x10(%ebp),%eax
84002e6a:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
84002e70:	b8 00 00 00 00       	mov    $0x0,%eax
84002e75:	eb 24                	jmp    84002e9b <__swhatbuf_r+0x91>
84002e77:	8b 45 b0             	mov    -0x50(%ebp),%eax
84002e7a:	25 00 f0 00 00       	and    $0xf000,%eax
84002e7f:	3d 00 20 00 00       	cmp    $0x2000,%eax
84002e84:	0f 94 c0             	sete   %al
84002e87:	0f b6 d0             	movzbl %al,%edx
84002e8a:	8b 45 14             	mov    0x14(%ebp),%eax
84002e8d:	89 10                	mov    %edx,(%eax)
84002e8f:	8b 45 10             	mov    0x10(%ebp),%eax
84002e92:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
84002e98:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002e9b:	c9                   	leave  
84002e9c:	c3                   	ret    

84002e9d <__sprint_r>:
84002e9d:	55                   	push   %ebp
84002e9e:	89 e5                	mov    %esp,%ebp
84002ea0:	56                   	push   %esi
84002ea1:	53                   	push   %ebx
84002ea2:	83 ec 10             	sub    $0x10,%esp
84002ea5:	8b 5d 10             	mov    0x10(%ebp),%ebx
84002ea8:	be 00 00 00 00       	mov    $0x0,%esi
84002ead:	8b 43 08             	mov    0x8(%ebx),%eax
84002eb0:	85 c0                	test   %eax,%eax
84002eb2:	75 11                	jne    84002ec5 <__sprint_r+0x28>
84002eb4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84002ebb:	b8 00 00 00 00       	mov    $0x0,%eax
84002ec0:	e9 ad 00 00 00       	jmp    84002f72 <__sprint_r+0xd5>
84002ec5:	8b 45 0c             	mov    0xc(%ebp),%eax
84002ec8:	8b 40 64             	mov    0x64(%eax),%eax
84002ecb:	25 00 20 00 00       	and    $0x2000,%eax
84002ed0:	85 c0                	test   %eax,%eax
84002ed2:	74 7a                	je     84002f4e <__sprint_r+0xb1>
84002ed4:	8b 03                	mov    (%ebx),%eax
84002ed6:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002ed9:	eb 6a                	jmp    84002f45 <__sprint_r+0xa8>
84002edb:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ede:	8b 00                	mov    (%eax),%eax
84002ee0:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002ee3:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ee6:	8b 40 04             	mov    0x4(%eax),%eax
84002ee9:	c1 e8 02             	shr    $0x2,%eax
84002eec:	89 45 e8             	mov    %eax,-0x18(%ebp)
84002eef:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84002ef6:	eb 33                	jmp    84002f2b <__sprint_r+0x8e>
84002ef8:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002efb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
84002f02:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002f05:	01 d0                	add    %edx,%eax
84002f07:	8b 00                	mov    (%eax),%eax
84002f09:	83 ec 04             	sub    $0x4,%esp
84002f0c:	ff 75 0c             	push   0xc(%ebp)
84002f0f:	50                   	push   %eax
84002f10:	ff 75 08             	push   0x8(%ebp)
84002f13:	e8 d5 10 00 00       	call   84003fed <_fputwc_r>
84002f18:	83 c4 10             	add    $0x10,%esp
84002f1b:	83 f8 ff             	cmp    $0xffffffff,%eax
84002f1e:	75 07                	jne    84002f27 <__sprint_r+0x8a>
84002f20:	be ff ff ff ff       	mov    $0xffffffff,%esi
84002f25:	eb 3b                	jmp    84002f62 <__sprint_r+0xc5>
84002f27:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84002f2b:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002f2e:	3b 45 e8             	cmp    -0x18(%ebp),%eax
84002f31:	7c c5                	jl     84002ef8 <__sprint_r+0x5b>
84002f33:	8b 43 08             	mov    0x8(%ebx),%eax
84002f36:	8b 55 e8             	mov    -0x18(%ebp),%edx
84002f39:	c1 e2 02             	shl    $0x2,%edx
84002f3c:	29 d0                	sub    %edx,%eax
84002f3e:	89 43 08             	mov    %eax,0x8(%ebx)
84002f41:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
84002f45:	8b 43 08             	mov    0x8(%ebx),%eax
84002f48:	85 c0                	test   %eax,%eax
84002f4a:	75 8f                	jne    84002edb <__sprint_r+0x3e>
84002f4c:	eb 14                	jmp    84002f62 <__sprint_r+0xc5>
84002f4e:	83 ec 04             	sub    $0x4,%esp
84002f51:	53                   	push   %ebx
84002f52:	ff 75 0c             	push   0xc(%ebp)
84002f55:	ff 75 08             	push   0x8(%ebp)
84002f58:	e8 72 11 00 00       	call   840040cf <__sfvwrite_r>
84002f5d:	83 c4 10             	add    $0x10,%esp
84002f60:	89 c6                	mov    %eax,%esi
84002f62:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84002f69:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84002f70:	89 f0                	mov    %esi,%eax
84002f72:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002f75:	5b                   	pop    %ebx
84002f76:	5e                   	pop    %esi
84002f77:	5d                   	pop    %ebp
84002f78:	c3                   	ret    

84002f79 <__sfputc_r>:
84002f79:	55                   	push   %ebp
84002f7a:	89 e5                	mov    %esp,%ebp
84002f7c:	83 ec 08             	sub    $0x8,%esp
84002f7f:	8b 45 10             	mov    0x10(%ebp),%eax
84002f82:	8b 40 08             	mov    0x8(%eax),%eax
84002f85:	8d 50 ff             	lea    -0x1(%eax),%edx
84002f88:	8b 45 10             	mov    0x10(%ebp),%eax
84002f8b:	89 50 08             	mov    %edx,0x8(%eax)
84002f8e:	8b 45 10             	mov    0x10(%ebp),%eax
84002f91:	8b 40 08             	mov    0x8(%eax),%eax
84002f94:	85 c0                	test   %eax,%eax
84002f96:	79 17                	jns    84002faf <__sfputc_r+0x36>
84002f98:	8b 45 10             	mov    0x10(%ebp),%eax
84002f9b:	8b 50 08             	mov    0x8(%eax),%edx
84002f9e:	8b 45 10             	mov    0x10(%ebp),%eax
84002fa1:	8b 40 18             	mov    0x18(%eax),%eax
84002fa4:	39 c2                	cmp    %eax,%edx
84002fa6:	7c 21                	jl     84002fc9 <__sfputc_r+0x50>
84002fa8:	8b 45 0c             	mov    0xc(%ebp),%eax
84002fab:	3c 0a                	cmp    $0xa,%al
84002fad:	74 1a                	je     84002fc9 <__sfputc_r+0x50>
84002faf:	8b 45 10             	mov    0x10(%ebp),%eax
84002fb2:	8b 00                	mov    (%eax),%eax
84002fb4:	8d 48 01             	lea    0x1(%eax),%ecx
84002fb7:	8b 55 10             	mov    0x10(%ebp),%edx
84002fba:	89 0a                	mov    %ecx,(%edx)
84002fbc:	8b 55 0c             	mov    0xc(%ebp),%edx
84002fbf:	88 10                	mov    %dl,(%eax)
84002fc1:	0f b6 00             	movzbl (%eax),%eax
84002fc4:	0f b6 c0             	movzbl %al,%eax
84002fc7:	eb 14                	jmp    84002fdd <__sfputc_r+0x64>
84002fc9:	83 ec 04             	sub    $0x4,%esp
84002fcc:	ff 75 10             	push   0x10(%ebp)
84002fcf:	ff 75 0c             	push   0xc(%ebp)
84002fd2:	ff 75 08             	push   0x8(%ebp)
84002fd5:	e8 6f 0c 00 00       	call   84003c49 <__swbuf_r>
84002fda:	83 c4 10             	add    $0x10,%esp
84002fdd:	c9                   	leave  
84002fde:	c3                   	ret    

84002fdf <__sfputs_r>:
84002fdf:	55                   	push   %ebp
84002fe0:	89 e5                	mov    %esp,%ebp
84002fe2:	53                   	push   %ebx
84002fe3:	83 ec 14             	sub    $0x14,%esp
84002fe6:	8b 45 0c             	mov    0xc(%ebp),%eax
84002fe9:	8b 40 64             	mov    0x64(%eax),%eax
84002fec:	25 00 20 00 00       	and    $0x2000,%eax
84002ff1:	85 c0                	test   %eax,%eax
84002ff3:	74 4c                	je     84003041 <__sfputs_r+0x62>
84002ff5:	8b 45 10             	mov    0x10(%ebp),%eax
84002ff8:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002ffb:	bb 00 00 00 00       	mov    $0x0,%ebx
84003000:	eb 31                	jmp    84003033 <__sfputs_r+0x54>
84003002:	89 d8                	mov    %ebx,%eax
84003004:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8400300b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400300e:	01 d0                	add    %edx,%eax
84003010:	8b 00                	mov    (%eax),%eax
84003012:	83 ec 04             	sub    $0x4,%esp
84003015:	ff 75 0c             	push   0xc(%ebp)
84003018:	50                   	push   %eax
84003019:	ff 75 08             	push   0x8(%ebp)
8400301c:	e8 cc 0f 00 00       	call   84003fed <_fputwc_r>
84003021:	83 c4 10             	add    $0x10,%esp
84003024:	83 f8 ff             	cmp    $0xffffffff,%eax
84003027:	75 07                	jne    84003030 <__sfputs_r+0x51>
84003029:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400302e:	eb 52                	jmp    84003082 <__sfputs_r+0xa3>
84003030:	83 c3 01             	add    $0x1,%ebx
84003033:	8b 45 14             	mov    0x14(%ebp),%eax
84003036:	c1 e8 02             	shr    $0x2,%eax
84003039:	89 da                	mov    %ebx,%edx
8400303b:	39 d0                	cmp    %edx,%eax
8400303d:	77 c3                	ja     84003002 <__sfputs_r+0x23>
8400303f:	eb 3c                	jmp    8400307d <__sfputs_r+0x9e>
84003041:	bb 00 00 00 00       	mov    $0x0,%ebx
84003046:	eb 2e                	jmp    84003076 <__sfputs_r+0x97>
84003048:	89 da                	mov    %ebx,%edx
8400304a:	8b 45 10             	mov    0x10(%ebp),%eax
8400304d:	01 d0                	add    %edx,%eax
8400304f:	0f b6 00             	movzbl (%eax),%eax
84003052:	0f be c0             	movsbl %al,%eax
84003055:	83 ec 04             	sub    $0x4,%esp
84003058:	ff 75 0c             	push   0xc(%ebp)
8400305b:	50                   	push   %eax
8400305c:	ff 75 08             	push   0x8(%ebp)
8400305f:	e8 15 ff ff ff       	call   84002f79 <__sfputc_r>
84003064:	83 c4 10             	add    $0x10,%esp
84003067:	83 f8 ff             	cmp    $0xffffffff,%eax
8400306a:	75 07                	jne    84003073 <__sfputs_r+0x94>
8400306c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003071:	eb 0f                	jmp    84003082 <__sfputs_r+0xa3>
84003073:	83 c3 01             	add    $0x1,%ebx
84003076:	89 d8                	mov    %ebx,%eax
84003078:	39 45 14             	cmp    %eax,0x14(%ebp)
8400307b:	77 cb                	ja     84003048 <__sfputs_r+0x69>
8400307d:	b8 00 00 00 00       	mov    $0x0,%eax
84003082:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003085:	c9                   	leave  
84003086:	c3                   	ret    

84003087 <vfiprintf>:
84003087:	55                   	push   %ebp
84003088:	89 e5                	mov    %esp,%ebp
8400308a:	83 ec 18             	sub    $0x18,%esp
8400308d:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003092:	ff 75 10             	push   0x10(%ebp)
84003095:	ff 75 0c             	push   0xc(%ebp)
84003098:	ff 75 08             	push   0x8(%ebp)
8400309b:	50                   	push   %eax
8400309c:	e8 0b 00 00 00       	call   840030ac <_vfiprintf_r>
840030a1:	83 c4 10             	add    $0x10,%esp
840030a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
840030a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840030aa:	c9                   	leave  
840030ab:	c3                   	ret    

840030ac <_vfiprintf_r>:
840030ac:	55                   	push   %ebp
840030ad:	89 e5                	mov    %esp,%ebp
840030af:	57                   	push   %edi
840030b0:	56                   	push   %esi
840030b1:	53                   	push   %ebx
840030b2:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
840030b8:	c7 45 e4 df 2f 00 84 	movl   $0x84002fdf,-0x1c(%ebp)
840030bf:	8b 45 08             	mov    0x8(%ebp),%eax
840030c2:	89 45 e0             	mov    %eax,-0x20(%ebp)
840030c5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
840030c9:	74 18                	je     840030e3 <_vfiprintf_r+0x37>
840030cb:	8b 45 e0             	mov    -0x20(%ebp),%eax
840030ce:	8b 40 38             	mov    0x38(%eax),%eax
840030d1:	85 c0                	test   %eax,%eax
840030d3:	75 0e                	jne    840030e3 <_vfiprintf_r+0x37>
840030d5:	83 ec 0c             	sub    $0xc,%esp
840030d8:	ff 75 e0             	push   -0x20(%ebp)
840030db:	e8 21 e1 ff ff       	call   84001201 <__sinit>
840030e0:	83 c4 10             	add    $0x10,%esp
840030e3:	8b 45 0c             	mov    0xc(%ebp),%eax
840030e6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840030ea:	98                   	cwtl   
840030eb:	83 e0 08             	and    $0x8,%eax
840030ee:	85 c0                	test   %eax,%eax
840030f0:	74 0a                	je     840030fc <_vfiprintf_r+0x50>
840030f2:	8b 45 0c             	mov    0xc(%ebp),%eax
840030f5:	8b 40 10             	mov    0x10(%eax),%eax
840030f8:	85 c0                	test   %eax,%eax
840030fa:	75 1f                	jne    8400311b <_vfiprintf_r+0x6f>
840030fc:	83 ec 08             	sub    $0x8,%esp
840030ff:	ff 75 0c             	push   0xc(%ebp)
84003102:	ff 75 08             	push   0x8(%ebp)
84003105:	e8 72 0c 00 00       	call   84003d7c <__swsetup_r>
8400310a:	83 c4 10             	add    $0x10,%esp
8400310d:	85 c0                	test   %eax,%eax
8400310f:	74 0a                	je     8400311b <_vfiprintf_r+0x6f>
84003111:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003116:	e9 df 02 00 00       	jmp    840033fa <_vfiprintf_r+0x34e>
8400311b:	8b 5d 10             	mov    0x10(%ebp),%ebx
8400311e:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
84003125:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
84003129:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
8400312d:	8b 45 14             	mov    0x14(%ebp),%eax
84003130:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
84003136:	89 de                	mov    %ebx,%esi
84003138:	eb 03                	jmp    8400313d <_vfiprintf_r+0x91>
8400313a:	83 c3 01             	add    $0x1,%ebx
8400313d:	0f b6 03             	movzbl (%ebx),%eax
84003140:	84 c0                	test   %al,%al
84003142:	74 07                	je     8400314b <_vfiprintf_r+0x9f>
84003144:	0f b6 03             	movzbl (%ebx),%eax
84003147:	3c 25                	cmp    $0x25,%al
84003149:	75 ef                	jne    8400313a <_vfiprintf_r+0x8e>
8400314b:	89 d8                	mov    %ebx,%eax
8400314d:	29 f0                	sub    %esi,%eax
8400314f:	85 c0                	test   %eax,%eax
84003151:	74 2b                	je     8400317e <_vfiprintf_r+0xd2>
84003153:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
84003159:	50                   	push   %eax
8400315a:	56                   	push   %esi
8400315b:	ff 75 0c             	push   0xc(%ebp)
8400315e:	ff 75 08             	push   0x8(%ebp)
84003161:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84003164:	ff d0                	call   *%eax
84003166:	83 c4 10             	add    $0x10,%esp
84003169:	83 f8 ff             	cmp    $0xffffffff,%eax
8400316c:	0f 84 68 02 00 00    	je     840033da <_vfiprintf_r+0x32e>
84003172:	8b 45 94             	mov    -0x6c(%ebp),%eax
84003175:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
8400317b:	89 45 94             	mov    %eax,-0x6c(%ebp)
8400317e:	0f b6 03             	movzbl (%ebx),%eax
84003181:	84 c0                	test   %al,%al
84003183:	0f 84 54 02 00 00    	je     840033dd <_vfiprintf_r+0x331>
84003189:	83 c3 01             	add    $0x1,%ebx
8400318c:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
84003193:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
8400319a:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
840031a1:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
840031a8:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
840031ac:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
840031b3:	c7 45 dc 3c 56 00 84 	movl   $0x8400563c,-0x24(%ebp)
840031ba:	eb 1b                	jmp    840031d7 <_vfiprintf_r+0x12b>
840031bc:	8b 55 80             	mov    -0x80(%ebp),%edx
840031bf:	89 f0                	mov    %esi,%eax
840031c1:	2b 45 dc             	sub    -0x24(%ebp),%eax
840031c4:	be 01 00 00 00       	mov    $0x1,%esi
840031c9:	89 c1                	mov    %eax,%ecx
840031cb:	d3 e6                	shl    %cl,%esi
840031cd:	89 f0                	mov    %esi,%eax
840031cf:	09 d0                	or     %edx,%eax
840031d1:	89 45 80             	mov    %eax,-0x80(%ebp)
840031d4:	83 c3 01             	add    $0x1,%ebx
840031d7:	0f b6 03             	movzbl (%ebx),%eax
840031da:	0f be c0             	movsbl %al,%eax
840031dd:	83 ec 04             	sub    $0x4,%esp
840031e0:	6a 05                	push   $0x5
840031e2:	50                   	push   %eax
840031e3:	ff 75 dc             	push   -0x24(%ebp)
840031e6:	e8 05 15 00 00       	call   840046f0 <memchr>
840031eb:	83 c4 10             	add    $0x10,%esp
840031ee:	89 c6                	mov    %eax,%esi
840031f0:	85 f6                	test   %esi,%esi
840031f2:	75 c8                	jne    840031bc <_vfiprintf_r+0x110>
840031f4:	8b 45 80             	mov    -0x80(%ebp),%eax
840031f7:	83 e0 10             	and    $0x10,%eax
840031fa:	85 c0                	test   %eax,%eax
840031fc:	74 04                	je     84003202 <_vfiprintf_r+0x156>
840031fe:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
84003202:	8b 45 80             	mov    -0x80(%ebp),%eax
84003205:	83 e0 08             	and    $0x8,%eax
84003208:	85 c0                	test   %eax,%eax
8400320a:	74 04                	je     84003210 <_vfiprintf_r+0x164>
8400320c:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
84003210:	0f b6 03             	movzbl (%ebx),%eax
84003213:	3c 2a                	cmp    $0x2a,%al
84003215:	75 50                	jne    84003267 <_vfiprintf_r+0x1bb>
84003217:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8400321d:	8d 50 04             	lea    0x4(%eax),%edx
84003220:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
84003226:	8b 00                	mov    (%eax),%eax
84003228:	89 45 8c             	mov    %eax,-0x74(%ebp)
8400322b:	8b 45 8c             	mov    -0x74(%ebp),%eax
8400322e:	85 c0                	test   %eax,%eax
84003230:	79 11                	jns    84003243 <_vfiprintf_r+0x197>
84003232:	8b 45 8c             	mov    -0x74(%ebp),%eax
84003235:	f7 d8                	neg    %eax
84003237:	89 45 8c             	mov    %eax,-0x74(%ebp)
8400323a:	8b 45 80             	mov    -0x80(%ebp),%eax
8400323d:	83 c8 02             	or     $0x2,%eax
84003240:	89 45 80             	mov    %eax,-0x80(%ebp)
84003243:	83 c3 01             	add    $0x1,%ebx
84003246:	eb 2d                	jmp    84003275 <_vfiprintf_r+0x1c9>
84003248:	8b 55 8c             	mov    -0x74(%ebp),%edx
8400324b:	89 d0                	mov    %edx,%eax
8400324d:	c1 e0 02             	shl    $0x2,%eax
84003250:	01 d0                	add    %edx,%eax
84003252:	01 c0                	add    %eax,%eax
84003254:	89 c2                	mov    %eax,%edx
84003256:	0f b6 03             	movzbl (%ebx),%eax
84003259:	0f be c0             	movsbl %al,%eax
8400325c:	83 e8 30             	sub    $0x30,%eax
8400325f:	01 d0                	add    %edx,%eax
84003261:	89 45 8c             	mov    %eax,-0x74(%ebp)
84003264:	83 c3 01             	add    $0x1,%ebx
84003267:	0f b6 03             	movzbl (%ebx),%eax
8400326a:	0f be c0             	movsbl %al,%eax
8400326d:	83 e8 30             	sub    $0x30,%eax
84003270:	83 f8 09             	cmp    $0x9,%eax
84003273:	76 d3                	jbe    84003248 <_vfiprintf_r+0x19c>
84003275:	0f b6 03             	movzbl (%ebx),%eax
84003278:	3c 2e                	cmp    $0x2e,%al
8400327a:	75 67                	jne    840032e3 <_vfiprintf_r+0x237>
8400327c:	83 c3 01             	add    $0x1,%ebx
8400327f:	0f b6 03             	movzbl (%ebx),%eax
84003282:	3c 2a                	cmp    $0x2a,%al
84003284:	75 27                	jne    840032ad <_vfiprintf_r+0x201>
84003286:	83 c3 01             	add    $0x1,%ebx
84003289:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8400328f:	8d 50 04             	lea    0x4(%eax),%edx
84003292:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
84003298:	8b 00                	mov    (%eax),%eax
8400329a:	89 45 84             	mov    %eax,-0x7c(%ebp)
8400329d:	8b 45 84             	mov    -0x7c(%ebp),%eax
840032a0:	85 c0                	test   %eax,%eax
840032a2:	79 3f                	jns    840032e3 <_vfiprintf_r+0x237>
840032a4:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
840032ab:	eb 36                	jmp    840032e3 <_vfiprintf_r+0x237>
840032ad:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
840032b4:	eb 1f                	jmp    840032d5 <_vfiprintf_r+0x229>
840032b6:	8b 55 84             	mov    -0x7c(%ebp),%edx
840032b9:	89 d0                	mov    %edx,%eax
840032bb:	c1 e0 02             	shl    $0x2,%eax
840032be:	01 d0                	add    %edx,%eax
840032c0:	01 c0                	add    %eax,%eax
840032c2:	89 c2                	mov    %eax,%edx
840032c4:	0f b6 03             	movzbl (%ebx),%eax
840032c7:	0f be c0             	movsbl %al,%eax
840032ca:	83 e8 30             	sub    $0x30,%eax
840032cd:	01 d0                	add    %edx,%eax
840032cf:	89 45 84             	mov    %eax,-0x7c(%ebp)
840032d2:	83 c3 01             	add    $0x1,%ebx
840032d5:	0f b6 03             	movzbl (%ebx),%eax
840032d8:	0f be c0             	movsbl %al,%eax
840032db:	83 e8 30             	sub    $0x30,%eax
840032de:	83 f8 09             	cmp    $0x9,%eax
840032e1:	76 d3                	jbe    840032b6 <_vfiprintf_r+0x20a>
840032e3:	c7 45 dc 42 56 00 84 	movl   $0x84005642,-0x24(%ebp)
840032ea:	0f b6 03             	movzbl (%ebx),%eax
840032ed:	0f be c0             	movsbl %al,%eax
840032f0:	83 ec 04             	sub    $0x4,%esp
840032f3:	6a 03                	push   $0x3
840032f5:	50                   	push   %eax
840032f6:	ff 75 dc             	push   -0x24(%ebp)
840032f9:	e8 f2 13 00 00       	call   840046f0 <memchr>
840032fe:	83 c4 10             	add    $0x10,%esp
84003301:	89 c6                	mov    %eax,%esi
84003303:	85 f6                	test   %esi,%esi
84003305:	74 1b                	je     84003322 <_vfiprintf_r+0x276>
84003307:	8b 55 80             	mov    -0x80(%ebp),%edx
8400330a:	89 f0                	mov    %esi,%eax
8400330c:	2b 45 dc             	sub    -0x24(%ebp),%eax
8400330f:	be 40 00 00 00       	mov    $0x40,%esi
84003314:	89 c1                	mov    %eax,%ecx
84003316:	d3 e6                	shl    %cl,%esi
84003318:	89 f0                	mov    %esi,%eax
8400331a:	09 d0                	or     %edx,%eax
8400331c:	89 45 80             	mov    %eax,-0x80(%ebp)
8400331f:	83 c3 01             	add    $0x1,%ebx
84003322:	89 d8                	mov    %ebx,%eax
84003324:	8d 58 01             	lea    0x1(%eax),%ebx
84003327:	0f b6 00             	movzbl (%eax),%eax
8400332a:	88 45 98             	mov    %al,-0x68(%ebp)
8400332d:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
84003331:	0f be c0             	movsbl %al,%eax
84003334:	83 ec 04             	sub    $0x4,%esp
84003337:	6a 06                	push   $0x6
84003339:	50                   	push   %eax
8400333a:	68 46 56 00 84       	push   $0x84005646
8400333f:	e8 ac 13 00 00       	call   840046f0 <memchr>
84003344:	83 c4 10             	add    $0x10,%esp
84003347:	89 c6                	mov    %eax,%esi
84003349:	85 f6                	test   %esi,%esi
8400334b:	74 5a                	je     840033a7 <_vfiprintf_r+0x2fb>
8400334d:	b8 00 00 00 00       	mov    $0x0,%eax
84003352:	85 c0                	test   %eax,%eax
84003354:	75 2e                	jne    84003384 <_vfiprintf_r+0x2d8>
84003356:	8b 45 80             	mov    -0x80(%ebp),%eax
84003359:	25 00 01 00 00       	and    $0x100,%eax
8400335e:	85 c0                	test   %eax,%eax
84003360:	74 11                	je     84003373 <_vfiprintf_r+0x2c7>
84003362:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003368:	83 c0 0c             	add    $0xc,%eax
8400336b:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
84003371:	eb 55                	jmp    840033c8 <_vfiprintf_r+0x31c>
84003373:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003379:	83 c0 08             	add    $0x8,%eax
8400337c:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
84003382:	eb 44                	jmp    840033c8 <_vfiprintf_r+0x31c>
84003384:	83 ec 0c             	sub    $0xc,%esp
84003387:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
8400338d:	50                   	push   %eax
8400338e:	ff 75 e4             	push   -0x1c(%ebp)
84003391:	ff 75 0c             	push   0xc(%ebp)
84003394:	8d 45 80             	lea    -0x80(%ebp),%eax
84003397:	50                   	push   %eax
84003398:	ff 75 08             	push   0x8(%ebp)
8400339b:	e8 60 cc ff 7b       	call   0 <_start-0x84000000>
840033a0:	83 c4 20             	add    $0x20,%esp
840033a3:	89 c7                	mov    %eax,%edi
840033a5:	eb 21                	jmp    840033c8 <_vfiprintf_r+0x31c>
840033a7:	83 ec 0c             	sub    $0xc,%esp
840033aa:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
840033b0:	50                   	push   %eax
840033b1:	ff 75 e4             	push   -0x1c(%ebp)
840033b4:	ff 75 0c             	push   0xc(%ebp)
840033b7:	8d 45 80             	lea    -0x80(%ebp),%eax
840033ba:	50                   	push   %eax
840033bb:	ff 75 08             	push   0x8(%ebp)
840033be:	e8 da 01 00 00       	call   8400359d <_printf_i>
840033c3:	83 c4 20             	add    $0x20,%esp
840033c6:	89 c7                	mov    %eax,%edi
840033c8:	83 ff ff             	cmp    $0xffffffff,%edi
840033cb:	74 13                	je     840033e0 <_vfiprintf_r+0x334>
840033cd:	8b 45 94             	mov    -0x6c(%ebp),%eax
840033d0:	01 f8                	add    %edi,%eax
840033d2:	89 45 94             	mov    %eax,-0x6c(%ebp)
840033d5:	e9 5c fd ff ff       	jmp    84003136 <_vfiprintf_r+0x8a>
840033da:	90                   	nop
840033db:	eb 04                	jmp    840033e1 <_vfiprintf_r+0x335>
840033dd:	90                   	nop
840033de:	eb 01                	jmp    840033e1 <_vfiprintf_r+0x335>
840033e0:	90                   	nop
840033e1:	8b 45 0c             	mov    0xc(%ebp),%eax
840033e4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840033e8:	98                   	cwtl   
840033e9:	83 e0 40             	and    $0x40,%eax
840033ec:	85 c0                	test   %eax,%eax
840033ee:	75 05                	jne    840033f5 <_vfiprintf_r+0x349>
840033f0:	8b 45 94             	mov    -0x6c(%ebp),%eax
840033f3:	eb 05                	jmp    840033fa <_vfiprintf_r+0x34e>
840033f5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840033fa:	8d 65 f4             	lea    -0xc(%ebp),%esp
840033fd:	5b                   	pop    %ebx
840033fe:	5e                   	pop    %esi
840033ff:	5f                   	pop    %edi
84003400:	5d                   	pop    %ebp
84003401:	c3                   	ret    

84003402 <_printf_common>:
84003402:	55                   	push   %ebp
84003403:	89 e5                	mov    %esp,%ebp
84003405:	83 ec 18             	sub    $0x18,%esp
84003408:	8b 45 0c             	mov    0xc(%ebp),%eax
8400340b:	8b 50 10             	mov    0x10(%eax),%edx
8400340e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003411:	8b 40 08             	mov    0x8(%eax),%eax
84003414:	39 c2                	cmp    %eax,%edx
84003416:	0f 4c d0             	cmovl  %eax,%edx
84003419:	8b 45 10             	mov    0x10(%ebp),%eax
8400341c:	89 10                	mov    %edx,(%eax)
8400341e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003421:	0f b6 40 43          	movzbl 0x43(%eax),%eax
84003425:	84 c0                	test   %al,%al
84003427:	74 0d                	je     84003436 <_printf_common+0x34>
84003429:	8b 45 10             	mov    0x10(%ebp),%eax
8400342c:	8b 00                	mov    (%eax),%eax
8400342e:	8d 50 01             	lea    0x1(%eax),%edx
84003431:	8b 45 10             	mov    0x10(%ebp),%eax
84003434:	89 10                	mov    %edx,(%eax)
84003436:	8b 45 0c             	mov    0xc(%ebp),%eax
84003439:	8b 00                	mov    (%eax),%eax
8400343b:	83 e0 20             	and    $0x20,%eax
8400343e:	85 c0                	test   %eax,%eax
84003440:	74 0d                	je     8400344f <_printf_common+0x4d>
84003442:	8b 45 10             	mov    0x10(%ebp),%eax
84003445:	8b 00                	mov    (%eax),%eax
84003447:	8d 50 02             	lea    0x2(%eax),%edx
8400344a:	8b 45 10             	mov    0x10(%ebp),%eax
8400344d:	89 10                	mov    %edx,(%eax)
8400344f:	8b 45 0c             	mov    0xc(%ebp),%eax
84003452:	8b 00                	mov    (%eax),%eax
84003454:	83 e0 06             	and    $0x6,%eax
84003457:	85 c0                	test   %eax,%eax
84003459:	75 41                	jne    8400349c <_printf_common+0x9a>
8400345b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84003462:	eb 24                	jmp    84003488 <_printf_common+0x86>
84003464:	8b 45 0c             	mov    0xc(%ebp),%eax
84003467:	83 c0 19             	add    $0x19,%eax
8400346a:	6a 01                	push   $0x1
8400346c:	50                   	push   %eax
8400346d:	ff 75 14             	push   0x14(%ebp)
84003470:	ff 75 08             	push   0x8(%ebp)
84003473:	8b 45 18             	mov    0x18(%ebp),%eax
84003476:	ff d0                	call   *%eax
84003478:	83 c4 10             	add    $0x10,%esp
8400347b:	83 f8 ff             	cmp    $0xffffffff,%eax
8400347e:	0f 84 0b 01 00 00    	je     8400358f <_printf_common+0x18d>
84003484:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84003488:	8b 45 0c             	mov    0xc(%ebp),%eax
8400348b:	8b 50 0c             	mov    0xc(%eax),%edx
8400348e:	8b 45 10             	mov    0x10(%ebp),%eax
84003491:	8b 08                	mov    (%eax),%ecx
84003493:	89 d0                	mov    %edx,%eax
84003495:	29 c8                	sub    %ecx,%eax
84003497:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8400349a:	7c c8                	jl     84003464 <_printf_common+0x62>
8400349c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
840034a3:	8b 45 0c             	mov    0xc(%ebp),%eax
840034a6:	0f b6 40 43          	movzbl 0x43(%eax),%eax
840034aa:	84 c0                	test   %al,%al
840034ac:	74 04                	je     840034b2 <_printf_common+0xb0>
840034ae:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
840034b2:	8b 45 0c             	mov    0xc(%ebp),%eax
840034b5:	8b 00                	mov    (%eax),%eax
840034b7:	83 e0 20             	and    $0x20,%eax
840034ba:	85 c0                	test   %eax,%eax
840034bc:	74 28                	je     840034e6 <_printf_common+0xe4>
840034be:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034c1:	8d 50 01             	lea    0x1(%eax),%edx
840034c4:	89 55 f4             	mov    %edx,-0xc(%ebp)
840034c7:	8b 55 0c             	mov    0xc(%ebp),%edx
840034ca:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
840034cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034d2:	8d 50 01             	lea    0x1(%eax),%edx
840034d5:	89 55 f4             	mov    %edx,-0xc(%ebp)
840034d8:	8b 55 0c             	mov    0xc(%ebp),%edx
840034db:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
840034df:	8b 55 0c             	mov    0xc(%ebp),%edx
840034e2:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
840034e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034e9:	8b 55 0c             	mov    0xc(%ebp),%edx
840034ec:	83 c2 43             	add    $0x43,%edx
840034ef:	50                   	push   %eax
840034f0:	52                   	push   %edx
840034f1:	ff 75 14             	push   0x14(%ebp)
840034f4:	ff 75 08             	push   0x8(%ebp)
840034f7:	8b 45 18             	mov    0x18(%ebp),%eax
840034fa:	ff d0                	call   *%eax
840034fc:	83 c4 10             	add    $0x10,%esp
840034ff:	83 f8 ff             	cmp    $0xffffffff,%eax
84003502:	0f 84 8a 00 00 00    	je     84003592 <_printf_common+0x190>
84003508:	8b 45 0c             	mov    0xc(%ebp),%eax
8400350b:	8b 50 0c             	mov    0xc(%eax),%edx
8400350e:	8b 45 10             	mov    0x10(%ebp),%eax
84003511:	8b 08                	mov    (%eax),%ecx
84003513:	89 d0                	mov    %edx,%eax
84003515:	29 c8                	sub    %ecx,%eax
84003517:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400351a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400351d:	8b 00                	mov    (%eax),%eax
8400351f:	83 e0 06             	and    $0x6,%eax
84003522:	83 f8 04             	cmp    $0x4,%eax
84003525:	75 06                	jne    8400352d <_printf_common+0x12b>
84003527:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400352b:	79 07                	jns    84003534 <_printf_common+0x132>
8400352d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003534:	8b 45 0c             	mov    0xc(%ebp),%eax
84003537:	8b 50 08             	mov    0x8(%eax),%edx
8400353a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400353d:	8b 40 10             	mov    0x10(%eax),%eax
84003540:	39 c2                	cmp    %eax,%edx
84003542:	7e 13                	jle    84003557 <_printf_common+0x155>
84003544:	8b 45 0c             	mov    0xc(%ebp),%eax
84003547:	8b 50 08             	mov    0x8(%eax),%edx
8400354a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400354d:	8b 48 10             	mov    0x10(%eax),%ecx
84003550:	89 d0                	mov    %edx,%eax
84003552:	29 c8                	sub    %ecx,%eax
84003554:	01 45 f4             	add    %eax,-0xc(%ebp)
84003557:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
8400355e:	eb 20                	jmp    84003580 <_printf_common+0x17e>
84003560:	8b 45 0c             	mov    0xc(%ebp),%eax
84003563:	83 c0 1a             	add    $0x1a,%eax
84003566:	6a 01                	push   $0x1
84003568:	50                   	push   %eax
84003569:	ff 75 14             	push   0x14(%ebp)
8400356c:	ff 75 08             	push   0x8(%ebp)
8400356f:	8b 45 18             	mov    0x18(%ebp),%eax
84003572:	ff d0                	call   *%eax
84003574:	83 c4 10             	add    $0x10,%esp
84003577:	83 f8 ff             	cmp    $0xffffffff,%eax
8400357a:	74 19                	je     84003595 <_printf_common+0x193>
8400357c:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
84003580:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003583:	3b 45 f4             	cmp    -0xc(%ebp),%eax
84003586:	7c d8                	jl     84003560 <_printf_common+0x15e>
84003588:	b8 00 00 00 00       	mov    $0x0,%eax
8400358d:	eb 0c                	jmp    8400359b <_printf_common+0x199>
8400358f:	90                   	nop
84003590:	eb 04                	jmp    84003596 <_printf_common+0x194>
84003592:	90                   	nop
84003593:	eb 01                	jmp    84003596 <_printf_common+0x194>
84003595:	90                   	nop
84003596:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400359b:	c9                   	leave  
8400359c:	c3                   	ret    

8400359d <_printf_i>:
8400359d:	55                   	push   %ebp
8400359e:	89 e5                	mov    %esp,%ebp
840035a0:	53                   	push   %ebx
840035a1:	83 ec 24             	sub    $0x24,%esp
840035a4:	8b 45 0c             	mov    0xc(%ebp),%eax
840035a7:	83 c0 1b             	add    $0x1b,%eax
840035aa:	83 c0 28             	add    $0x28,%eax
840035ad:	89 45 ec             	mov    %eax,-0x14(%ebp)
840035b0:	c7 45 e8 50 56 00 84 	movl   $0x84005650,-0x18(%ebp)
840035b7:	8b 45 0c             	mov    0xc(%ebp),%eax
840035ba:	0f b6 40 18          	movzbl 0x18(%eax),%eax
840035be:	0f be c0             	movsbl %al,%eax
840035c1:	85 c0                	test   %eax,%eax
840035c3:	0f 84 00 03 00 00    	je     840038c9 <_printf_i+0x32c>
840035c9:	85 c0                	test   %eax,%eax
840035cb:	0f 88 52 03 00 00    	js     84003923 <_printf_i+0x386>
840035d1:	83 f8 78             	cmp    $0x78,%eax
840035d4:	0f 8f 49 03 00 00    	jg     84003923 <_printf_i+0x386>
840035da:	83 f8 58             	cmp    $0x58,%eax
840035dd:	0f 8c 40 03 00 00    	jl     84003923 <_printf_i+0x386>
840035e3:	83 e8 58             	sub    $0x58,%eax
840035e6:	83 f8 20             	cmp    $0x20,%eax
840035e9:	0f 87 34 03 00 00    	ja     84003923 <_printf_i+0x386>
840035ef:	8b 04 85 74 56 00 84 	mov    -0x7bffa98c(,%eax,4),%eax
840035f6:	ff e0                	jmp    *%eax
840035f8:	8b 45 18             	mov    0x18(%ebp),%eax
840035fb:	8b 00                	mov    (%eax),%eax
840035fd:	8d 48 04             	lea    0x4(%eax),%ecx
84003600:	8b 55 18             	mov    0x18(%ebp),%edx
84003603:	89 0a                	mov    %ecx,(%edx)
84003605:	8b 00                	mov    (%eax),%eax
84003607:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8400360b:	89 c2                	mov    %eax,%edx
8400360d:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003610:	88 10                	mov    %dl,(%eax)
84003612:	8b 45 0c             	mov    0xc(%ebp),%eax
84003615:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8400361c:	e9 1c 03 00 00       	jmp    8400393d <_printf_i+0x3a0>
84003621:	8b 45 0c             	mov    0xc(%ebp),%eax
84003624:	8b 00                	mov    (%eax),%eax
84003626:	25 80 00 00 00       	and    $0x80,%eax
8400362b:	85 c0                	test   %eax,%eax
8400362d:	74 11                	je     84003640 <_printf_i+0xa3>
8400362f:	8b 45 18             	mov    0x18(%ebp),%eax
84003632:	8b 00                	mov    (%eax),%eax
84003634:	8d 48 04             	lea    0x4(%eax),%ecx
84003637:	8b 55 18             	mov    0x18(%ebp),%edx
8400363a:	89 0a                	mov    %ecx,(%edx)
8400363c:	8b 00                	mov    (%eax),%eax
8400363e:	eb 2d                	jmp    8400366d <_printf_i+0xd0>
84003640:	8b 45 0c             	mov    0xc(%ebp),%eax
84003643:	8b 00                	mov    (%eax),%eax
84003645:	83 e0 40             	and    $0x40,%eax
84003648:	85 c0                	test   %eax,%eax
8400364a:	74 12                	je     8400365e <_printf_i+0xc1>
8400364c:	8b 45 18             	mov    0x18(%ebp),%eax
8400364f:	8b 00                	mov    (%eax),%eax
84003651:	8d 48 04             	lea    0x4(%eax),%ecx
84003654:	8b 55 18             	mov    0x18(%ebp),%edx
84003657:	89 0a                	mov    %ecx,(%edx)
84003659:	8b 00                	mov    (%eax),%eax
8400365b:	98                   	cwtl   
8400365c:	eb 0f                	jmp    8400366d <_printf_i+0xd0>
8400365e:	8b 45 18             	mov    0x18(%ebp),%eax
84003661:	8b 00                	mov    (%eax),%eax
84003663:	8d 48 04             	lea    0x4(%eax),%ecx
84003666:	8b 55 18             	mov    0x18(%ebp),%edx
84003669:	89 0a                	mov    %ecx,(%edx)
8400366b:	8b 00                	mov    (%eax),%eax
8400366d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003670:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003673:	85 c0                	test   %eax,%eax
84003675:	79 0a                	jns    84003681 <_printf_i+0xe4>
84003677:	f7 5d f4             	negl   -0xc(%ebp)
8400367a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400367d:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
84003681:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
84003688:	e9 28 01 00 00       	jmp    840037b5 <_printf_i+0x218>
8400368d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003690:	8b 00                	mov    (%eax),%eax
84003692:	25 80 00 00 00       	and    $0x80,%eax
84003697:	85 c0                	test   %eax,%eax
84003699:	74 11                	je     840036ac <_printf_i+0x10f>
8400369b:	8b 45 18             	mov    0x18(%ebp),%eax
8400369e:	8b 00                	mov    (%eax),%eax
840036a0:	8d 48 04             	lea    0x4(%eax),%ecx
840036a3:	8b 55 18             	mov    0x18(%ebp),%edx
840036a6:	89 0a                	mov    %ecx,(%edx)
840036a8:	8b 00                	mov    (%eax),%eax
840036aa:	eb 2f                	jmp    840036db <_printf_i+0x13e>
840036ac:	8b 45 0c             	mov    0xc(%ebp),%eax
840036af:	8b 00                	mov    (%eax),%eax
840036b1:	83 e0 40             	and    $0x40,%eax
840036b4:	85 c0                	test   %eax,%eax
840036b6:	74 14                	je     840036cc <_printf_i+0x12f>
840036b8:	8b 45 18             	mov    0x18(%ebp),%eax
840036bb:	8b 00                	mov    (%eax),%eax
840036bd:	8d 48 04             	lea    0x4(%eax),%ecx
840036c0:	8b 55 18             	mov    0x18(%ebp),%edx
840036c3:	89 0a                	mov    %ecx,(%edx)
840036c5:	8b 00                	mov    (%eax),%eax
840036c7:	0f b7 c0             	movzwl %ax,%eax
840036ca:	eb 0f                	jmp    840036db <_printf_i+0x13e>
840036cc:	8b 45 18             	mov    0x18(%ebp),%eax
840036cf:	8b 00                	mov    (%eax),%eax
840036d1:	8d 48 04             	lea    0x4(%eax),%ecx
840036d4:	8b 55 18             	mov    0x18(%ebp),%edx
840036d7:	89 0a                	mov    %ecx,(%edx)
840036d9:	8b 00                	mov    (%eax),%eax
840036db:	89 45 f4             	mov    %eax,-0xc(%ebp)
840036de:	8b 45 0c             	mov    0xc(%ebp),%eax
840036e1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
840036e5:	3c 6f                	cmp    $0x6f,%al
840036e7:	75 07                	jne    840036f0 <_printf_i+0x153>
840036e9:	b8 08 00 00 00       	mov    $0x8,%eax
840036ee:	eb 05                	jmp    840036f5 <_printf_i+0x158>
840036f0:	b8 0a 00 00 00       	mov    $0xa,%eax
840036f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
840036f8:	e9 b1 00 00 00       	jmp    840037ae <_printf_i+0x211>
840036fd:	8b 45 0c             	mov    0xc(%ebp),%eax
84003700:	c6 40 45 58          	movb   $0x58,0x45(%eax)
84003704:	eb 1d                	jmp    84003723 <_printf_i+0x186>
84003706:	8b 45 0c             	mov    0xc(%ebp),%eax
84003709:	8b 00                	mov    (%eax),%eax
8400370b:	83 c8 20             	or     $0x20,%eax
8400370e:	89 c2                	mov    %eax,%edx
84003710:	8b 45 0c             	mov    0xc(%ebp),%eax
84003713:	89 10                	mov    %edx,(%eax)
84003715:	8b 45 0c             	mov    0xc(%ebp),%eax
84003718:	c6 40 45 78          	movb   $0x78,0x45(%eax)
8400371c:	c7 45 e8 61 56 00 84 	movl   $0x84005661,-0x18(%ebp)
84003723:	8b 45 0c             	mov    0xc(%ebp),%eax
84003726:	8b 00                	mov    (%eax),%eax
84003728:	25 80 00 00 00       	and    $0x80,%eax
8400372d:	85 c0                	test   %eax,%eax
8400372f:	74 11                	je     84003742 <_printf_i+0x1a5>
84003731:	8b 45 18             	mov    0x18(%ebp),%eax
84003734:	8b 00                	mov    (%eax),%eax
84003736:	8d 48 04             	lea    0x4(%eax),%ecx
84003739:	8b 55 18             	mov    0x18(%ebp),%edx
8400373c:	89 0a                	mov    %ecx,(%edx)
8400373e:	8b 00                	mov    (%eax),%eax
84003740:	eb 2f                	jmp    84003771 <_printf_i+0x1d4>
84003742:	8b 45 0c             	mov    0xc(%ebp),%eax
84003745:	8b 00                	mov    (%eax),%eax
84003747:	83 e0 40             	and    $0x40,%eax
8400374a:	85 c0                	test   %eax,%eax
8400374c:	74 14                	je     84003762 <_printf_i+0x1c5>
8400374e:	8b 45 18             	mov    0x18(%ebp),%eax
84003751:	8b 00                	mov    (%eax),%eax
84003753:	8d 48 04             	lea    0x4(%eax),%ecx
84003756:	8b 55 18             	mov    0x18(%ebp),%edx
84003759:	89 0a                	mov    %ecx,(%edx)
8400375b:	8b 00                	mov    (%eax),%eax
8400375d:	0f b7 c0             	movzwl %ax,%eax
84003760:	eb 0f                	jmp    84003771 <_printf_i+0x1d4>
84003762:	8b 45 18             	mov    0x18(%ebp),%eax
84003765:	8b 00                	mov    (%eax),%eax
84003767:	8d 48 04             	lea    0x4(%eax),%ecx
8400376a:	8b 55 18             	mov    0x18(%ebp),%edx
8400376d:	89 0a                	mov    %ecx,(%edx)
8400376f:	8b 00                	mov    (%eax),%eax
84003771:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003774:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
8400377b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400377e:	8b 00                	mov    (%eax),%eax
84003780:	83 e0 01             	and    $0x1,%eax
84003783:	85 c0                	test   %eax,%eax
84003785:	74 0f                	je     84003796 <_printf_i+0x1f9>
84003787:	8b 45 0c             	mov    0xc(%ebp),%eax
8400378a:	8b 00                	mov    (%eax),%eax
8400378c:	83 c8 20             	or     $0x20,%eax
8400378f:	89 c2                	mov    %eax,%edx
84003791:	8b 45 0c             	mov    0xc(%ebp),%eax
84003794:	89 10                	mov    %edx,(%eax)
84003796:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400379a:	75 11                	jne    840037ad <_printf_i+0x210>
8400379c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400379f:	8b 00                	mov    (%eax),%eax
840037a1:	83 e0 df             	and    $0xffffffdf,%eax
840037a4:	89 c2                	mov    %eax,%edx
840037a6:	8b 45 0c             	mov    0xc(%ebp),%eax
840037a9:	89 10                	mov    %edx,(%eax)
840037ab:	eb 01                	jmp    840037ae <_printf_i+0x211>
840037ad:	90                   	nop
840037ae:	8b 45 0c             	mov    0xc(%ebp),%eax
840037b1:	c6 40 43 00          	movb   $0x0,0x43(%eax)
840037b5:	8b 45 0c             	mov    0xc(%ebp),%eax
840037b8:	8b 50 04             	mov    0x4(%eax),%edx
840037bb:	8b 45 0c             	mov    0xc(%ebp),%eax
840037be:	89 50 08             	mov    %edx,0x8(%eax)
840037c1:	8b 45 0c             	mov    0xc(%ebp),%eax
840037c4:	8b 40 08             	mov    0x8(%eax),%eax
840037c7:	85 c0                	test   %eax,%eax
840037c9:	78 0f                	js     840037da <_printf_i+0x23d>
840037cb:	8b 45 0c             	mov    0xc(%ebp),%eax
840037ce:	8b 00                	mov    (%eax),%eax
840037d0:	83 e0 fb             	and    $0xfffffffb,%eax
840037d3:	89 c2                	mov    %eax,%edx
840037d5:	8b 45 0c             	mov    0xc(%ebp),%eax
840037d8:	89 10                	mov    %edx,(%eax)
840037da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
840037de:	75 0a                	jne    840037ea <_printf_i+0x24d>
840037e0:	8b 45 0c             	mov    0xc(%ebp),%eax
840037e3:	8b 40 04             	mov    0x4(%eax),%eax
840037e6:	85 c0                	test   %eax,%eax
840037e8:	74 34                	je     8400381e <_printf_i+0x281>
840037ea:	8b 4d f0             	mov    -0x10(%ebp),%ecx
840037ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
840037f0:	ba 00 00 00 00       	mov    $0x0,%edx
840037f5:	f7 f1                	div    %ecx
840037f7:	8b 45 e8             	mov    -0x18(%ebp),%eax
840037fa:	01 d0                	add    %edx,%eax
840037fc:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003800:	0f b6 10             	movzbl (%eax),%edx
84003803:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003806:	88 10                	mov    %dl,(%eax)
84003808:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8400380b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400380e:	ba 00 00 00 00       	mov    $0x0,%edx
84003813:	f7 f3                	div    %ebx
84003815:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003818:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400381c:	75 cc                	jne    840037ea <_printf_i+0x24d>
8400381e:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
84003822:	75 26                	jne    8400384a <_printf_i+0x2ad>
84003824:	8b 45 0c             	mov    0xc(%ebp),%eax
84003827:	8b 00                	mov    (%eax),%eax
84003829:	83 e0 01             	and    $0x1,%eax
8400382c:	85 c0                	test   %eax,%eax
8400382e:	74 1a                	je     8400384a <_printf_i+0x2ad>
84003830:	8b 45 0c             	mov    0xc(%ebp),%eax
84003833:	8b 50 04             	mov    0x4(%eax),%edx
84003836:	8b 45 0c             	mov    0xc(%ebp),%eax
84003839:	8b 40 10             	mov    0x10(%eax),%eax
8400383c:	39 c2                	cmp    %eax,%edx
8400383e:	7f 0a                	jg     8400384a <_printf_i+0x2ad>
84003840:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003844:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003847:	c6 00 30             	movb   $0x30,(%eax)
8400384a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400384d:	83 c0 1b             	add    $0x1b,%eax
84003850:	83 c0 28             	add    $0x28,%eax
84003853:	2b 45 ec             	sub    -0x14(%ebp),%eax
84003856:	89 c2                	mov    %eax,%edx
84003858:	8b 45 0c             	mov    0xc(%ebp),%eax
8400385b:	89 50 10             	mov    %edx,0x10(%eax)
8400385e:	e9 e2 00 00 00       	jmp    84003945 <_printf_i+0x3a8>
84003863:	8b 45 0c             	mov    0xc(%ebp),%eax
84003866:	8b 00                	mov    (%eax),%eax
84003868:	25 80 00 00 00       	and    $0x80,%eax
8400386d:	85 c0                	test   %eax,%eax
8400386f:	74 19                	je     8400388a <_printf_i+0x2ed>
84003871:	8b 45 18             	mov    0x18(%ebp),%eax
84003874:	8b 00                	mov    (%eax),%eax
84003876:	8d 48 04             	lea    0x4(%eax),%ecx
84003879:	8b 55 18             	mov    0x18(%ebp),%edx
8400387c:	89 0a                	mov    %ecx,(%edx)
8400387e:	8b 00                	mov    (%eax),%eax
84003880:	8b 55 0c             	mov    0xc(%ebp),%edx
84003883:	8b 52 14             	mov    0x14(%edx),%edx
84003886:	89 10                	mov    %edx,(%eax)
84003888:	eb 3f                	jmp    840038c9 <_printf_i+0x32c>
8400388a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400388d:	8b 00                	mov    (%eax),%eax
8400388f:	83 e0 40             	and    $0x40,%eax
84003892:	85 c0                	test   %eax,%eax
84003894:	74 1c                	je     840038b2 <_printf_i+0x315>
84003896:	8b 45 0c             	mov    0xc(%ebp),%eax
84003899:	8b 58 14             	mov    0x14(%eax),%ebx
8400389c:	8b 45 18             	mov    0x18(%ebp),%eax
8400389f:	8b 00                	mov    (%eax),%eax
840038a1:	8d 48 04             	lea    0x4(%eax),%ecx
840038a4:	8b 55 18             	mov    0x18(%ebp),%edx
840038a7:	89 0a                	mov    %ecx,(%edx)
840038a9:	8b 00                	mov    (%eax),%eax
840038ab:	89 da                	mov    %ebx,%edx
840038ad:	66 89 10             	mov    %dx,(%eax)
840038b0:	eb 17                	jmp    840038c9 <_printf_i+0x32c>
840038b2:	8b 45 18             	mov    0x18(%ebp),%eax
840038b5:	8b 00                	mov    (%eax),%eax
840038b7:	8d 48 04             	lea    0x4(%eax),%ecx
840038ba:	8b 55 18             	mov    0x18(%ebp),%edx
840038bd:	89 0a                	mov    %ecx,(%edx)
840038bf:	8b 00                	mov    (%eax),%eax
840038c1:	8b 55 0c             	mov    0xc(%ebp),%edx
840038c4:	8b 52 14             	mov    0x14(%edx),%edx
840038c7:	89 10                	mov    %edx,(%eax)
840038c9:	8b 45 0c             	mov    0xc(%ebp),%eax
840038cc:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
840038d3:	eb 70                	jmp    84003945 <_printf_i+0x3a8>
840038d5:	8b 45 18             	mov    0x18(%ebp),%eax
840038d8:	8b 00                	mov    (%eax),%eax
840038da:	8d 48 04             	lea    0x4(%eax),%ecx
840038dd:	8b 55 18             	mov    0x18(%ebp),%edx
840038e0:	89 0a                	mov    %ecx,(%edx)
840038e2:	8b 00                	mov    (%eax),%eax
840038e4:	89 45 ec             	mov    %eax,-0x14(%ebp)
840038e7:	8b 45 0c             	mov    0xc(%ebp),%eax
840038ea:	8b 40 04             	mov    0x4(%eax),%eax
840038ed:	83 ec 04             	sub    $0x4,%esp
840038f0:	50                   	push   %eax
840038f1:	6a 00                	push   $0x0
840038f3:	ff 75 ec             	push   -0x14(%ebp)
840038f6:	e8 f5 0d 00 00       	call   840046f0 <memchr>
840038fb:	83 c4 10             	add    $0x10,%esp
840038fe:	89 45 e0             	mov    %eax,-0x20(%ebp)
84003901:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
84003905:	74 0e                	je     84003915 <_printf_i+0x378>
84003907:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400390a:	2b 45 ec             	sub    -0x14(%ebp),%eax
8400390d:	89 c2                	mov    %eax,%edx
8400390f:	8b 45 0c             	mov    0xc(%ebp),%eax
84003912:	89 50 04             	mov    %edx,0x4(%eax)
84003915:	8b 45 0c             	mov    0xc(%ebp),%eax
84003918:	8b 50 04             	mov    0x4(%eax),%edx
8400391b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400391e:	89 50 10             	mov    %edx,0x10(%eax)
84003921:	eb 1a                	jmp    8400393d <_printf_i+0x3a0>
84003923:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003927:	8b 45 0c             	mov    0xc(%ebp),%eax
8400392a:	0f b6 50 18          	movzbl 0x18(%eax),%edx
8400392e:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003931:	88 10                	mov    %dl,(%eax)
84003933:	8b 45 0c             	mov    0xc(%ebp),%eax
84003936:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8400393d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003940:	c6 40 43 00          	movb   $0x0,0x43(%eax)
84003944:	90                   	nop
84003945:	83 ec 0c             	sub    $0xc,%esp
84003948:	ff 75 14             	push   0x14(%ebp)
8400394b:	ff 75 10             	push   0x10(%ebp)
8400394e:	8d 45 d8             	lea    -0x28(%ebp),%eax
84003951:	50                   	push   %eax
84003952:	ff 75 0c             	push   0xc(%ebp)
84003955:	ff 75 08             	push   0x8(%ebp)
84003958:	e8 a5 fa ff ff       	call   84003402 <_printf_common>
8400395d:	83 c4 20             	add    $0x20,%esp
84003960:	89 45 dc             	mov    %eax,-0x24(%ebp)
84003963:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
84003967:	74 72                	je     840039db <_printf_i+0x43e>
84003969:	8b 45 0c             	mov    0xc(%ebp),%eax
8400396c:	8b 40 10             	mov    0x10(%eax),%eax
8400396f:	50                   	push   %eax
84003970:	ff 75 ec             	push   -0x14(%ebp)
84003973:	ff 75 10             	push   0x10(%ebp)
84003976:	ff 75 08             	push   0x8(%ebp)
84003979:	8b 45 14             	mov    0x14(%ebp),%eax
8400397c:	ff d0                	call   *%eax
8400397e:	83 c4 10             	add    $0x10,%esp
84003981:	83 f8 ff             	cmp    $0xffffffff,%eax
84003984:	74 58                	je     840039de <_printf_i+0x441>
84003986:	8b 45 0c             	mov    0xc(%ebp),%eax
84003989:	8b 00                	mov    (%eax),%eax
8400398b:	83 e0 02             	and    $0x2,%eax
8400398e:	85 c0                	test   %eax,%eax
84003990:	74 39                	je     840039cb <_printf_i+0x42e>
84003992:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84003999:	eb 20                	jmp    840039bb <_printf_i+0x41e>
8400399b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400399e:	83 c0 19             	add    $0x19,%eax
840039a1:	6a 01                	push   $0x1
840039a3:	50                   	push   %eax
840039a4:	ff 75 10             	push   0x10(%ebp)
840039a7:	ff 75 08             	push   0x8(%ebp)
840039aa:	8b 45 14             	mov    0x14(%ebp),%eax
840039ad:	ff d0                	call   *%eax
840039af:	83 c4 10             	add    $0x10,%esp
840039b2:	83 f8 ff             	cmp    $0xffffffff,%eax
840039b5:	74 2a                	je     840039e1 <_printf_i+0x444>
840039b7:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
840039bb:	8b 45 0c             	mov    0xc(%ebp),%eax
840039be:	8b 40 0c             	mov    0xc(%eax),%eax
840039c1:	8b 55 d8             	mov    -0x28(%ebp),%edx
840039c4:	29 d0                	sub    %edx,%eax
840039c6:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
840039c9:	7c d0                	jl     8400399b <_printf_i+0x3fe>
840039cb:	8b 45 0c             	mov    0xc(%ebp),%eax
840039ce:	8b 50 0c             	mov    0xc(%eax),%edx
840039d1:	8b 45 d8             	mov    -0x28(%ebp),%eax
840039d4:	39 c2                	cmp    %eax,%edx
840039d6:	0f 4d c2             	cmovge %edx,%eax
840039d9:	eb 0c                	jmp    840039e7 <_printf_i+0x44a>
840039db:	90                   	nop
840039dc:	eb 04                	jmp    840039e2 <_printf_i+0x445>
840039de:	90                   	nop
840039df:	eb 01                	jmp    840039e2 <_printf_i+0x445>
840039e1:	90                   	nop
840039e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840039e7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840039ea:	c9                   	leave  
840039eb:	c3                   	ret    

840039ec <_read_r>:
840039ec:	55                   	push   %ebp
840039ed:	89 e5                	mov    %esp,%ebp
840039ef:	83 ec 18             	sub    $0x18,%esp
840039f2:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
840039f9:	00 00 00 
840039fc:	83 ec 04             	sub    $0x4,%esp
840039ff:	ff 75 14             	push   0x14(%ebp)
84003a02:	ff 75 10             	push   0x10(%ebp)
84003a05:	ff 75 0c             	push   0xc(%ebp)
84003a08:	e8 c9 c7 ff ff       	call   840001d6 <read>
84003a0d:	83 c4 10             	add    $0x10,%esp
84003a10:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003a13:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84003a17:	75 14                	jne    84003a2d <_read_r+0x41>
84003a19:	a1 10 64 00 84       	mov    0x84006410,%eax
84003a1e:	85 c0                	test   %eax,%eax
84003a20:	74 0b                	je     84003a2d <_read_r+0x41>
84003a22:	8b 15 10 64 00 84    	mov    0x84006410,%edx
84003a28:	8b 45 08             	mov    0x8(%ebp),%eax
84003a2b:	89 10                	mov    %edx,(%eax)
84003a2d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003a30:	c9                   	leave  
84003a31:	c3                   	ret    

84003a32 <cleanup_glue>:
84003a32:	55                   	push   %ebp
84003a33:	89 e5                	mov    %esp,%ebp
84003a35:	83 ec 08             	sub    $0x8,%esp
84003a38:	8b 45 0c             	mov    0xc(%ebp),%eax
84003a3b:	8b 00                	mov    (%eax),%eax
84003a3d:	85 c0                	test   %eax,%eax
84003a3f:	74 14                	je     84003a55 <cleanup_glue+0x23>
84003a41:	8b 45 0c             	mov    0xc(%ebp),%eax
84003a44:	8b 00                	mov    (%eax),%eax
84003a46:	83 ec 08             	sub    $0x8,%esp
84003a49:	50                   	push   %eax
84003a4a:	ff 75 08             	push   0x8(%ebp)
84003a4d:	e8 e0 ff ff ff       	call   84003a32 <cleanup_glue>
84003a52:	83 c4 10             	add    $0x10,%esp
84003a55:	83 ec 08             	sub    $0x8,%esp
84003a58:	ff 75 0c             	push   0xc(%ebp)
84003a5b:	ff 75 08             	push   0x8(%ebp)
84003a5e:	e8 ab d8 ff ff       	call   8400130e <_free_r>
84003a63:	83 c4 10             	add    $0x10,%esp
84003a66:	90                   	nop
84003a67:	c9                   	leave  
84003a68:	c3                   	ret    

84003a69 <_reclaim_reent>:
84003a69:	55                   	push   %ebp
84003a6a:	89 e5                	mov    %esp,%ebp
84003a6c:	83 ec 28             	sub    $0x28,%esp
84003a6f:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003a74:	39 45 08             	cmp    %eax,0x8(%ebp)
84003a77:	0f 84 49 01 00 00    	je     84003bc6 <_reclaim_reent+0x15d>
84003a7d:	8b 45 08             	mov    0x8(%ebp),%eax
84003a80:	8b 40 4c             	mov    0x4c(%eax),%eax
84003a83:	85 c0                	test   %eax,%eax
84003a85:	74 64                	je     84003aeb <_reclaim_reent+0x82>
84003a87:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003a8e:	eb 3e                	jmp    84003ace <_reclaim_reent+0x65>
84003a90:	8b 45 08             	mov    0x8(%ebp),%eax
84003a93:	8b 50 4c             	mov    0x4c(%eax),%edx
84003a96:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003a99:	c1 e0 02             	shl    $0x2,%eax
84003a9c:	01 d0                	add    %edx,%eax
84003a9e:	8b 00                	mov    (%eax),%eax
84003aa0:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003aa3:	eb 1f                	jmp    84003ac4 <_reclaim_reent+0x5b>
84003aa5:	8b 45 f0             	mov    -0x10(%ebp),%eax
84003aa8:	89 45 e8             	mov    %eax,-0x18(%ebp)
84003aab:	8b 45 f0             	mov    -0x10(%ebp),%eax
84003aae:	8b 00                	mov    (%eax),%eax
84003ab0:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003ab3:	83 ec 08             	sub    $0x8,%esp
84003ab6:	ff 75 e8             	push   -0x18(%ebp)
84003ab9:	ff 75 08             	push   0x8(%ebp)
84003abc:	e8 4d d8 ff ff       	call   8400130e <_free_r>
84003ac1:	83 c4 10             	add    $0x10,%esp
84003ac4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84003ac8:	75 db                	jne    84003aa5 <_reclaim_reent+0x3c>
84003aca:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003ace:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003ad1:	83 f8 1f             	cmp    $0x1f,%eax
84003ad4:	76 ba                	jbe    84003a90 <_reclaim_reent+0x27>
84003ad6:	8b 45 08             	mov    0x8(%ebp),%eax
84003ad9:	8b 40 4c             	mov    0x4c(%eax),%eax
84003adc:	83 ec 08             	sub    $0x8,%esp
84003adf:	50                   	push   %eax
84003ae0:	ff 75 08             	push   0x8(%ebp)
84003ae3:	e8 26 d8 ff ff       	call   8400130e <_free_r>
84003ae8:	83 c4 10             	add    $0x10,%esp
84003aeb:	8b 45 08             	mov    0x8(%ebp),%eax
84003aee:	8b 40 40             	mov    0x40(%eax),%eax
84003af1:	85 c0                	test   %eax,%eax
84003af3:	74 15                	je     84003b0a <_reclaim_reent+0xa1>
84003af5:	8b 45 08             	mov    0x8(%ebp),%eax
84003af8:	8b 40 40             	mov    0x40(%eax),%eax
84003afb:	83 ec 08             	sub    $0x8,%esp
84003afe:	50                   	push   %eax
84003aff:	ff 75 08             	push   0x8(%ebp)
84003b02:	e8 07 d8 ff ff       	call   8400130e <_free_r>
84003b07:	83 c4 10             	add    $0x10,%esp
84003b0a:	8b 45 08             	mov    0x8(%ebp),%eax
84003b0d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b13:	85 c0                	test   %eax,%eax
84003b15:	74 50                	je     84003b67 <_reclaim_reent+0xfe>
84003b17:	8b 45 08             	mov    0x8(%ebp),%eax
84003b1a:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b20:	8b 55 08             	mov    0x8(%ebp),%edx
84003b23:	81 c2 4c 01 00 00    	add    $0x14c,%edx
84003b29:	39 d0                	cmp    %edx,%eax
84003b2b:	74 3a                	je     84003b67 <_reclaim_reent+0xfe>
84003b2d:	8b 45 08             	mov    0x8(%ebp),%eax
84003b30:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b36:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003b39:	eb 1f                	jmp    84003b5a <_reclaim_reent+0xf1>
84003b3b:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003b3e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84003b41:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003b44:	8b 00                	mov    (%eax),%eax
84003b46:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003b49:	83 ec 08             	sub    $0x8,%esp
84003b4c:	ff 75 e4             	push   -0x1c(%ebp)
84003b4f:	ff 75 08             	push   0x8(%ebp)
84003b52:	e8 b7 d7 ff ff       	call   8400130e <_free_r>
84003b57:	83 c4 10             	add    $0x10,%esp
84003b5a:	8b 45 08             	mov    0x8(%ebp),%eax
84003b5d:	05 4c 01 00 00       	add    $0x14c,%eax
84003b62:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84003b65:	75 d4                	jne    84003b3b <_reclaim_reent+0xd2>
84003b67:	8b 45 08             	mov    0x8(%ebp),%eax
84003b6a:	8b 40 54             	mov    0x54(%eax),%eax
84003b6d:	85 c0                	test   %eax,%eax
84003b6f:	74 15                	je     84003b86 <_reclaim_reent+0x11d>
84003b71:	8b 45 08             	mov    0x8(%ebp),%eax
84003b74:	8b 40 54             	mov    0x54(%eax),%eax
84003b77:	83 ec 08             	sub    $0x8,%esp
84003b7a:	50                   	push   %eax
84003b7b:	ff 75 08             	push   0x8(%ebp)
84003b7e:	e8 8b d7 ff ff       	call   8400130e <_free_r>
84003b83:	83 c4 10             	add    $0x10,%esp
84003b86:	8b 45 08             	mov    0x8(%ebp),%eax
84003b89:	8b 40 38             	mov    0x38(%eax),%eax
84003b8c:	85 c0                	test   %eax,%eax
84003b8e:	74 36                	je     84003bc6 <_reclaim_reent+0x15d>
84003b90:	8b 45 08             	mov    0x8(%ebp),%eax
84003b93:	8b 40 3c             	mov    0x3c(%eax),%eax
84003b96:	83 ec 0c             	sub    $0xc,%esp
84003b99:	ff 75 08             	push   0x8(%ebp)
84003b9c:	ff d0                	call   *%eax
84003b9e:	83 c4 10             	add    $0x10,%esp
84003ba1:	8b 45 08             	mov    0x8(%ebp),%eax
84003ba4:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
84003baa:	85 c0                	test   %eax,%eax
84003bac:	74 18                	je     84003bc6 <_reclaim_reent+0x15d>
84003bae:	8b 45 08             	mov    0x8(%ebp),%eax
84003bb1:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
84003bb7:	83 ec 08             	sub    $0x8,%esp
84003bba:	50                   	push   %eax
84003bbb:	ff 75 08             	push   0x8(%ebp)
84003bbe:	e8 6f fe ff ff       	call   84003a32 <cleanup_glue>
84003bc3:	83 c4 10             	add    $0x10,%esp
84003bc6:	90                   	nop
84003bc7:	c9                   	leave  
84003bc8:	c3                   	ret    

84003bc9 <__srget_r>:
84003bc9:	55                   	push   %ebp
84003bca:	89 e5                	mov    %esp,%ebp
84003bcc:	53                   	push   %ebx
84003bcd:	83 ec 14             	sub    $0x14,%esp
84003bd0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84003bd3:	8b 45 08             	mov    0x8(%ebp),%eax
84003bd6:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003bd9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003bdd:	74 18                	je     84003bf7 <__srget_r+0x2e>
84003bdf:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003be2:	8b 40 38             	mov    0x38(%eax),%eax
84003be5:	85 c0                	test   %eax,%eax
84003be7:	75 0e                	jne    84003bf7 <__srget_r+0x2e>
84003be9:	83 ec 0c             	sub    $0xc,%esp
84003bec:	ff 75 f4             	push   -0xc(%ebp)
84003bef:	e8 0d d6 ff ff       	call   84001201 <__sinit>
84003bf4:	83 c4 10             	add    $0x10,%esp
84003bf7:	83 ec 08             	sub    $0x8,%esp
84003bfa:	53                   	push   %ebx
84003bfb:	ff 75 08             	push   0x8(%ebp)
84003bfe:	e8 61 15 00 00       	call   84005164 <__srefill_r>
84003c03:	83 c4 10             	add    $0x10,%esp
84003c06:	85 c0                	test   %eax,%eax
84003c08:	75 18                	jne    84003c22 <__srget_r+0x59>
84003c0a:	8b 43 04             	mov    0x4(%ebx),%eax
84003c0d:	83 e8 01             	sub    $0x1,%eax
84003c10:	89 43 04             	mov    %eax,0x4(%ebx)
84003c13:	8b 03                	mov    (%ebx),%eax
84003c15:	8d 50 01             	lea    0x1(%eax),%edx
84003c18:	89 13                	mov    %edx,(%ebx)
84003c1a:	0f b6 00             	movzbl (%eax),%eax
84003c1d:	0f b6 c0             	movzbl %al,%eax
84003c20:	eb 05                	jmp    84003c27 <__srget_r+0x5e>
84003c22:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003c27:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003c2a:	c9                   	leave  
84003c2b:	c3                   	ret    

84003c2c <__srget>:
84003c2c:	55                   	push   %ebp
84003c2d:	89 e5                	mov    %esp,%ebp
84003c2f:	83 ec 08             	sub    $0x8,%esp
84003c32:	8b 55 08             	mov    0x8(%ebp),%edx
84003c35:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003c3a:	83 ec 08             	sub    $0x8,%esp
84003c3d:	52                   	push   %edx
84003c3e:	50                   	push   %eax
84003c3f:	e8 85 ff ff ff       	call   84003bc9 <__srget_r>
84003c44:	83 c4 10             	add    $0x10,%esp
84003c47:	c9                   	leave  
84003c48:	c3                   	ret    

84003c49 <__swbuf_r>:
84003c49:	55                   	push   %ebp
84003c4a:	89 e5                	mov    %esp,%ebp
84003c4c:	57                   	push   %edi
84003c4d:	56                   	push   %esi
84003c4e:	53                   	push   %ebx
84003c4f:	83 ec 1c             	sub    $0x1c,%esp
84003c52:	8b 7d 0c             	mov    0xc(%ebp),%edi
84003c55:	8b 5d 10             	mov    0x10(%ebp),%ebx
84003c58:	8b 45 08             	mov    0x8(%ebp),%eax
84003c5b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84003c5e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84003c62:	74 18                	je     84003c7c <__swbuf_r+0x33>
84003c64:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84003c67:	8b 40 38             	mov    0x38(%eax),%eax
84003c6a:	85 c0                	test   %eax,%eax
84003c6c:	75 0e                	jne    84003c7c <__swbuf_r+0x33>
84003c6e:	83 ec 0c             	sub    $0xc,%esp
84003c71:	ff 75 e4             	push   -0x1c(%ebp)
84003c74:	e8 88 d5 ff ff       	call   84001201 <__sinit>
84003c79:	83 c4 10             	add    $0x10,%esp
84003c7c:	8b 43 18             	mov    0x18(%ebx),%eax
84003c7f:	89 43 08             	mov    %eax,0x8(%ebx)
84003c82:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003c86:	98                   	cwtl   
84003c87:	83 e0 08             	and    $0x8,%eax
84003c8a:	85 c0                	test   %eax,%eax
84003c8c:	74 07                	je     84003c95 <__swbuf_r+0x4c>
84003c8e:	8b 43 10             	mov    0x10(%ebx),%eax
84003c91:	85 c0                	test   %eax,%eax
84003c93:	75 1d                	jne    84003cb2 <__swbuf_r+0x69>
84003c95:	83 ec 08             	sub    $0x8,%esp
84003c98:	53                   	push   %ebx
84003c99:	ff 75 08             	push   0x8(%ebp)
84003c9c:	e8 db 00 00 00       	call   84003d7c <__swsetup_r>
84003ca1:	83 c4 10             	add    $0x10,%esp
84003ca4:	85 c0                	test   %eax,%eax
84003ca6:	74 0a                	je     84003cb2 <__swbuf_r+0x69>
84003ca8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003cad:	e9 a1 00 00 00       	jmp    84003d53 <__swbuf_r+0x10a>
84003cb2:	89 f8                	mov    %edi,%eax
84003cb4:	0f b6 f8             	movzbl %al,%edi
84003cb7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003cbb:	98                   	cwtl   
84003cbc:	25 00 20 00 00       	and    $0x2000,%eax
84003cc1:	85 c0                	test   %eax,%eax
84003cc3:	75 14                	jne    84003cd9 <__swbuf_r+0x90>
84003cc5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003cc9:	80 cc 20             	or     $0x20,%ah
84003ccc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003cd0:	8b 43 64             	mov    0x64(%ebx),%eax
84003cd3:	80 e4 df             	and    $0xdf,%ah
84003cd6:	89 43 64             	mov    %eax,0x64(%ebx)
84003cd9:	8b 03                	mov    (%ebx),%eax
84003cdb:	8b 53 10             	mov    0x10(%ebx),%edx
84003cde:	29 d0                	sub    %edx,%eax
84003ce0:	89 c6                	mov    %eax,%esi
84003ce2:	8b 43 14             	mov    0x14(%ebx),%eax
84003ce5:	39 c6                	cmp    %eax,%esi
84003ce7:	7c 1f                	jl     84003d08 <__swbuf_r+0xbf>
84003ce9:	83 ec 08             	sub    $0x8,%esp
84003cec:	53                   	push   %ebx
84003ced:	ff 75 08             	push   0x8(%ebp)
84003cf0:	e8 86 d1 ff ff       	call   84000e7b <_fflush_r>
84003cf5:	83 c4 10             	add    $0x10,%esp
84003cf8:	85 c0                	test   %eax,%eax
84003cfa:	74 07                	je     84003d03 <__swbuf_r+0xba>
84003cfc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003d01:	eb 50                	jmp    84003d53 <__swbuf_r+0x10a>
84003d03:	be 00 00 00 00       	mov    $0x0,%esi
84003d08:	8b 43 08             	mov    0x8(%ebx),%eax
84003d0b:	83 e8 01             	sub    $0x1,%eax
84003d0e:	89 43 08             	mov    %eax,0x8(%ebx)
84003d11:	8b 03                	mov    (%ebx),%eax
84003d13:	8d 50 01             	lea    0x1(%eax),%edx
84003d16:	89 13                	mov    %edx,(%ebx)
84003d18:	89 fa                	mov    %edi,%edx
84003d1a:	88 10                	mov    %dl,(%eax)
84003d1c:	83 c6 01             	add    $0x1,%esi
84003d1f:	8b 43 14             	mov    0x14(%ebx),%eax
84003d22:	39 c6                	cmp    %eax,%esi
84003d24:	74 11                	je     84003d37 <__swbuf_r+0xee>
84003d26:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003d2a:	98                   	cwtl   
84003d2b:	83 e0 01             	and    $0x1,%eax
84003d2e:	85 c0                	test   %eax,%eax
84003d30:	74 1f                	je     84003d51 <__swbuf_r+0x108>
84003d32:	83 ff 0a             	cmp    $0xa,%edi
84003d35:	75 1a                	jne    84003d51 <__swbuf_r+0x108>
84003d37:	83 ec 08             	sub    $0x8,%esp
84003d3a:	53                   	push   %ebx
84003d3b:	ff 75 08             	push   0x8(%ebp)
84003d3e:	e8 38 d1 ff ff       	call   84000e7b <_fflush_r>
84003d43:	83 c4 10             	add    $0x10,%esp
84003d46:	85 c0                	test   %eax,%eax
84003d48:	74 07                	je     84003d51 <__swbuf_r+0x108>
84003d4a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003d4f:	eb 02                	jmp    84003d53 <__swbuf_r+0x10a>
84003d51:	89 f8                	mov    %edi,%eax
84003d53:	8d 65 f4             	lea    -0xc(%ebp),%esp
84003d56:	5b                   	pop    %ebx
84003d57:	5e                   	pop    %esi
84003d58:	5f                   	pop    %edi
84003d59:	5d                   	pop    %ebp
84003d5a:	c3                   	ret    

84003d5b <__swbuf>:
84003d5b:	55                   	push   %ebp
84003d5c:	89 e5                	mov    %esp,%ebp
84003d5e:	83 ec 08             	sub    $0x8,%esp
84003d61:	8b 55 08             	mov    0x8(%ebp),%edx
84003d64:	8b 4d 0c             	mov    0xc(%ebp),%ecx
84003d67:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003d6c:	83 ec 04             	sub    $0x4,%esp
84003d6f:	51                   	push   %ecx
84003d70:	52                   	push   %edx
84003d71:	50                   	push   %eax
84003d72:	e8 d2 fe ff ff       	call   84003c49 <__swbuf_r>
84003d77:	83 c4 10             	add    $0x10,%esp
84003d7a:	c9                   	leave  
84003d7b:	c3                   	ret    

84003d7c <__swsetup_r>:
84003d7c:	55                   	push   %ebp
84003d7d:	89 e5                	mov    %esp,%ebp
84003d7f:	53                   	push   %ebx
84003d80:	83 ec 14             	sub    $0x14,%esp
84003d83:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84003d86:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003d8b:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003d8e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003d92:	74 18                	je     84003dac <__swsetup_r+0x30>
84003d94:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003d97:	8b 40 38             	mov    0x38(%eax),%eax
84003d9a:	85 c0                	test   %eax,%eax
84003d9c:	75 0e                	jne    84003dac <__swsetup_r+0x30>
84003d9e:	83 ec 0c             	sub    $0xc,%esp
84003da1:	ff 75 f4             	push   -0xc(%ebp)
84003da4:	e8 58 d4 ff ff       	call   84001201 <__sinit>
84003da9:	83 c4 10             	add    $0x10,%esp
84003dac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003db0:	98                   	cwtl   
84003db1:	83 e0 08             	and    $0x8,%eax
84003db4:	85 c0                	test   %eax,%eax
84003db6:	0f 85 82 00 00 00    	jne    84003e3e <__swsetup_r+0xc2>
84003dbc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003dc0:	98                   	cwtl   
84003dc1:	83 e0 10             	and    $0x10,%eax
84003dc4:	85 c0                	test   %eax,%eax
84003dc6:	75 1e                	jne    84003de6 <__swsetup_r+0x6a>
84003dc8:	8b 45 08             	mov    0x8(%ebp),%eax
84003dcb:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
84003dd1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003dd5:	83 c8 40             	or     $0x40,%eax
84003dd8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003ddc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003de1:	e9 ec 00 00 00       	jmp    84003ed2 <__swsetup_r+0x156>
84003de6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003dea:	98                   	cwtl   
84003deb:	83 e0 04             	and    $0x4,%eax
84003dee:	85 c0                	test   %eax,%eax
84003df0:	74 41                	je     84003e33 <__swsetup_r+0xb7>
84003df2:	8b 43 30             	mov    0x30(%ebx),%eax
84003df5:	85 c0                	test   %eax,%eax
84003df7:	74 23                	je     84003e1c <__swsetup_r+0xa0>
84003df9:	8b 53 30             	mov    0x30(%ebx),%edx
84003dfc:	8d 43 40             	lea    0x40(%ebx),%eax
84003dff:	39 c2                	cmp    %eax,%edx
84003e01:	74 12                	je     84003e15 <__swsetup_r+0x99>
84003e03:	8b 43 30             	mov    0x30(%ebx),%eax
84003e06:	83 ec 08             	sub    $0x8,%esp
84003e09:	50                   	push   %eax
84003e0a:	ff 75 08             	push   0x8(%ebp)
84003e0d:	e8 fc d4 ff ff       	call   8400130e <_free_r>
84003e12:	83 c4 10             	add    $0x10,%esp
84003e15:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84003e1c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e20:	83 e0 db             	and    $0xffffffdb,%eax
84003e23:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003e27:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84003e2e:	8b 43 10             	mov    0x10(%ebx),%eax
84003e31:	89 03                	mov    %eax,(%ebx)
84003e33:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e37:	83 c8 08             	or     $0x8,%eax
84003e3a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003e3e:	8b 43 10             	mov    0x10(%ebx),%eax
84003e41:	85 c0                	test   %eax,%eax
84003e43:	75 2b                	jne    84003e70 <__swsetup_r+0xf4>
84003e45:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e49:	98                   	cwtl   
84003e4a:	25 00 02 00 00       	and    $0x200,%eax
84003e4f:	85 c0                	test   %eax,%eax
84003e51:	74 0e                	je     84003e61 <__swsetup_r+0xe5>
84003e53:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e57:	98                   	cwtl   
84003e58:	25 80 00 00 00       	and    $0x80,%eax
84003e5d:	85 c0                	test   %eax,%eax
84003e5f:	74 0f                	je     84003e70 <__swsetup_r+0xf4>
84003e61:	83 ec 08             	sub    $0x8,%esp
84003e64:	53                   	push   %ebx
84003e65:	ff 75 08             	push   0x8(%ebp)
84003e68:	e8 b0 ee ff ff       	call   84002d1d <__smakebuf_r>
84003e6d:	83 c4 10             	add    $0x10,%esp
84003e70:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e74:	98                   	cwtl   
84003e75:	83 e0 01             	and    $0x1,%eax
84003e78:	85 c0                	test   %eax,%eax
84003e7a:	74 11                	je     84003e8d <__swsetup_r+0x111>
84003e7c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84003e83:	8b 43 14             	mov    0x14(%ebx),%eax
84003e86:	f7 d8                	neg    %eax
84003e88:	89 43 18             	mov    %eax,0x18(%ebx)
84003e8b:	eb 19                	jmp    84003ea6 <__swsetup_r+0x12a>
84003e8d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e91:	98                   	cwtl   
84003e92:	83 e0 02             	and    $0x2,%eax
84003e95:	85 c0                	test   %eax,%eax
84003e97:	75 05                	jne    84003e9e <__swsetup_r+0x122>
84003e99:	8b 43 14             	mov    0x14(%ebx),%eax
84003e9c:	eb 05                	jmp    84003ea3 <__swsetup_r+0x127>
84003e9e:	b8 00 00 00 00       	mov    $0x0,%eax
84003ea3:	89 43 08             	mov    %eax,0x8(%ebx)
84003ea6:	8b 43 10             	mov    0x10(%ebx),%eax
84003ea9:	85 c0                	test   %eax,%eax
84003eab:	75 20                	jne    84003ecd <__swsetup_r+0x151>
84003ead:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003eb1:	98                   	cwtl   
84003eb2:	25 80 00 00 00       	and    $0x80,%eax
84003eb7:	85 c0                	test   %eax,%eax
84003eb9:	74 12                	je     84003ecd <__swsetup_r+0x151>
84003ebb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003ebf:	83 c8 40             	or     $0x40,%eax
84003ec2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003ec6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003ecb:	eb 05                	jmp    84003ed2 <__swsetup_r+0x156>
84003ecd:	b8 00 00 00 00       	mov    $0x0,%eax
84003ed2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003ed5:	c9                   	leave  
84003ed6:	c3                   	ret    

84003ed7 <__sputc_r>:
84003ed7:	55                   	push   %ebp
84003ed8:	89 e5                	mov    %esp,%ebp
84003eda:	83 ec 08             	sub    $0x8,%esp
84003edd:	8b 45 10             	mov    0x10(%ebp),%eax
84003ee0:	8b 40 08             	mov    0x8(%eax),%eax
84003ee3:	8d 50 ff             	lea    -0x1(%eax),%edx
84003ee6:	8b 45 10             	mov    0x10(%ebp),%eax
84003ee9:	89 50 08             	mov    %edx,0x8(%eax)
84003eec:	8b 45 10             	mov    0x10(%ebp),%eax
84003eef:	8b 40 08             	mov    0x8(%eax),%eax
84003ef2:	85 c0                	test   %eax,%eax
84003ef4:	79 17                	jns    84003f0d <__sputc_r+0x36>
84003ef6:	8b 45 10             	mov    0x10(%ebp),%eax
84003ef9:	8b 50 08             	mov    0x8(%eax),%edx
84003efc:	8b 45 10             	mov    0x10(%ebp),%eax
84003eff:	8b 40 18             	mov    0x18(%eax),%eax
84003f02:	39 c2                	cmp    %eax,%edx
84003f04:	7c 21                	jl     84003f27 <__sputc_r+0x50>
84003f06:	8b 45 0c             	mov    0xc(%ebp),%eax
84003f09:	3c 0a                	cmp    $0xa,%al
84003f0b:	74 1a                	je     84003f27 <__sputc_r+0x50>
84003f0d:	8b 45 10             	mov    0x10(%ebp),%eax
84003f10:	8b 00                	mov    (%eax),%eax
84003f12:	8d 48 01             	lea    0x1(%eax),%ecx
84003f15:	8b 55 10             	mov    0x10(%ebp),%edx
84003f18:	89 0a                	mov    %ecx,(%edx)
84003f1a:	8b 55 0c             	mov    0xc(%ebp),%edx
84003f1d:	88 10                	mov    %dl,(%eax)
84003f1f:	0f b6 00             	movzbl (%eax),%eax
84003f22:	0f b6 c0             	movzbl %al,%eax
84003f25:	eb 14                	jmp    84003f3b <__sputc_r+0x64>
84003f27:	83 ec 04             	sub    $0x4,%esp
84003f2a:	ff 75 10             	push   0x10(%ebp)
84003f2d:	ff 75 0c             	push   0xc(%ebp)
84003f30:	ff 75 08             	push   0x8(%ebp)
84003f33:	e8 11 fd ff ff       	call   84003c49 <__swbuf_r>
84003f38:	83 c4 10             	add    $0x10,%esp
84003f3b:	c9                   	leave  
84003f3c:	c3                   	ret    

84003f3d <__fputwc>:
84003f3d:	55                   	push   %ebp
84003f3e:	89 e5                	mov    %esp,%ebp
84003f40:	83 ec 18             	sub    $0x18,%esp
84003f43:	e8 d8 06 00 00       	call   84004620 <__locale_mb_cur_max>
84003f48:	83 f8 01             	cmp    $0x1,%eax
84003f4b:	75 1e                	jne    84003f6b <__fputwc+0x2e>
84003f4d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84003f51:	7e 18                	jle    84003f6b <__fputwc+0x2e>
84003f53:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
84003f5a:	7f 0f                	jg     84003f6b <__fputwc+0x2e>
84003f5c:	8b 45 0c             	mov    0xc(%ebp),%eax
84003f5f:	88 45 ef             	mov    %al,-0x11(%ebp)
84003f62:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
84003f69:	eb 3c                	jmp    84003fa7 <__fputwc+0x6a>
84003f6b:	8b 45 10             	mov    0x10(%ebp),%eax
84003f6e:	83 c0 5c             	add    $0x5c,%eax
84003f71:	50                   	push   %eax
84003f72:	ff 75 0c             	push   0xc(%ebp)
84003f75:	8d 45 ef             	lea    -0x11(%ebp),%eax
84003f78:	50                   	push   %eax
84003f79:	ff 75 08             	push   0x8(%ebp)
84003f7c:	e8 9d 14 00 00       	call   8400541e <_wcrtomb_r>
84003f81:	83 c4 10             	add    $0x10,%esp
84003f84:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003f87:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
84003f8b:	75 1a                	jne    84003fa7 <__fputwc+0x6a>
84003f8d:	8b 45 10             	mov    0x10(%ebp),%eax
84003f90:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003f94:	83 c8 40             	or     $0x40,%eax
84003f97:	89 c2                	mov    %eax,%edx
84003f99:	8b 45 10             	mov    0x10(%ebp),%eax
84003f9c:	66 89 50 0c          	mov    %dx,0xc(%eax)
84003fa0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003fa5:	eb 44                	jmp    84003feb <__fputwc+0xae>
84003fa7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003fae:	eb 30                	jmp    84003fe0 <__fputwc+0xa3>
84003fb0:	8d 55 ef             	lea    -0x11(%ebp),%edx
84003fb3:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003fb6:	01 d0                	add    %edx,%eax
84003fb8:	0f b6 00             	movzbl (%eax),%eax
84003fbb:	0f b6 c0             	movzbl %al,%eax
84003fbe:	83 ec 04             	sub    $0x4,%esp
84003fc1:	ff 75 10             	push   0x10(%ebp)
84003fc4:	50                   	push   %eax
84003fc5:	ff 75 08             	push   0x8(%ebp)
84003fc8:	e8 0a ff ff ff       	call   84003ed7 <__sputc_r>
84003fcd:	83 c4 10             	add    $0x10,%esp
84003fd0:	83 f8 ff             	cmp    $0xffffffff,%eax
84003fd3:	75 07                	jne    84003fdc <__fputwc+0x9f>
84003fd5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003fda:	eb 0f                	jmp    84003feb <__fputwc+0xae>
84003fdc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003fe0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003fe3:	3b 45 f0             	cmp    -0x10(%ebp),%eax
84003fe6:	72 c8                	jb     84003fb0 <__fputwc+0x73>
84003fe8:	8b 45 0c             	mov    0xc(%ebp),%eax
84003feb:	c9                   	leave  
84003fec:	c3                   	ret    

84003fed <_fputwc_r>:
84003fed:	55                   	push   %ebp
84003fee:	89 e5                	mov    %esp,%ebp
84003ff0:	83 ec 18             	sub    $0x18,%esp
84003ff3:	8b 45 10             	mov    0x10(%ebp),%eax
84003ff6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003ffa:	98                   	cwtl   
84003ffb:	25 00 20 00 00       	and    $0x2000,%eax
84004000:	85 c0                	test   %eax,%eax
84004002:	75 24                	jne    84004028 <_fputwc_r+0x3b>
84004004:	8b 45 10             	mov    0x10(%ebp),%eax
84004007:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8400400b:	80 cc 20             	or     $0x20,%ah
8400400e:	89 c2                	mov    %eax,%edx
84004010:	8b 45 10             	mov    0x10(%ebp),%eax
84004013:	66 89 50 0c          	mov    %dx,0xc(%eax)
84004017:	8b 45 10             	mov    0x10(%ebp),%eax
8400401a:	8b 40 64             	mov    0x64(%eax),%eax
8400401d:	80 cc 20             	or     $0x20,%ah
84004020:	89 c2                	mov    %eax,%edx
84004022:	8b 45 10             	mov    0x10(%ebp),%eax
84004025:	89 50 64             	mov    %edx,0x64(%eax)
84004028:	83 ec 04             	sub    $0x4,%esp
8400402b:	ff 75 10             	push   0x10(%ebp)
8400402e:	ff 75 0c             	push   0xc(%ebp)
84004031:	ff 75 08             	push   0x8(%ebp)
84004034:	e8 04 ff ff ff       	call   84003f3d <__fputwc>
84004039:	83 c4 10             	add    $0x10,%esp
8400403c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400403f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004042:	c9                   	leave  
84004043:	c3                   	ret    

84004044 <fputwc>:
84004044:	55                   	push   %ebp
84004045:	89 e5                	mov    %esp,%ebp
84004047:	83 ec 18             	sub    $0x18,%esp
8400404a:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
8400404f:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004052:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004055:	89 45 f0             	mov    %eax,-0x10(%ebp)
84004058:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8400405c:	74 18                	je     84004076 <fputwc+0x32>
8400405e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004061:	8b 40 38             	mov    0x38(%eax),%eax
84004064:	85 c0                	test   %eax,%eax
84004066:	75 0e                	jne    84004076 <fputwc+0x32>
84004068:	83 ec 0c             	sub    $0xc,%esp
8400406b:	ff 75 f0             	push   -0x10(%ebp)
8400406e:	e8 8e d1 ff ff       	call   84001201 <__sinit>
84004073:	83 c4 10             	add    $0x10,%esp
84004076:	83 ec 04             	sub    $0x4,%esp
84004079:	ff 75 0c             	push   0xc(%ebp)
8400407c:	ff 75 08             	push   0x8(%ebp)
8400407f:	ff 75 f4             	push   -0xc(%ebp)
84004082:	e8 66 ff ff ff       	call   84003fed <_fputwc_r>
84004087:	83 c4 10             	add    $0x10,%esp
8400408a:	c9                   	leave  
8400408b:	c3                   	ret    

8400408c <_fstat_r>:
8400408c:	55                   	push   %ebp
8400408d:	89 e5                	mov    %esp,%ebp
8400408f:	83 ec 18             	sub    $0x18,%esp
84004092:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
84004099:	00 00 00 
8400409c:	83 ec 08             	sub    $0x8,%esp
8400409f:	ff 75 10             	push   0x10(%ebp)
840040a2:	ff 75 0c             	push   0xc(%ebp)
840040a5:	e8 d4 c1 ff ff       	call   8400027e <fstat>
840040aa:	83 c4 10             	add    $0x10,%esp
840040ad:	89 45 f4             	mov    %eax,-0xc(%ebp)
840040b0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840040b4:	75 14                	jne    840040ca <_fstat_r+0x3e>
840040b6:	a1 10 64 00 84       	mov    0x84006410,%eax
840040bb:	85 c0                	test   %eax,%eax
840040bd:	74 0b                	je     840040ca <_fstat_r+0x3e>
840040bf:	8b 15 10 64 00 84    	mov    0x84006410,%edx
840040c5:	8b 45 08             	mov    0x8(%ebp),%eax
840040c8:	89 10                	mov    %edx,(%eax)
840040ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
840040cd:	c9                   	leave  
840040ce:	c3                   	ret    

840040cf <__sfvwrite_r>:
840040cf:	55                   	push   %ebp
840040d0:	89 e5                	mov    %esp,%ebp
840040d2:	57                   	push   %edi
840040d3:	56                   	push   %esi
840040d4:	53                   	push   %ebx
840040d5:	83 ec 3c             	sub    $0x3c,%esp
840040d8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
840040db:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
840040e2:	8b 45 10             	mov    0x10(%ebp),%eax
840040e5:	8b 78 08             	mov    0x8(%eax),%edi
840040e8:	85 ff                	test   %edi,%edi
840040ea:	75 0a                	jne    840040f6 <__sfvwrite_r+0x27>
840040ec:	b8 00 00 00 00       	mov    $0x0,%eax
840040f1:	e9 6f 04 00 00       	jmp    84004565 <__sfvwrite_r+0x496>
840040f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840040fa:	98                   	cwtl   
840040fb:	83 e0 08             	and    $0x8,%eax
840040fe:	85 c0                	test   %eax,%eax
84004100:	74 07                	je     84004109 <__sfvwrite_r+0x3a>
84004102:	8b 43 10             	mov    0x10(%ebx),%eax
84004105:	85 c0                	test   %eax,%eax
84004107:	75 1d                	jne    84004126 <__sfvwrite_r+0x57>
84004109:	83 ec 08             	sub    $0x8,%esp
8400410c:	53                   	push   %ebx
8400410d:	ff 75 08             	push   0x8(%ebp)
84004110:	e8 67 fc ff ff       	call   84003d7c <__swsetup_r>
84004115:	83 c4 10             	add    $0x10,%esp
84004118:	85 c0                	test   %eax,%eax
8400411a:	74 0a                	je     84004126 <__sfvwrite_r+0x57>
8400411c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84004121:	e9 3f 04 00 00       	jmp    84004565 <__sfvwrite_r+0x496>
84004126:	8b 45 10             	mov    0x10(%ebp),%eax
84004129:	8b 00                	mov    (%eax),%eax
8400412b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8400412e:	bf 00 00 00 00       	mov    $0x0,%edi
84004133:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004137:	98                   	cwtl   
84004138:	83 e0 02             	and    $0x2,%eax
8400413b:	85 c0                	test   %eax,%eax
8400413d:	74 68                	je     840041a7 <__sfvwrite_r+0xd8>
8400413f:	eb 11                	jmp    84004152 <__sfvwrite_r+0x83>
84004141:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004144:	8b 08                	mov    (%eax),%ecx
84004146:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
84004149:	8b 78 04             	mov    0x4(%eax),%edi
8400414c:	83 c0 08             	add    $0x8,%eax
8400414f:	89 45 c0             	mov    %eax,-0x40(%ebp)
84004152:	85 ff                	test   %edi,%edi
84004154:	74 eb                	je     84004141 <__sfvwrite_r+0x72>
84004156:	8b 4b 24             	mov    0x24(%ebx),%ecx
84004159:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
8400415e:	39 c7                	cmp    %eax,%edi
84004160:	0f 46 c7             	cmovbe %edi,%eax
84004163:	89 c2                	mov    %eax,%edx
84004165:	8b 43 1c             	mov    0x1c(%ebx),%eax
84004168:	52                   	push   %edx
84004169:	ff 75 c4             	push   -0x3c(%ebp)
8400416c:	50                   	push   %eax
8400416d:	ff 75 08             	push   0x8(%ebp)
84004170:	ff d1                	call   *%ecx
84004172:	83 c4 10             	add    $0x10,%esp
84004175:	89 c6                	mov    %eax,%esi
84004177:	85 f6                	test   %esi,%esi
84004179:	0f 8e cf 03 00 00    	jle    8400454e <__sfvwrite_r+0x47f>
8400417f:	89 f0                	mov    %esi,%eax
84004181:	01 45 c4             	add    %eax,-0x3c(%ebp)
84004184:	89 f0                	mov    %esi,%eax
84004186:	29 c7                	sub    %eax,%edi
84004188:	8b 45 10             	mov    0x10(%ebp),%eax
8400418b:	8b 40 08             	mov    0x8(%eax),%eax
8400418e:	89 f2                	mov    %esi,%edx
84004190:	29 d0                	sub    %edx,%eax
84004192:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004195:	89 41 08             	mov    %eax,0x8(%ecx)
84004198:	8b 45 10             	mov    0x10(%ebp),%eax
8400419b:	8b 40 08             	mov    0x8(%eax),%eax
8400419e:	85 c0                	test   %eax,%eax
840041a0:	75 b0                	jne    84004152 <__sfvwrite_r+0x83>
840041a2:	e9 a0 03 00 00       	jmp    84004547 <__sfvwrite_r+0x478>
840041a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041ab:	98                   	cwtl   
840041ac:	83 e0 01             	and    $0x1,%eax
840041af:	85 c0                	test   %eax,%eax
840041b1:	0f 85 44 02 00 00    	jne    840043fb <__sfvwrite_r+0x32c>
840041b7:	eb 11                	jmp    840041ca <__sfvwrite_r+0xfb>
840041b9:	8b 45 c0             	mov    -0x40(%ebp),%eax
840041bc:	8b 08                	mov    (%eax),%ecx
840041be:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
840041c1:	8b 78 04             	mov    0x4(%eax),%edi
840041c4:	83 c0 08             	add    $0x8,%eax
840041c7:	89 45 c0             	mov    %eax,-0x40(%ebp)
840041ca:	85 ff                	test   %edi,%edi
840041cc:	74 eb                	je     840041b9 <__sfvwrite_r+0xea>
840041ce:	8b 73 08             	mov    0x8(%ebx),%esi
840041d1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041d5:	98                   	cwtl   
840041d6:	25 00 02 00 00       	and    $0x200,%eax
840041db:	85 c0                	test   %eax,%eax
840041dd:	0f 84 4f 01 00 00    	je     84004332 <__sfvwrite_r+0x263>
840041e3:	89 f0                	mov    %esi,%eax
840041e5:	39 c7                	cmp    %eax,%edi
840041e7:	0f 82 12 01 00 00    	jb     840042ff <__sfvwrite_r+0x230>
840041ed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041f1:	98                   	cwtl   
840041f2:	25 80 04 00 00       	and    $0x480,%eax
840041f7:	85 c0                	test   %eax,%eax
840041f9:	0f 84 00 01 00 00    	je     840042ff <__sfvwrite_r+0x230>
840041ff:	8b 03                	mov    (%ebx),%eax
84004201:	8b 53 10             	mov    0x10(%ebx),%edx
84004204:	29 d0                	sub    %edx,%eax
84004206:	89 45 d0             	mov    %eax,-0x30(%ebp)
84004209:	8b 53 14             	mov    0x14(%ebx),%edx
8400420c:	89 d0                	mov    %edx,%eax
8400420e:	01 c0                	add    %eax,%eax
84004210:	01 d0                	add    %edx,%eax
84004212:	89 c2                	mov    %eax,%edx
84004214:	c1 ea 1f             	shr    $0x1f,%edx
84004217:	01 d0                	add    %edx,%eax
84004219:	d1 f8                	sar    %eax
8400421b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8400421e:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004221:	01 f8                	add    %edi,%eax
84004223:	8d 50 01             	lea    0x1(%eax),%edx
84004226:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004229:	39 c2                	cmp    %eax,%edx
8400422b:	76 0b                	jbe    84004238 <__sfvwrite_r+0x169>
8400422d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004230:	01 f8                	add    %edi,%eax
84004232:	83 c0 01             	add    $0x1,%eax
84004235:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004238:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400423c:	98                   	cwtl   
8400423d:	25 00 04 00 00       	and    $0x400,%eax
84004242:	85 c0                	test   %eax,%eax
84004244:	74 4f                	je     84004295 <__sfvwrite_r+0x1c6>
84004246:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004249:	83 ec 08             	sub    $0x8,%esp
8400424c:	50                   	push   %eax
8400424d:	ff 75 08             	push   0x8(%ebp)
84004250:	e8 e0 d9 ff ff       	call   84001c35 <_malloc_r>
84004255:	83 c4 10             	add    $0x10,%esp
84004258:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400425b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8400425f:	75 0e                	jne    8400426f <__sfvwrite_r+0x1a0>
84004261:	8b 45 08             	mov    0x8(%ebp),%eax
84004264:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8400426a:	e9 e6 02 00 00       	jmp    84004555 <__sfvwrite_r+0x486>
8400426f:	8b 55 d0             	mov    -0x30(%ebp),%edx
84004272:	8b 43 10             	mov    0x10(%ebx),%eax
84004275:	83 ec 04             	sub    $0x4,%esp
84004278:	52                   	push   %edx
84004279:	50                   	push   %eax
8400427a:	ff 75 dc             	push   -0x24(%ebp)
8400427d:	e8 06 05 00 00       	call   84004788 <memcpy>
84004282:	83 c4 10             	add    $0x10,%esp
84004285:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004289:	66 25 7f fb          	and    $0xfb7f,%ax
8400428d:	0c 80                	or     $0x80,%al
8400428f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84004293:	eb 49                	jmp    840042de <__sfvwrite_r+0x20f>
84004295:	8b 55 d8             	mov    -0x28(%ebp),%edx
84004298:	8b 43 10             	mov    0x10(%ebx),%eax
8400429b:	83 ec 04             	sub    $0x4,%esp
8400429e:	52                   	push   %edx
8400429f:	50                   	push   %eax
840042a0:	ff 75 08             	push   0x8(%ebp)
840042a3:	e8 b5 05 00 00       	call   8400485d <_realloc_r>
840042a8:	83 c4 10             	add    $0x10,%esp
840042ab:	89 45 dc             	mov    %eax,-0x24(%ebp)
840042ae:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
840042b2:	75 2a                	jne    840042de <__sfvwrite_r+0x20f>
840042b4:	8b 43 10             	mov    0x10(%ebx),%eax
840042b7:	83 ec 08             	sub    $0x8,%esp
840042ba:	50                   	push   %eax
840042bb:	ff 75 08             	push   0x8(%ebp)
840042be:	e8 4b d0 ff ff       	call   8400130e <_free_r>
840042c3:	83 c4 10             	add    $0x10,%esp
840042c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840042ca:	24 7f                	and    $0x7f,%al
840042cc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840042d0:	8b 45 08             	mov    0x8(%ebp),%eax
840042d3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840042d9:	e9 77 02 00 00       	jmp    84004555 <__sfvwrite_r+0x486>
840042de:	8b 45 dc             	mov    -0x24(%ebp),%eax
840042e1:	89 43 10             	mov    %eax,0x10(%ebx)
840042e4:	8b 55 d0             	mov    -0x30(%ebp),%edx
840042e7:	8b 45 dc             	mov    -0x24(%ebp),%eax
840042ea:	01 d0                	add    %edx,%eax
840042ec:	89 03                	mov    %eax,(%ebx)
840042ee:	8b 45 d8             	mov    -0x28(%ebp),%eax
840042f1:	89 43 14             	mov    %eax,0x14(%ebx)
840042f4:	89 fe                	mov    %edi,%esi
840042f6:	8b 45 d8             	mov    -0x28(%ebp),%eax
840042f9:	2b 45 d0             	sub    -0x30(%ebp),%eax
840042fc:	89 43 08             	mov    %eax,0x8(%ebx)
840042ff:	89 f0                	mov    %esi,%eax
84004301:	39 c7                	cmp    %eax,%edi
84004303:	73 02                	jae    84004307 <__sfvwrite_r+0x238>
84004305:	89 fe                	mov    %edi,%esi
84004307:	89 f2                	mov    %esi,%edx
84004309:	8b 03                	mov    (%ebx),%eax
8400430b:	83 ec 04             	sub    $0x4,%esp
8400430e:	52                   	push   %edx
8400430f:	ff 75 c4             	push   -0x3c(%ebp)
84004312:	50                   	push   %eax
84004313:	e8 b8 04 00 00       	call   840047d0 <memmove>
84004318:	83 c4 10             	add    $0x10,%esp
8400431b:	8b 43 08             	mov    0x8(%ebx),%eax
8400431e:	29 f0                	sub    %esi,%eax
84004320:	89 43 08             	mov    %eax,0x8(%ebx)
84004323:	8b 03                	mov    (%ebx),%eax
84004325:	89 f2                	mov    %esi,%edx
84004327:	01 d0                	add    %edx,%eax
84004329:	89 03                	mov    %eax,(%ebx)
8400432b:	89 fe                	mov    %edi,%esi
8400432d:	e9 9d 00 00 00       	jmp    840043cf <__sfvwrite_r+0x300>
84004332:	8b 13                	mov    (%ebx),%edx
84004334:	8b 43 10             	mov    0x10(%ebx),%eax
84004337:	39 c2                	cmp    %eax,%edx
84004339:	77 07                	ja     84004342 <__sfvwrite_r+0x273>
8400433b:	8b 43 14             	mov    0x14(%ebx),%eax
8400433e:	39 c7                	cmp    %eax,%edi
84004340:	73 4c                	jae    8400438e <__sfvwrite_r+0x2bf>
84004342:	89 f0                	mov    %esi,%eax
84004344:	39 c7                	cmp    %eax,%edi
84004346:	0f 46 c7             	cmovbe %edi,%eax
84004349:	89 c6                	mov    %eax,%esi
8400434b:	89 f2                	mov    %esi,%edx
8400434d:	8b 03                	mov    (%ebx),%eax
8400434f:	83 ec 04             	sub    $0x4,%esp
84004352:	52                   	push   %edx
84004353:	ff 75 c4             	push   -0x3c(%ebp)
84004356:	50                   	push   %eax
84004357:	e8 74 04 00 00       	call   840047d0 <memmove>
8400435c:	83 c4 10             	add    $0x10,%esp
8400435f:	8b 43 08             	mov    0x8(%ebx),%eax
84004362:	29 f0                	sub    %esi,%eax
84004364:	89 43 08             	mov    %eax,0x8(%ebx)
84004367:	8b 03                	mov    (%ebx),%eax
84004369:	89 f2                	mov    %esi,%edx
8400436b:	01 d0                	add    %edx,%eax
8400436d:	89 03                	mov    %eax,(%ebx)
8400436f:	8b 43 08             	mov    0x8(%ebx),%eax
84004372:	85 c0                	test   %eax,%eax
84004374:	75 58                	jne    840043ce <__sfvwrite_r+0x2ff>
84004376:	83 ec 08             	sub    $0x8,%esp
84004379:	53                   	push   %ebx
8400437a:	ff 75 08             	push   0x8(%ebp)
8400437d:	e8 f9 ca ff ff       	call   84000e7b <_fflush_r>
84004382:	83 c4 10             	add    $0x10,%esp
84004385:	85 c0                	test   %eax,%eax
84004387:	74 45                	je     840043ce <__sfvwrite_r+0x2ff>
84004389:	e9 c7 01 00 00       	jmp    84004555 <__sfvwrite_r+0x486>
8400438e:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
84004394:	77 04                	ja     8400439a <__sfvwrite_r+0x2cb>
84004396:	89 f8                	mov    %edi,%eax
84004398:	eb 05                	jmp    8400439f <__sfvwrite_r+0x2d0>
8400439a:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
8400439f:	8b 4b 14             	mov    0x14(%ebx),%ecx
840043a2:	99                   	cltd   
840043a3:	f7 f9                	idiv   %ecx
840043a5:	89 c2                	mov    %eax,%edx
840043a7:	8b 43 14             	mov    0x14(%ebx),%eax
840043aa:	89 d6                	mov    %edx,%esi
840043ac:	0f af f0             	imul   %eax,%esi
840043af:	8b 53 24             	mov    0x24(%ebx),%edx
840043b2:	8b 43 1c             	mov    0x1c(%ebx),%eax
840043b5:	56                   	push   %esi
840043b6:	ff 75 c4             	push   -0x3c(%ebp)
840043b9:	50                   	push   %eax
840043ba:	ff 75 08             	push   0x8(%ebp)
840043bd:	ff d2                	call   *%edx
840043bf:	83 c4 10             	add    $0x10,%esp
840043c2:	89 c6                	mov    %eax,%esi
840043c4:	85 f6                	test   %esi,%esi
840043c6:	0f 8e 85 01 00 00    	jle    84004551 <__sfvwrite_r+0x482>
840043cc:	eb 01                	jmp    840043cf <__sfvwrite_r+0x300>
840043ce:	90                   	nop
840043cf:	89 f0                	mov    %esi,%eax
840043d1:	01 45 c4             	add    %eax,-0x3c(%ebp)
840043d4:	89 f0                	mov    %esi,%eax
840043d6:	29 c7                	sub    %eax,%edi
840043d8:	8b 45 10             	mov    0x10(%ebp),%eax
840043db:	8b 40 08             	mov    0x8(%eax),%eax
840043de:	89 f2                	mov    %esi,%edx
840043e0:	29 d0                	sub    %edx,%eax
840043e2:	8b 4d 10             	mov    0x10(%ebp),%ecx
840043e5:	89 41 08             	mov    %eax,0x8(%ecx)
840043e8:	8b 45 10             	mov    0x10(%ebp),%eax
840043eb:	8b 40 08             	mov    0x8(%eax),%eax
840043ee:	85 c0                	test   %eax,%eax
840043f0:	0f 85 d4 fd ff ff    	jne    840041ca <__sfvwrite_r+0xfb>
840043f6:	e9 4c 01 00 00       	jmp    84004547 <__sfvwrite_r+0x478>
840043fb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84004402:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
84004409:	eb 18                	jmp    84004423 <__sfvwrite_r+0x354>
8400440b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84004412:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004415:	8b 08                	mov    (%eax),%ecx
84004417:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8400441a:	8b 78 04             	mov    0x4(%eax),%edi
8400441d:	83 c0 08             	add    $0x8,%eax
84004420:	89 45 c0             	mov    %eax,-0x40(%ebp)
84004423:	85 ff                	test   %edi,%edi
84004425:	74 e4                	je     8400440b <__sfvwrite_r+0x33c>
84004427:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8400442b:	75 32                	jne    8400445f <__sfvwrite_r+0x390>
8400442d:	83 ec 04             	sub    $0x4,%esp
84004430:	57                   	push   %edi
84004431:	6a 0a                	push   $0xa
84004433:	8b 75 c4             	mov    -0x3c(%ebp),%esi
84004436:	56                   	push   %esi
84004437:	e8 b4 02 00 00       	call   840046f0 <memchr>
8400443c:	83 c4 10             	add    $0x10,%esp
8400443f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004442:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
84004446:	74 0a                	je     84004452 <__sfvwrite_r+0x383>
84004448:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8400444b:	83 c0 01             	add    $0x1,%eax
8400444e:	29 f0                	sub    %esi,%eax
84004450:	eb 03                	jmp    84004455 <__sfvwrite_r+0x386>
84004452:	8d 47 01             	lea    0x1(%edi),%eax
84004455:	89 45 e0             	mov    %eax,-0x20(%ebp)
84004458:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8400445f:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004462:	39 c7                	cmp    %eax,%edi
84004464:	0f 46 c7             	cmovbe %edi,%eax
84004467:	89 c1                	mov    %eax,%ecx
84004469:	8b 53 08             	mov    0x8(%ebx),%edx
8400446c:	8b 43 14             	mov    0x14(%ebx),%eax
8400446f:	8d 34 02             	lea    (%edx,%eax,1),%esi
84004472:	8b 13                	mov    (%ebx),%edx
84004474:	8b 43 10             	mov    0x10(%ebx),%eax
84004477:	39 c2                	cmp    %eax,%edx
84004479:	76 38                	jbe    840044b3 <__sfvwrite_r+0x3e4>
8400447b:	39 f1                	cmp    %esi,%ecx
8400447d:	7e 34                	jle    840044b3 <__sfvwrite_r+0x3e4>
8400447f:	89 f2                	mov    %esi,%edx
84004481:	8b 03                	mov    (%ebx),%eax
84004483:	83 ec 04             	sub    $0x4,%esp
84004486:	52                   	push   %edx
84004487:	ff 75 c4             	push   -0x3c(%ebp)
8400448a:	50                   	push   %eax
8400448b:	e8 40 03 00 00       	call   840047d0 <memmove>
84004490:	83 c4 10             	add    $0x10,%esp
84004493:	8b 03                	mov    (%ebx),%eax
84004495:	89 f2                	mov    %esi,%edx
84004497:	01 d0                	add    %edx,%eax
84004499:	89 03                	mov    %eax,(%ebx)
8400449b:	83 ec 08             	sub    $0x8,%esp
8400449e:	53                   	push   %ebx
8400449f:	ff 75 08             	push   0x8(%ebp)
840044a2:	e8 d4 c9 ff ff       	call   84000e7b <_fflush_r>
840044a7:	83 c4 10             	add    $0x10,%esp
840044aa:	85 c0                	test   %eax,%eax
840044ac:	74 4f                	je     840044fd <__sfvwrite_r+0x42e>
840044ae:	e9 a2 00 00 00       	jmp    84004555 <__sfvwrite_r+0x486>
840044b3:	8b 73 14             	mov    0x14(%ebx),%esi
840044b6:	89 c8                	mov    %ecx,%eax
840044b8:	39 c6                	cmp    %eax,%esi
840044ba:	7f 1b                	jg     840044d7 <__sfvwrite_r+0x408>
840044bc:	8b 53 24             	mov    0x24(%ebx),%edx
840044bf:	8b 43 1c             	mov    0x1c(%ebx),%eax
840044c2:	56                   	push   %esi
840044c3:	ff 75 c4             	push   -0x3c(%ebp)
840044c6:	50                   	push   %eax
840044c7:	ff 75 08             	push   0x8(%ebp)
840044ca:	ff d2                	call   *%edx
840044cc:	83 c4 10             	add    $0x10,%esp
840044cf:	89 c6                	mov    %eax,%esi
840044d1:	85 f6                	test   %esi,%esi
840044d3:	7f 28                	jg     840044fd <__sfvwrite_r+0x42e>
840044d5:	eb 7e                	jmp    84004555 <__sfvwrite_r+0x486>
840044d7:	89 ce                	mov    %ecx,%esi
840044d9:	89 f2                	mov    %esi,%edx
840044db:	8b 03                	mov    (%ebx),%eax
840044dd:	83 ec 04             	sub    $0x4,%esp
840044e0:	52                   	push   %edx
840044e1:	ff 75 c4             	push   -0x3c(%ebp)
840044e4:	50                   	push   %eax
840044e5:	e8 e6 02 00 00       	call   840047d0 <memmove>
840044ea:	83 c4 10             	add    $0x10,%esp
840044ed:	8b 43 08             	mov    0x8(%ebx),%eax
840044f0:	29 f0                	sub    %esi,%eax
840044f2:	89 43 08             	mov    %eax,0x8(%ebx)
840044f5:	8b 03                	mov    (%ebx),%eax
840044f7:	89 f2                	mov    %esi,%edx
840044f9:	01 d0                	add    %edx,%eax
840044fb:	89 03                	mov    %eax,(%ebx)
840044fd:	29 75 e0             	sub    %esi,-0x20(%ebp)
84004500:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
84004504:	75 1a                	jne    84004520 <__sfvwrite_r+0x451>
84004506:	83 ec 08             	sub    $0x8,%esp
84004509:	53                   	push   %ebx
8400450a:	ff 75 08             	push   0x8(%ebp)
8400450d:	e8 69 c9 ff ff       	call   84000e7b <_fflush_r>
84004512:	83 c4 10             	add    $0x10,%esp
84004515:	85 c0                	test   %eax,%eax
84004517:	75 3b                	jne    84004554 <__sfvwrite_r+0x485>
84004519:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84004520:	89 f0                	mov    %esi,%eax
84004522:	01 45 c4             	add    %eax,-0x3c(%ebp)
84004525:	89 f0                	mov    %esi,%eax
84004527:	29 c7                	sub    %eax,%edi
84004529:	8b 45 10             	mov    0x10(%ebp),%eax
8400452c:	8b 40 08             	mov    0x8(%eax),%eax
8400452f:	89 f2                	mov    %esi,%edx
84004531:	29 d0                	sub    %edx,%eax
84004533:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004536:	89 41 08             	mov    %eax,0x8(%ecx)
84004539:	8b 45 10             	mov    0x10(%ebp),%eax
8400453c:	8b 40 08             	mov    0x8(%eax),%eax
8400453f:	85 c0                	test   %eax,%eax
84004541:	0f 85 dc fe ff ff    	jne    84004423 <__sfvwrite_r+0x354>
84004547:	b8 00 00 00 00       	mov    $0x0,%eax
8400454c:	eb 17                	jmp    84004565 <__sfvwrite_r+0x496>
8400454e:	90                   	nop
8400454f:	eb 04                	jmp    84004555 <__sfvwrite_r+0x486>
84004551:	90                   	nop
84004552:	eb 01                	jmp    84004555 <__sfvwrite_r+0x486>
84004554:	90                   	nop
84004555:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004559:	83 c8 40             	or     $0x40,%eax
8400455c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84004560:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84004565:	8d 65 f4             	lea    -0xc(%ebp),%esp
84004568:	5b                   	pop    %ebx
84004569:	5e                   	pop    %esi
8400456a:	5f                   	pop    %edi
8400456b:	5d                   	pop    %ebp
8400456c:	c3                   	ret    

8400456d <_isatty_r>:
8400456d:	55                   	push   %ebp
8400456e:	89 e5                	mov    %esp,%ebp
84004570:	83 ec 18             	sub    $0x18,%esp
84004573:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
8400457a:	00 00 00 
8400457d:	83 ec 0c             	sub    $0xc,%esp
84004580:	ff 75 0c             	push   0xc(%ebp)
84004583:	e8 1d bd ff ff       	call   840002a5 <isatty>
84004588:	83 c4 10             	add    $0x10,%esp
8400458b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400458e:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84004592:	75 14                	jne    840045a8 <_isatty_r+0x3b>
84004594:	a1 10 64 00 84       	mov    0x84006410,%eax
84004599:	85 c0                	test   %eax,%eax
8400459b:	74 0b                	je     840045a8 <_isatty_r+0x3b>
8400459d:	8b 15 10 64 00 84    	mov    0x84006410,%edx
840045a3:	8b 45 08             	mov    0x8(%ebp),%eax
840045a6:	89 10                	mov    %edx,(%eax)
840045a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
840045ab:	c9                   	leave  
840045ac:	c3                   	ret    

840045ad <__get_global_locale>:
840045ad:	55                   	push   %ebp
840045ae:	89 e5                	mov    %esp,%ebp
840045b0:	b8 20 62 00 84       	mov    $0x84006220,%eax
840045b5:	5d                   	pop    %ebp
840045b6:	c3                   	ret    

840045b7 <__get_current_locale>:
840045b7:	55                   	push   %ebp
840045b8:	89 e5                	mov    %esp,%ebp
840045ba:	e8 ee ff ff ff       	call   840045ad <__get_global_locale>
840045bf:	5d                   	pop    %ebp
840045c0:	c3                   	ret    

840045c1 <_setlocale_r>:
840045c1:	55                   	push   %ebp
840045c2:	89 e5                	mov    %esp,%ebp
840045c4:	83 ec 08             	sub    $0x8,%esp
840045c7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
840045cb:	74 4c                	je     84004619 <_setlocale_r+0x58>
840045cd:	83 ec 08             	sub    $0x8,%esp
840045d0:	68 fb 56 00 84       	push   $0x840056fb
840045d5:	ff 75 10             	push   0x10(%ebp)
840045d8:	e8 88 0d 00 00       	call   84005365 <strcmp>
840045dd:	83 c4 10             	add    $0x10,%esp
840045e0:	85 c0                	test   %eax,%eax
840045e2:	74 35                	je     84004619 <_setlocale_r+0x58>
840045e4:	83 ec 08             	sub    $0x8,%esp
840045e7:	68 01 57 00 84       	push   $0x84005701
840045ec:	ff 75 10             	push   0x10(%ebp)
840045ef:	e8 71 0d 00 00       	call   84005365 <strcmp>
840045f4:	83 c4 10             	add    $0x10,%esp
840045f7:	85 c0                	test   %eax,%eax
840045f9:	74 1e                	je     84004619 <_setlocale_r+0x58>
840045fb:	83 ec 08             	sub    $0x8,%esp
840045fe:	68 fa 56 00 84       	push   $0x840056fa
84004603:	ff 75 10             	push   0x10(%ebp)
84004606:	e8 5a 0d 00 00       	call   84005365 <strcmp>
8400460b:	83 c4 10             	add    $0x10,%esp
8400460e:	85 c0                	test   %eax,%eax
84004610:	74 07                	je     84004619 <_setlocale_r+0x58>
84004612:	b8 00 00 00 00       	mov    $0x0,%eax
84004617:	eb 05                	jmp    8400461e <_setlocale_r+0x5d>
84004619:	b8 01 57 00 84       	mov    $0x84005701,%eax
8400461e:	c9                   	leave  
8400461f:	c3                   	ret    

84004620 <__locale_mb_cur_max>:
84004620:	55                   	push   %ebp
84004621:	89 e5                	mov    %esp,%ebp
84004623:	e8 8f ff ff ff       	call   840045b7 <__get_current_locale>
84004628:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8400462f:	0f be c0             	movsbl %al,%eax
84004632:	5d                   	pop    %ebp
84004633:	c3                   	ret    

84004634 <setlocale>:
84004634:	55                   	push   %ebp
84004635:	89 e5                	mov    %esp,%ebp
84004637:	83 ec 08             	sub    $0x8,%esp
8400463a:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
8400463f:	83 ec 04             	sub    $0x4,%esp
84004642:	ff 75 0c             	push   0xc(%ebp)
84004645:	ff 75 08             	push   0x8(%ebp)
84004648:	50                   	push   %eax
84004649:	e8 73 ff ff ff       	call   840045c1 <_setlocale_r>
8400464e:	83 c4 10             	add    $0x10,%esp
84004651:	c9                   	leave  
84004652:	c3                   	ret    

84004653 <__get_global_locale>:
84004653:	55                   	push   %ebp
84004654:	89 e5                	mov    %esp,%ebp
84004656:	b8 20 62 00 84       	mov    $0x84006220,%eax
8400465b:	5d                   	pop    %ebp
8400465c:	c3                   	ret    

8400465d <__get_current_locale>:
8400465d:	55                   	push   %ebp
8400465e:	89 e5                	mov    %esp,%ebp
84004660:	e8 ee ff ff ff       	call   84004653 <__get_global_locale>
84004665:	5d                   	pop    %ebp
84004666:	c3                   	ret    

84004667 <_mbtowc_r>:
84004667:	55                   	push   %ebp
84004668:	89 e5                	mov    %esp,%ebp
8400466a:	83 ec 08             	sub    $0x8,%esp
8400466d:	e8 eb ff ff ff       	call   8400465d <__get_current_locale>
84004672:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
84004678:	83 ec 0c             	sub    $0xc,%esp
8400467b:	ff 75 18             	push   0x18(%ebp)
8400467e:	ff 75 14             	push   0x14(%ebp)
84004681:	ff 75 10             	push   0x10(%ebp)
84004684:	ff 75 0c             	push   0xc(%ebp)
84004687:	ff 75 08             	push   0x8(%ebp)
8400468a:	ff d0                	call   *%eax
8400468c:	83 c4 20             	add    $0x20,%esp
8400468f:	c9                   	leave  
84004690:	c3                   	ret    

84004691 <__ascii_mbtowc>:
84004691:	55                   	push   %ebp
84004692:	89 e5                	mov    %esp,%ebp
84004694:	83 ec 10             	sub    $0x10,%esp
84004697:	8b 45 10             	mov    0x10(%ebp),%eax
8400469a:	89 45 fc             	mov    %eax,-0x4(%ebp)
8400469d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
840046a1:	75 06                	jne    840046a9 <__ascii_mbtowc+0x18>
840046a3:	8d 45 f8             	lea    -0x8(%ebp),%eax
840046a6:	89 45 0c             	mov    %eax,0xc(%ebp)
840046a9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
840046ad:	75 07                	jne    840046b6 <__ascii_mbtowc+0x25>
840046af:	b8 00 00 00 00       	mov    $0x0,%eax
840046b4:	eb 31                	jmp    840046e7 <__ascii_mbtowc+0x56>
840046b6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
840046ba:	75 07                	jne    840046c3 <__ascii_mbtowc+0x32>
840046bc:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
840046c1:	eb 24                	jmp    840046e7 <__ascii_mbtowc+0x56>
840046c3:	8b 45 fc             	mov    -0x4(%ebp),%eax
840046c6:	0f b6 00             	movzbl (%eax),%eax
840046c9:	0f b6 d0             	movzbl %al,%edx
840046cc:	8b 45 0c             	mov    0xc(%ebp),%eax
840046cf:	89 10                	mov    %edx,(%eax)
840046d1:	8b 45 fc             	mov    -0x4(%ebp),%eax
840046d4:	0f b6 00             	movzbl (%eax),%eax
840046d7:	84 c0                	test   %al,%al
840046d9:	75 07                	jne    840046e2 <__ascii_mbtowc+0x51>
840046db:	b8 00 00 00 00       	mov    $0x0,%eax
840046e0:	eb 05                	jmp    840046e7 <__ascii_mbtowc+0x56>
840046e2:	b8 01 00 00 00       	mov    $0x1,%eax
840046e7:	c9                   	leave  
840046e8:	c3                   	ret    
840046e9:	66 90                	xchg   %ax,%ax
840046eb:	66 90                	xchg   %ax,%ax
840046ed:	66 90                	xchg   %ax,%ax
840046ef:	90                   	nop

840046f0 <memchr>:
840046f0:	55                   	push   %ebp
840046f1:	89 e5                	mov    %esp,%ebp
840046f3:	57                   	push   %edi
840046f4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
840046f8:	8b 4d 10             	mov    0x10(%ebp),%ecx
840046fb:	8b 7d 08             	mov    0x8(%ebp),%edi
840046fe:	31 d2                	xor    %edx,%edx
84004700:	85 c9                	test   %ecx,%ecx
84004702:	74 79                	je     8400477d <L20>
84004704:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400470a:	74 28                	je     84004734 <L5>
8400470c:	3a 07                	cmp    (%edi),%al
8400470e:	74 6a                	je     8400477a <L15>
84004710:	47                   	inc    %edi
84004711:	49                   	dec    %ecx
84004712:	74 69                	je     8400477d <L20>
84004714:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400471a:	74 18                	je     84004734 <L5>
8400471c:	3a 07                	cmp    (%edi),%al
8400471e:	74 5a                	je     8400477a <L15>
84004720:	47                   	inc    %edi
84004721:	49                   	dec    %ecx
84004722:	74 59                	je     8400477d <L20>
84004724:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400472a:	74 08                	je     84004734 <L5>
8400472c:	3a 07                	cmp    (%edi),%al
8400472e:	74 4a                	je     8400477a <L15>
84004730:	47                   	inc    %edi
84004731:	49                   	dec    %ecx
84004732:	74 49                	je     8400477d <L20>

84004734 <L5>:
84004734:	88 c4                	mov    %al,%ah
84004736:	89 c2                	mov    %eax,%edx
84004738:	c1 e2 10             	shl    $0x10,%edx
8400473b:	09 d0                	or     %edx,%eax
8400473d:	53                   	push   %ebx
8400473e:	66 90                	xchg   %ax,%ax

84004740 <L8>:
84004740:	83 e9 04             	sub    $0x4,%ecx
84004743:	72 1c                	jb     84004761 <L9>
84004745:	8b 17                	mov    (%edi),%edx
84004747:	83 c7 04             	add    $0x4,%edi
8400474a:	31 c2                	xor    %eax,%edx
8400474c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
84004752:	f7 d2                	not    %edx
84004754:	21 d3                	and    %edx,%ebx
84004756:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8400475c:	74 e2                	je     84004740 <L8>
8400475e:	83 ef 04             	sub    $0x4,%edi

84004761 <L9>:
84004761:	5b                   	pop    %ebx
84004762:	31 d2                	xor    %edx,%edx
84004764:	83 c1 04             	add    $0x4,%ecx
84004767:	74 14                	je     8400477d <L20>
84004769:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

84004770 <L10>:
84004770:	3a 07                	cmp    (%edi),%al
84004772:	74 06                	je     8400477a <L15>
84004774:	47                   	inc    %edi
84004775:	49                   	dec    %ecx
84004776:	75 f8                	jne    84004770 <L10>
84004778:	31 ff                	xor    %edi,%edi

8400477a <L15>:
8400477a:	4a                   	dec    %edx
8400477b:	21 fa                	and    %edi,%edx

8400477d <L20>:
8400477d:	89 d0                	mov    %edx,%eax
8400477f:	8d 65 fc             	lea    -0x4(%ebp),%esp
84004782:	5f                   	pop    %edi
84004783:	c9                   	leave  
84004784:	c3                   	ret    
84004785:	66 90                	xchg   %ax,%ax
84004787:	90                   	nop

84004788 <memcpy>:
84004788:	55                   	push   %ebp
84004789:	89 e5                	mov    %esp,%ebp
8400478b:	56                   	push   %esi
8400478c:	57                   	push   %edi
8400478d:	53                   	push   %ebx
8400478e:	8b 7d 08             	mov    0x8(%ebp),%edi
84004791:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004794:	8b 75 0c             	mov    0xc(%ebp),%esi
84004797:	fc                   	cld    
84004798:	83 f9 08             	cmp    $0x8,%ecx
8400479b:	76 26                	jbe    840047c3 <memcpy+0x3b>
8400479d:	89 fa                	mov    %edi,%edx
8400479f:	89 cb                	mov    %ecx,%ebx
840047a1:	83 e2 03             	and    $0x3,%edx
840047a4:	74 10                	je     840047b6 <memcpy+0x2e>
840047a6:	b9 04 00 00 00       	mov    $0x4,%ecx
840047ab:	29 d1                	sub    %edx,%ecx
840047ad:	83 e1 03             	and    $0x3,%ecx
840047b0:	29 cb                	sub    %ecx,%ebx
840047b2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047b4:	89 d9                	mov    %ebx,%ecx
840047b6:	c1 e9 02             	shr    $0x2,%ecx
840047b9:	8d 76 00             	lea    0x0(%esi),%esi
840047bc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
840047be:	89 d9                	mov    %ebx,%ecx
840047c0:	83 e1 03             	and    $0x3,%ecx
840047c3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047c5:	8b 45 08             	mov    0x8(%ebp),%eax
840047c8:	8d 65 f4             	lea    -0xc(%ebp),%esp
840047cb:	5b                   	pop    %ebx
840047cc:	5f                   	pop    %edi
840047cd:	5e                   	pop    %esi
840047ce:	c9                   	leave  
840047cf:	c3                   	ret    

840047d0 <memmove>:
840047d0:	55                   	push   %ebp
840047d1:	89 e5                	mov    %esp,%ebp
840047d3:	56                   	push   %esi
840047d4:	57                   	push   %edi
840047d5:	53                   	push   %ebx
840047d6:	8b 7d 08             	mov    0x8(%ebp),%edi
840047d9:	8b 4d 10             	mov    0x10(%ebp),%ecx
840047dc:	8b 75 0c             	mov    0xc(%ebp),%esi
840047df:	fc                   	cld    
840047e0:	39 fe                	cmp    %edi,%esi
840047e2:	73 43                	jae    84004827 <memmove+0x57>
840047e4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
840047e8:	39 df                	cmp    %ebx,%edi
840047ea:	77 3b                	ja     84004827 <memmove+0x57>
840047ec:	01 ce                	add    %ecx,%esi
840047ee:	01 cf                	add    %ecx,%edi
840047f0:	fd                   	std    
840047f1:	83 f9 08             	cmp    $0x8,%ecx
840047f4:	76 2b                	jbe    84004821 <memmove+0x51>
840047f6:	89 fa                	mov    %edi,%edx
840047f8:	89 cb                	mov    %ecx,%ebx
840047fa:	83 e2 03             	and    $0x3,%edx
840047fd:	74 0c                	je     8400480b <memmove+0x3b>
840047ff:	89 d1                	mov    %edx,%ecx
84004801:	4e                   	dec    %esi
84004802:	4f                   	dec    %edi
84004803:	29 cb                	sub    %ecx,%ebx
84004805:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004807:	89 d9                	mov    %ebx,%ecx
84004809:	46                   	inc    %esi
8400480a:	47                   	inc    %edi
8400480b:	c1 e9 02             	shr    $0x2,%ecx
8400480e:	83 ee 04             	sub    $0x4,%esi
84004811:	83 ef 04             	sub    $0x4,%edi
84004814:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
84004816:	83 c6 04             	add    $0x4,%esi
84004819:	83 c7 04             	add    $0x4,%edi
8400481c:	89 d9                	mov    %ebx,%ecx
8400481e:	83 e1 03             	and    $0x3,%ecx
84004821:	4e                   	dec    %esi
84004822:	4f                   	dec    %edi
84004823:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004825:	eb 2a                	jmp    84004851 <memmove+0x81>
84004827:	83 f9 08             	cmp    $0x8,%ecx
8400482a:	76 23                	jbe    8400484f <memmove+0x7f>
8400482c:	89 fa                	mov    %edi,%edx
8400482e:	89 cb                	mov    %ecx,%ebx
84004830:	83 e2 03             	and    $0x3,%edx
84004833:	74 10                	je     84004845 <memmove+0x75>
84004835:	b9 04 00 00 00       	mov    $0x4,%ecx
8400483a:	29 d1                	sub    %edx,%ecx
8400483c:	83 e1 03             	and    $0x3,%ecx
8400483f:	29 cb                	sub    %ecx,%ebx
84004841:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004843:	89 d9                	mov    %ebx,%ecx
84004845:	c1 e9 02             	shr    $0x2,%ecx
84004848:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8400484a:	89 d9                	mov    %ebx,%ecx
8400484c:	83 e1 03             	and    $0x3,%ecx
8400484f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004851:	8b 45 08             	mov    0x8(%ebp),%eax
84004854:	fc                   	cld    
84004855:	8d 65 f4             	lea    -0xc(%ebp),%esp
84004858:	5b                   	pop    %ebx
84004859:	5f                   	pop    %edi
8400485a:	5e                   	pop    %esi
8400485b:	c9                   	leave  
8400485c:	c3                   	ret    

8400485d <_realloc_r>:
8400485d:	55                   	push   %ebp
8400485e:	89 e5                	mov    %esp,%ebp
84004860:	83 ec 78             	sub    $0x78,%esp
84004863:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84004867:	75 16                	jne    8400487f <_realloc_r+0x22>
84004869:	83 ec 08             	sub    $0x8,%esp
8400486c:	ff 75 10             	push   0x10(%ebp)
8400486f:	ff 75 08             	push   0x8(%ebp)
84004872:	e8 be d3 ff ff       	call   84001c35 <_malloc_r>
84004877:	83 c4 10             	add    $0x10,%esp
8400487a:	e9 b6 08 00 00       	jmp    84005135 <_realloc_r+0x8d8>
8400487f:	83 ec 0c             	sub    $0xc,%esp
84004882:	ff 75 08             	push   0x8(%ebp)
84004885:	e8 55 dc ff ff       	call   840024df <__malloc_lock>
8400488a:	83 c4 10             	add    $0x10,%esp
8400488d:	8b 45 0c             	mov    0xc(%ebp),%eax
84004890:	83 e8 08             	sub    $0x8,%eax
84004893:	89 45 c4             	mov    %eax,-0x3c(%ebp)
84004896:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004899:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400489c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400489f:	8b 40 04             	mov    0x4(%eax),%eax
840048a2:	83 e0 fc             	and    $0xfffffffc,%eax
840048a5:	89 45 c0             	mov    %eax,-0x40(%ebp)
840048a8:	8b 45 c0             	mov    -0x40(%ebp),%eax
840048ab:	89 45 f0             	mov    %eax,-0x10(%ebp)
840048ae:	8b 45 10             	mov    0x10(%ebp),%eax
840048b1:	83 c0 0b             	add    $0xb,%eax
840048b4:	83 f8 16             	cmp    $0x16,%eax
840048b7:	76 0b                	jbe    840048c4 <_realloc_r+0x67>
840048b9:	8b 45 10             	mov    0x10(%ebp),%eax
840048bc:	83 c0 0b             	add    $0xb,%eax
840048bf:	83 e0 f8             	and    $0xfffffff8,%eax
840048c2:	eb 05                	jmp    840048c9 <_realloc_r+0x6c>
840048c4:	b8 10 00 00 00       	mov    $0x10,%eax
840048c9:	89 45 bc             	mov    %eax,-0x44(%ebp)
840048cc:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048cf:	85 c0                	test   %eax,%eax
840048d1:	78 08                	js     840048db <_realloc_r+0x7e>
840048d3:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048d6:	3b 45 10             	cmp    0x10(%ebp),%eax
840048d9:	73 13                	jae    840048ee <_realloc_r+0x91>
840048db:	8b 45 08             	mov    0x8(%ebp),%eax
840048de:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840048e4:	b8 00 00 00 00       	mov    $0x0,%eax
840048e9:	e9 47 08 00 00       	jmp    84005135 <_realloc_r+0x8d8>
840048ee:	8b 55 c0             	mov    -0x40(%ebp),%edx
840048f1:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048f4:	39 c2                	cmp    %eax,%edx
840048f6:	0f 8d 8b 07 00 00    	jge    84005087 <_realloc_r+0x82a>
840048fc:	8b 55 c4             	mov    -0x3c(%ebp),%edx
840048ff:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004902:	01 d0                	add    %edx,%eax
84004904:	89 45 ec             	mov    %eax,-0x14(%ebp)
84004907:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400490c:	8b 40 08             	mov    0x8(%eax),%eax
8400490f:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004912:	74 1e                	je     84004932 <_realloc_r+0xd5>
84004914:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004917:	8b 40 04             	mov    0x4(%eax),%eax
8400491a:	83 e0 fe             	and    $0xfffffffe,%eax
8400491d:	89 c2                	mov    %eax,%edx
8400491f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004922:	01 d0                	add    %edx,%eax
84004924:	8b 40 04             	mov    0x4(%eax),%eax
84004927:	83 e0 01             	and    $0x1,%eax
8400492a:	85 c0                	test   %eax,%eax
8400492c:	0f 85 ca 00 00 00    	jne    840049fc <_realloc_r+0x19f>
84004932:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004935:	8b 40 04             	mov    0x4(%eax),%eax
84004938:	83 e0 fc             	and    $0xfffffffc,%eax
8400493b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400493e:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84004943:	8b 40 08             	mov    0x8(%eax),%eax
84004946:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004949:	75 71                	jne    840049bc <_realloc_r+0x15f>
8400494b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400494e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004951:	01 d0                	add    %edx,%eax
84004953:	89 c2                	mov    %eax,%edx
84004955:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004958:	83 c0 10             	add    $0x10,%eax
8400495b:	39 c2                	cmp    %eax,%edx
8400495d:	0f 8c a9 00 00 00    	jl     84004a0c <_realloc_r+0x1af>
84004963:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004966:	01 45 f0             	add    %eax,-0x10(%ebp)
84004969:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
8400496e:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
84004971:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004974:	01 c8                	add    %ecx,%eax
84004976:	89 42 08             	mov    %eax,0x8(%edx)
84004979:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400497c:	2b 45 bc             	sub    -0x44(%ebp),%eax
8400497f:	89 c2                	mov    %eax,%edx
84004981:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84004986:	8b 40 08             	mov    0x8(%eax),%eax
84004989:	83 ca 01             	or     $0x1,%edx
8400498c:	89 50 04             	mov    %edx,0x4(%eax)
8400498f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004992:	8b 40 04             	mov    0x4(%eax),%eax
84004995:	83 e0 01             	and    $0x1,%eax
84004998:	0b 45 bc             	or     -0x44(%ebp),%eax
8400499b:	89 c2                	mov    %eax,%edx
8400499d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840049a0:	89 50 04             	mov    %edx,0x4(%eax)
840049a3:	83 ec 0c             	sub    $0xc,%esp
840049a6:	ff 75 08             	push   0x8(%ebp)
840049a9:	e8 37 db ff ff       	call   840024e5 <__malloc_unlock>
840049ae:	83 c4 10             	add    $0x10,%esp
840049b1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840049b4:	83 c0 08             	add    $0x8,%eax
840049b7:	e9 79 07 00 00       	jmp    84005135 <_realloc_r+0x8d8>
840049bc:	8b 55 e8             	mov    -0x18(%ebp),%edx
840049bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
840049c2:	01 d0                	add    %edx,%eax
840049c4:	89 c2                	mov    %eax,%edx
840049c6:	8b 45 bc             	mov    -0x44(%ebp),%eax
840049c9:	39 c2                	cmp    %eax,%edx
840049cb:	7c 3f                	jl     84004a0c <_realloc_r+0x1af>
840049cd:	8b 45 ec             	mov    -0x14(%ebp),%eax
840049d0:	8b 40 0c             	mov    0xc(%eax),%eax
840049d3:	89 45 b8             	mov    %eax,-0x48(%ebp)
840049d6:	8b 45 ec             	mov    -0x14(%ebp),%eax
840049d9:	8b 40 08             	mov    0x8(%eax),%eax
840049dc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
840049df:	8b 45 b4             	mov    -0x4c(%ebp),%eax
840049e2:	8b 55 b8             	mov    -0x48(%ebp),%edx
840049e5:	89 50 0c             	mov    %edx,0xc(%eax)
840049e8:	8b 45 b8             	mov    -0x48(%ebp),%eax
840049eb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
840049ee:	89 50 08             	mov    %edx,0x8(%eax)
840049f1:	8b 45 e8             	mov    -0x18(%ebp),%eax
840049f4:	01 45 f0             	add    %eax,-0x10(%ebp)
840049f7:	e9 8c 06 00 00       	jmp    84005088 <_realloc_r+0x82b>
840049fc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
84004a03:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
84004a0a:	eb 01                	jmp    84004a0d <_realloc_r+0x1b0>
84004a0c:	90                   	nop
84004a0d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a10:	8b 40 04             	mov    0x4(%eax),%eax
84004a13:	83 e0 01             	and    $0x1,%eax
84004a16:	85 c0                	test   %eax,%eax
84004a18:	0f 85 d6 04 00 00    	jne    84004ef4 <_realloc_r+0x697>
84004a1e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a21:	8b 00                	mov    (%eax),%eax
84004a23:	f7 d8                	neg    %eax
84004a25:	89 c2                	mov    %eax,%edx
84004a27:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a2a:	01 d0                	add    %edx,%eax
84004a2c:	89 45 b0             	mov    %eax,-0x50(%ebp)
84004a2f:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a32:	8b 40 04             	mov    0x4(%eax),%eax
84004a35:	83 e0 fc             	and    $0xfffffffc,%eax
84004a38:	89 45 ac             	mov    %eax,-0x54(%ebp)
84004a3b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
84004a3f:	0f 84 4a 03 00 00    	je     84004d8f <_realloc_r+0x532>
84004a45:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84004a4a:	8b 40 08             	mov    0x8(%eax),%eax
84004a4d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004a50:	0f 85 b0 01 00 00    	jne    84004c06 <_realloc_r+0x3a9>
84004a56:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004a59:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004a5c:	01 c2                	add    %eax,%edx
84004a5e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004a61:	01 d0                	add    %edx,%eax
84004a63:	89 c2                	mov    %eax,%edx
84004a65:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004a68:	83 c0 10             	add    $0x10,%eax
84004a6b:	39 c2                	cmp    %eax,%edx
84004a6d:	0f 8c 1c 03 00 00    	jl     84004d8f <_realloc_r+0x532>
84004a73:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a76:	8b 40 0c             	mov    0xc(%eax),%eax
84004a79:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004a7c:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a7f:	8b 40 08             	mov    0x8(%eax),%eax
84004a82:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004a85:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004a88:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004a8b:	89 50 0c             	mov    %edx,0xc(%eax)
84004a8e:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004a91:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004a94:	89 50 08             	mov    %edx,0x8(%eax)
84004a97:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a9a:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004a9d:	8b 55 ac             	mov    -0x54(%ebp),%edx
84004aa0:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004aa3:	01 d0                	add    %edx,%eax
84004aa5:	01 45 f0             	add    %eax,-0x10(%ebp)
84004aa8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004aab:	83 c0 08             	add    $0x8,%eax
84004aae:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004ab1:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004ab4:	83 e8 04             	sub    $0x4,%eax
84004ab7:	89 45 a0             	mov    %eax,-0x60(%ebp)
84004aba:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
84004abe:	0f 87 de 00 00 00    	ja     84004ba2 <_realloc_r+0x345>
84004ac4:	8b 45 0c             	mov    0xc(%ebp),%eax
84004ac7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004aca:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004acd:	89 45 e0             	mov    %eax,-0x20(%ebp)
84004ad0:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
84004ad4:	0f 86 90 00 00 00    	jbe    84004b6a <_realloc_r+0x30d>
84004ada:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004add:	8d 42 04             	lea    0x4(%edx),%eax
84004ae0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004ae3:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004ae6:	8d 48 04             	lea    0x4(%eax),%ecx
84004ae9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004aec:	8b 12                	mov    (%edx),%edx
84004aee:	89 10                	mov    %edx,(%eax)
84004af0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004af3:	8d 42 04             	lea    0x4(%edx),%eax
84004af6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004af9:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004afc:	8d 48 04             	lea    0x4(%eax),%ecx
84004aff:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b02:	8b 12                	mov    (%edx),%edx
84004b04:	89 10                	mov    %edx,(%eax)
84004b06:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
84004b0a:	76 5e                	jbe    84004b6a <_realloc_r+0x30d>
84004b0c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b0f:	8d 42 04             	lea    0x4(%edx),%eax
84004b12:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b15:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b18:	8d 48 04             	lea    0x4(%eax),%ecx
84004b1b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b1e:	8b 12                	mov    (%edx),%edx
84004b20:	89 10                	mov    %edx,(%eax)
84004b22:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b25:	8d 42 04             	lea    0x4(%edx),%eax
84004b28:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b2b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b2e:	8d 48 04             	lea    0x4(%eax),%ecx
84004b31:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b34:	8b 12                	mov    (%edx),%edx
84004b36:	89 10                	mov    %edx,(%eax)
84004b38:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
84004b3c:	76 2c                	jbe    84004b6a <_realloc_r+0x30d>
84004b3e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b41:	8d 42 04             	lea    0x4(%edx),%eax
84004b44:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b47:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b4a:	8d 48 04             	lea    0x4(%eax),%ecx
84004b4d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b50:	8b 12                	mov    (%edx),%edx
84004b52:	89 10                	mov    %edx,(%eax)
84004b54:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b57:	8d 42 04             	lea    0x4(%edx),%eax
84004b5a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b5d:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b60:	8d 48 04             	lea    0x4(%eax),%ecx
84004b63:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b66:	8b 12                	mov    (%edx),%edx
84004b68:	89 10                	mov    %edx,(%eax)
84004b6a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b6d:	8d 42 04             	lea    0x4(%edx),%eax
84004b70:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b73:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b76:	8d 48 04             	lea    0x4(%eax),%ecx
84004b79:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b7c:	8b 12                	mov    (%edx),%edx
84004b7e:	89 10                	mov    %edx,(%eax)
84004b80:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b83:	8d 42 04             	lea    0x4(%edx),%eax
84004b86:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b89:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b8c:	8d 48 04             	lea    0x4(%eax),%ecx
84004b8f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b92:	8b 12                	mov    (%edx),%edx
84004b94:	89 10                	mov    %edx,(%eax)
84004b96:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84004b99:	8b 10                	mov    (%eax),%edx
84004b9b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b9e:	89 10                	mov    %edx,(%eax)
84004ba0:	eb 14                	jmp    84004bb6 <_realloc_r+0x359>
84004ba2:	83 ec 04             	sub    $0x4,%esp
84004ba5:	ff 75 a0             	push   -0x60(%ebp)
84004ba8:	ff 75 0c             	push   0xc(%ebp)
84004bab:	ff 75 a8             	push   -0x58(%ebp)
84004bae:	e8 1d fc ff ff       	call   840047d0 <memmove>
84004bb3:	83 c4 10             	add    $0x10,%esp
84004bb6:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84004bbb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84004bbe:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004bc1:	01 c8                	add    %ecx,%eax
84004bc3:	89 42 08             	mov    %eax,0x8(%edx)
84004bc6:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004bc9:	2b 45 bc             	sub    -0x44(%ebp),%eax
84004bcc:	89 c2                	mov    %eax,%edx
84004bce:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84004bd3:	8b 40 08             	mov    0x8(%eax),%eax
84004bd6:	83 ca 01             	or     $0x1,%edx
84004bd9:	89 50 04             	mov    %edx,0x4(%eax)
84004bdc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004bdf:	8b 40 04             	mov    0x4(%eax),%eax
84004be2:	83 e0 01             	and    $0x1,%eax
84004be5:	0b 45 bc             	or     -0x44(%ebp),%eax
84004be8:	89 c2                	mov    %eax,%edx
84004bea:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004bed:	89 50 04             	mov    %edx,0x4(%eax)
84004bf0:	83 ec 0c             	sub    $0xc,%esp
84004bf3:	ff 75 08             	push   0x8(%ebp)
84004bf6:	e8 ea d8 ff ff       	call   840024e5 <__malloc_unlock>
84004bfb:	83 c4 10             	add    $0x10,%esp
84004bfe:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004c01:	e9 2f 05 00 00       	jmp    84005135 <_realloc_r+0x8d8>
84004c06:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004c09:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004c0c:	01 c2                	add    %eax,%edx
84004c0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004c11:	01 d0                	add    %edx,%eax
84004c13:	89 c2                	mov    %eax,%edx
84004c15:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004c18:	39 c2                	cmp    %eax,%edx
84004c1a:	0f 8c 6f 01 00 00    	jl     84004d8f <_realloc_r+0x532>
84004c20:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004c23:	8b 40 0c             	mov    0xc(%eax),%eax
84004c26:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004c29:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004c2c:	8b 40 08             	mov    0x8(%eax),%eax
84004c2f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004c32:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004c35:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004c38:	89 50 0c             	mov    %edx,0xc(%eax)
84004c3b:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004c3e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004c41:	89 50 08             	mov    %edx,0x8(%eax)
84004c44:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c47:	8b 40 0c             	mov    0xc(%eax),%eax
84004c4a:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004c4d:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c50:	8b 40 08             	mov    0x8(%eax),%eax
84004c53:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004c56:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004c59:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004c5c:	89 50 0c             	mov    %edx,0xc(%eax)
84004c5f:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004c62:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004c65:	89 50 08             	mov    %edx,0x8(%eax)
84004c68:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c6b:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004c6e:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004c71:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004c74:	01 d0                	add    %edx,%eax
84004c76:	01 45 f0             	add    %eax,-0x10(%ebp)
84004c79:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004c7c:	83 c0 08             	add    $0x8,%eax
84004c7f:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004c82:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004c85:	83 e8 04             	sub    $0x4,%eax
84004c88:	89 45 a4             	mov    %eax,-0x5c(%ebp)
84004c8b:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
84004c8f:	0f 87 e1 00 00 00    	ja     84004d76 <_realloc_r+0x519>
84004c95:	8b 45 0c             	mov    0xc(%ebp),%eax
84004c98:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004c9b:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004c9e:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004ca1:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
84004ca5:	0f 86 90 00 00 00    	jbe    84004d3b <_realloc_r+0x4de>
84004cab:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cae:	8d 42 04             	lea    0x4(%edx),%eax
84004cb1:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cb4:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cb7:	8d 48 04             	lea    0x4(%eax),%ecx
84004cba:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cbd:	8b 12                	mov    (%edx),%edx
84004cbf:	89 10                	mov    %edx,(%eax)
84004cc1:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cc4:	8d 42 04             	lea    0x4(%edx),%eax
84004cc7:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cca:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004ccd:	8d 48 04             	lea    0x4(%eax),%ecx
84004cd0:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cd3:	8b 12                	mov    (%edx),%edx
84004cd5:	89 10                	mov    %edx,(%eax)
84004cd7:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
84004cdb:	76 5e                	jbe    84004d3b <_realloc_r+0x4de>
84004cdd:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004ce0:	8d 42 04             	lea    0x4(%edx),%eax
84004ce3:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004ce6:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004ce9:	8d 48 04             	lea    0x4(%eax),%ecx
84004cec:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cef:	8b 12                	mov    (%edx),%edx
84004cf1:	89 10                	mov    %edx,(%eax)
84004cf3:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cf6:	8d 42 04             	lea    0x4(%edx),%eax
84004cf9:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cfc:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cff:	8d 48 04             	lea    0x4(%eax),%ecx
84004d02:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d05:	8b 12                	mov    (%edx),%edx
84004d07:	89 10                	mov    %edx,(%eax)
84004d09:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
84004d0d:	76 2c                	jbe    84004d3b <_realloc_r+0x4de>
84004d0f:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d12:	8d 42 04             	lea    0x4(%edx),%eax
84004d15:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d18:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d1b:	8d 48 04             	lea    0x4(%eax),%ecx
84004d1e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d21:	8b 12                	mov    (%edx),%edx
84004d23:	89 10                	mov    %edx,(%eax)
84004d25:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d28:	8d 42 04             	lea    0x4(%edx),%eax
84004d2b:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d2e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d31:	8d 48 04             	lea    0x4(%eax),%ecx
84004d34:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d37:	8b 12                	mov    (%edx),%edx
84004d39:	89 10                	mov    %edx,(%eax)
84004d3b:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d3e:	8d 42 04             	lea    0x4(%edx),%eax
84004d41:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d44:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d47:	8d 48 04             	lea    0x4(%eax),%ecx
84004d4a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d4d:	8b 12                	mov    (%edx),%edx
84004d4f:	89 10                	mov    %edx,(%eax)
84004d51:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d54:	8d 42 04             	lea    0x4(%edx),%eax
84004d57:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d5a:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d5d:	8d 48 04             	lea    0x4(%eax),%ecx
84004d60:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d63:	8b 12                	mov    (%edx),%edx
84004d65:	89 10                	mov    %edx,(%eax)
84004d67:	8b 45 dc             	mov    -0x24(%ebp),%eax
84004d6a:	8b 10                	mov    (%eax),%edx
84004d6c:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d6f:	89 10                	mov    %edx,(%eax)
84004d71:	e9 12 03 00 00       	jmp    84005088 <_realloc_r+0x82b>
84004d76:	83 ec 04             	sub    $0x4,%esp
84004d79:	ff 75 a4             	push   -0x5c(%ebp)
84004d7c:	ff 75 0c             	push   0xc(%ebp)
84004d7f:	ff 75 a8             	push   -0x58(%ebp)
84004d82:	e8 49 fa ff ff       	call   840047d0 <memmove>
84004d87:	83 c4 10             	add    $0x10,%esp
84004d8a:	e9 f9 02 00 00       	jmp    84005088 <_realloc_r+0x82b>
84004d8f:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
84004d93:	0f 84 5b 01 00 00    	je     84004ef4 <_realloc_r+0x697>
84004d99:	8b 55 ac             	mov    -0x54(%ebp),%edx
84004d9c:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004d9f:	01 d0                	add    %edx,%eax
84004da1:	89 c2                	mov    %eax,%edx
84004da3:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004da6:	39 c2                	cmp    %eax,%edx
84004da8:	0f 8c 46 01 00 00    	jl     84004ef4 <_realloc_r+0x697>
84004dae:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004db1:	8b 40 0c             	mov    0xc(%eax),%eax
84004db4:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004db7:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004dba:	8b 40 08             	mov    0x8(%eax),%eax
84004dbd:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004dc0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004dc3:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004dc6:	89 50 0c             	mov    %edx,0xc(%eax)
84004dc9:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004dcc:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004dcf:	89 50 08             	mov    %edx,0x8(%eax)
84004dd2:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004dd5:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004dd8:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004ddb:	01 45 f0             	add    %eax,-0x10(%ebp)
84004dde:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004de1:	83 c0 08             	add    $0x8,%eax
84004de4:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004de7:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004dea:	83 e8 04             	sub    $0x4,%eax
84004ded:	89 45 9c             	mov    %eax,-0x64(%ebp)
84004df0:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
84004df4:	0f 87 e1 00 00 00    	ja     84004edb <_realloc_r+0x67e>
84004dfa:	8b 45 0c             	mov    0xc(%ebp),%eax
84004dfd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e00:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004e03:	89 45 d0             	mov    %eax,-0x30(%ebp)
84004e06:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
84004e0a:	0f 86 90 00 00 00    	jbe    84004ea0 <_realloc_r+0x643>
84004e10:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e13:	8d 42 04             	lea    0x4(%edx),%eax
84004e16:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e19:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e1c:	8d 48 04             	lea    0x4(%eax),%ecx
84004e1f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e22:	8b 12                	mov    (%edx),%edx
84004e24:	89 10                	mov    %edx,(%eax)
84004e26:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e29:	8d 42 04             	lea    0x4(%edx),%eax
84004e2c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e2f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e32:	8d 48 04             	lea    0x4(%eax),%ecx
84004e35:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e38:	8b 12                	mov    (%edx),%edx
84004e3a:	89 10                	mov    %edx,(%eax)
84004e3c:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
84004e40:	76 5e                	jbe    84004ea0 <_realloc_r+0x643>
84004e42:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e45:	8d 42 04             	lea    0x4(%edx),%eax
84004e48:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e4b:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e4e:	8d 48 04             	lea    0x4(%eax),%ecx
84004e51:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e54:	8b 12                	mov    (%edx),%edx
84004e56:	89 10                	mov    %edx,(%eax)
84004e58:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e5b:	8d 42 04             	lea    0x4(%edx),%eax
84004e5e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e61:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e64:	8d 48 04             	lea    0x4(%eax),%ecx
84004e67:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e6a:	8b 12                	mov    (%edx),%edx
84004e6c:	89 10                	mov    %edx,(%eax)
84004e6e:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
84004e72:	76 2c                	jbe    84004ea0 <_realloc_r+0x643>
84004e74:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e77:	8d 42 04             	lea    0x4(%edx),%eax
84004e7a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e7d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e80:	8d 48 04             	lea    0x4(%eax),%ecx
84004e83:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e86:	8b 12                	mov    (%edx),%edx
84004e88:	89 10                	mov    %edx,(%eax)
84004e8a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e8d:	8d 42 04             	lea    0x4(%edx),%eax
84004e90:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e93:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e96:	8d 48 04             	lea    0x4(%eax),%ecx
84004e99:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e9c:	8b 12                	mov    (%edx),%edx
84004e9e:	89 10                	mov    %edx,(%eax)
84004ea0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004ea3:	8d 42 04             	lea    0x4(%edx),%eax
84004ea6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004ea9:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004eac:	8d 48 04             	lea    0x4(%eax),%ecx
84004eaf:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004eb2:	8b 12                	mov    (%edx),%edx
84004eb4:	89 10                	mov    %edx,(%eax)
84004eb6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004eb9:	8d 42 04             	lea    0x4(%edx),%eax
84004ebc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004ebf:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004ec2:	8d 48 04             	lea    0x4(%eax),%ecx
84004ec5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004ec8:	8b 12                	mov    (%edx),%edx
84004eca:	89 10                	mov    %edx,(%eax)
84004ecc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84004ecf:	8b 10                	mov    (%eax),%edx
84004ed1:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004ed4:	89 10                	mov    %edx,(%eax)
84004ed6:	e9 ad 01 00 00       	jmp    84005088 <_realloc_r+0x82b>
84004edb:	83 ec 04             	sub    $0x4,%esp
84004ede:	ff 75 9c             	push   -0x64(%ebp)
84004ee1:	ff 75 0c             	push   0xc(%ebp)
84004ee4:	ff 75 a8             	push   -0x58(%ebp)
84004ee7:	e8 e4 f8 ff ff       	call   840047d0 <memmove>
84004eec:	83 c4 10             	add    $0x10,%esp
84004eef:	e9 94 01 00 00       	jmp    84005088 <_realloc_r+0x82b>
84004ef4:	83 ec 08             	sub    $0x8,%esp
84004ef7:	ff 75 10             	push   0x10(%ebp)
84004efa:	ff 75 08             	push   0x8(%ebp)
84004efd:	e8 33 cd ff ff       	call   84001c35 <_malloc_r>
84004f02:	83 c4 10             	add    $0x10,%esp
84004f05:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004f08:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
84004f0c:	75 18                	jne    84004f26 <_realloc_r+0x6c9>
84004f0e:	83 ec 0c             	sub    $0xc,%esp
84004f11:	ff 75 08             	push   0x8(%ebp)
84004f14:	e8 cc d5 ff ff       	call   840024e5 <__malloc_unlock>
84004f19:	83 c4 10             	add    $0x10,%esp
84004f1c:	b8 00 00 00 00       	mov    $0x0,%eax
84004f21:	e9 0f 02 00 00       	jmp    84005135 <_realloc_r+0x8d8>
84004f26:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004f29:	83 e8 08             	sub    $0x8,%eax
84004f2c:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004f2f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f32:	8b 40 04             	mov    0x4(%eax),%eax
84004f35:	83 e0 fe             	and    $0xfffffffe,%eax
84004f38:	89 c2                	mov    %eax,%edx
84004f3a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f3d:	01 d0                	add    %edx,%eax
84004f3f:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84004f42:	75 17                	jne    84004f5b <_realloc_r+0x6fe>
84004f44:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004f47:	8b 40 04             	mov    0x4(%eax),%eax
84004f4a:	83 e0 fc             	and    $0xfffffffc,%eax
84004f4d:	01 45 f0             	add    %eax,-0x10(%ebp)
84004f50:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f53:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004f56:	e9 2d 01 00 00       	jmp    84005088 <_realloc_r+0x82b>
84004f5b:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004f5e:	83 e8 04             	sub    $0x4,%eax
84004f61:	89 45 98             	mov    %eax,-0x68(%ebp)
84004f64:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
84004f68:	0f 87 de 00 00 00    	ja     8400504c <_realloc_r+0x7ef>
84004f6e:	8b 45 0c             	mov    0xc(%ebp),%eax
84004f71:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f74:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004f77:	89 45 c8             	mov    %eax,-0x38(%ebp)
84004f7a:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
84004f7e:	0f 86 90 00 00 00    	jbe    84005014 <_realloc_r+0x7b7>
84004f84:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004f87:	8d 42 04             	lea    0x4(%edx),%eax
84004f8a:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f8d:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004f90:	8d 48 04             	lea    0x4(%eax),%ecx
84004f93:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004f96:	8b 12                	mov    (%edx),%edx
84004f98:	89 10                	mov    %edx,(%eax)
84004f9a:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004f9d:	8d 42 04             	lea    0x4(%edx),%eax
84004fa0:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fa3:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fa6:	8d 48 04             	lea    0x4(%eax),%ecx
84004fa9:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fac:	8b 12                	mov    (%edx),%edx
84004fae:	89 10                	mov    %edx,(%eax)
84004fb0:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
84004fb4:	76 5e                	jbe    84005014 <_realloc_r+0x7b7>
84004fb6:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fb9:	8d 42 04             	lea    0x4(%edx),%eax
84004fbc:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fbf:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fc2:	8d 48 04             	lea    0x4(%eax),%ecx
84004fc5:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fc8:	8b 12                	mov    (%edx),%edx
84004fca:	89 10                	mov    %edx,(%eax)
84004fcc:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fcf:	8d 42 04             	lea    0x4(%edx),%eax
84004fd2:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fd5:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fd8:	8d 48 04             	lea    0x4(%eax),%ecx
84004fdb:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fde:	8b 12                	mov    (%edx),%edx
84004fe0:	89 10                	mov    %edx,(%eax)
84004fe2:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
84004fe6:	76 2c                	jbe    84005014 <_realloc_r+0x7b7>
84004fe8:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004feb:	8d 42 04             	lea    0x4(%edx),%eax
84004fee:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004ff1:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004ff4:	8d 48 04             	lea    0x4(%eax),%ecx
84004ff7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004ffa:	8b 12                	mov    (%edx),%edx
84004ffc:	89 10                	mov    %edx,(%eax)
84004ffe:	8b 55 cc             	mov    -0x34(%ebp),%edx
84005001:	8d 42 04             	lea    0x4(%edx),%eax
84005004:	89 45 cc             	mov    %eax,-0x34(%ebp)
84005007:	8b 45 c8             	mov    -0x38(%ebp),%eax
8400500a:	8d 48 04             	lea    0x4(%eax),%ecx
8400500d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84005010:	8b 12                	mov    (%edx),%edx
84005012:	89 10                	mov    %edx,(%eax)
84005014:	8b 55 cc             	mov    -0x34(%ebp),%edx
84005017:	8d 42 04             	lea    0x4(%edx),%eax
8400501a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8400501d:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005020:	8d 48 04             	lea    0x4(%eax),%ecx
84005023:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84005026:	8b 12                	mov    (%edx),%edx
84005028:	89 10                	mov    %edx,(%eax)
8400502a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8400502d:	8d 42 04             	lea    0x4(%edx),%eax
84005030:	89 45 cc             	mov    %eax,-0x34(%ebp)
84005033:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005036:	8d 48 04             	lea    0x4(%eax),%ecx
84005039:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8400503c:	8b 12                	mov    (%edx),%edx
8400503e:	89 10                	mov    %edx,(%eax)
84005040:	8b 45 cc             	mov    -0x34(%ebp),%eax
84005043:	8b 10                	mov    (%eax),%edx
84005045:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005048:	89 10                	mov    %edx,(%eax)
8400504a:	eb 14                	jmp    84005060 <_realloc_r+0x803>
8400504c:	83 ec 04             	sub    $0x4,%esp
8400504f:	ff 75 98             	push   -0x68(%ebp)
84005052:	ff 75 0c             	push   0xc(%ebp)
84005055:	ff 75 a8             	push   -0x58(%ebp)
84005058:	e8 73 f7 ff ff       	call   840047d0 <memmove>
8400505d:	83 c4 10             	add    $0x10,%esp
84005060:	83 ec 08             	sub    $0x8,%esp
84005063:	ff 75 0c             	push   0xc(%ebp)
84005066:	ff 75 08             	push   0x8(%ebp)
84005069:	e8 a0 c2 ff ff       	call   8400130e <_free_r>
8400506e:	83 c4 10             	add    $0x10,%esp
84005071:	83 ec 0c             	sub    $0xc,%esp
84005074:	ff 75 08             	push   0x8(%ebp)
84005077:	e8 69 d4 ff ff       	call   840024e5 <__malloc_unlock>
8400507c:	83 c4 10             	add    $0x10,%esp
8400507f:	8b 45 a8             	mov    -0x58(%ebp),%eax
84005082:	e9 ae 00 00 00       	jmp    84005135 <_realloc_r+0x8d8>
84005087:	90                   	nop
84005088:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400508b:	2b 45 bc             	sub    -0x44(%ebp),%eax
8400508e:	89 45 94             	mov    %eax,-0x6c(%ebp)
84005091:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
84005095:	76 5d                	jbe    840050f4 <_realloc_r+0x897>
84005097:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400509a:	8b 45 bc             	mov    -0x44(%ebp),%eax
8400509d:	01 d0                	add    %edx,%eax
8400509f:	89 45 90             	mov    %eax,-0x70(%ebp)
840050a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050a5:	8b 40 04             	mov    0x4(%eax),%eax
840050a8:	83 e0 01             	and    $0x1,%eax
840050ab:	0b 45 bc             	or     -0x44(%ebp),%eax
840050ae:	89 c2                	mov    %eax,%edx
840050b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050b3:	89 50 04             	mov    %edx,0x4(%eax)
840050b6:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050b9:	83 c8 01             	or     $0x1,%eax
840050bc:	89 c2                	mov    %eax,%edx
840050be:	8b 45 90             	mov    -0x70(%ebp),%eax
840050c1:	89 50 04             	mov    %edx,0x4(%eax)
840050c4:	8b 55 90             	mov    -0x70(%ebp),%edx
840050c7:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050ca:	01 d0                	add    %edx,%eax
840050cc:	8b 50 04             	mov    0x4(%eax),%edx
840050cf:	8b 4d 90             	mov    -0x70(%ebp),%ecx
840050d2:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050d5:	01 c8                	add    %ecx,%eax
840050d7:	83 ca 01             	or     $0x1,%edx
840050da:	89 50 04             	mov    %edx,0x4(%eax)
840050dd:	8b 45 90             	mov    -0x70(%ebp),%eax
840050e0:	83 c0 08             	add    $0x8,%eax
840050e3:	83 ec 08             	sub    $0x8,%esp
840050e6:	50                   	push   %eax
840050e7:	ff 75 08             	push   0x8(%ebp)
840050ea:	e8 1f c2 ff ff       	call   8400130e <_free_r>
840050ef:	83 c4 10             	add    $0x10,%esp
840050f2:	eb 2d                	jmp    84005121 <_realloc_r+0x8c4>
840050f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050f7:	8b 40 04             	mov    0x4(%eax),%eax
840050fa:	83 e0 01             	and    $0x1,%eax
840050fd:	0b 45 f0             	or     -0x10(%ebp),%eax
84005100:	89 c2                	mov    %eax,%edx
84005102:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005105:	89 50 04             	mov    %edx,0x4(%eax)
84005108:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400510b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400510e:	01 d0                	add    %edx,%eax
84005110:	8b 50 04             	mov    0x4(%eax),%edx
84005113:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84005116:	8b 45 f0             	mov    -0x10(%ebp),%eax
84005119:	01 c8                	add    %ecx,%eax
8400511b:	83 ca 01             	or     $0x1,%edx
8400511e:	89 50 04             	mov    %edx,0x4(%eax)
84005121:	83 ec 0c             	sub    $0xc,%esp
84005124:	ff 75 08             	push   0x8(%ebp)
84005127:	e8 b9 d3 ff ff       	call   840024e5 <__malloc_unlock>
8400512c:	83 c4 10             	add    $0x10,%esp
8400512f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005132:	83 c0 08             	add    $0x8,%eax
84005135:	c9                   	leave  
84005136:	c3                   	ret    

84005137 <lflush>:
84005137:	55                   	push   %ebp
84005138:	89 e5                	mov    %esp,%ebp
8400513a:	83 ec 08             	sub    $0x8,%esp
8400513d:	8b 45 08             	mov    0x8(%ebp),%eax
84005140:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84005144:	98                   	cwtl   
84005145:	83 e0 09             	and    $0x9,%eax
84005148:	83 f8 09             	cmp    $0x9,%eax
8400514b:	75 10                	jne    8400515d <lflush+0x26>
8400514d:	83 ec 0c             	sub    $0xc,%esp
84005150:	ff 75 08             	push   0x8(%ebp)
84005153:	e8 7b bd ff ff       	call   84000ed3 <fflush>
84005158:	83 c4 10             	add    $0x10,%esp
8400515b:	eb 05                	jmp    84005162 <lflush+0x2b>
8400515d:	b8 00 00 00 00       	mov    $0x0,%eax
84005162:	c9                   	leave  
84005163:	c3                   	ret    

84005164 <__srefill_r>:
84005164:	55                   	push   %ebp
84005165:	89 e5                	mov    %esp,%ebp
84005167:	56                   	push   %esi
84005168:	53                   	push   %ebx
84005169:	83 ec 10             	sub    $0x10,%esp
8400516c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400516f:	8b 45 08             	mov    0x8(%ebp),%eax
84005172:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005175:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84005179:	74 18                	je     84005193 <__srefill_r+0x2f>
8400517b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400517e:	8b 40 38             	mov    0x38(%eax),%eax
84005181:	85 c0                	test   %eax,%eax
84005183:	75 0e                	jne    84005193 <__srefill_r+0x2f>
84005185:	83 ec 0c             	sub    $0xc,%esp
84005188:	ff 75 f4             	push   -0xc(%ebp)
8400518b:	e8 71 c0 ff ff       	call   84001201 <__sinit>
84005190:	83 c4 10             	add    $0x10,%esp
84005193:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005197:	98                   	cwtl   
84005198:	25 00 20 00 00       	and    $0x2000,%eax
8400519d:	85 c0                	test   %eax,%eax
8400519f:	75 14                	jne    840051b5 <__srefill_r+0x51>
840051a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051a5:	80 cc 20             	or     $0x20,%ah
840051a8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840051ac:	8b 43 64             	mov    0x64(%ebx),%eax
840051af:	80 e4 df             	and    $0xdf,%ah
840051b2:	89 43 64             	mov    %eax,0x64(%ebx)
840051b5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
840051bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051c0:	98                   	cwtl   
840051c1:	83 e0 20             	and    $0x20,%eax
840051c4:	85 c0                	test   %eax,%eax
840051c6:	74 0a                	je     840051d2 <__srefill_r+0x6e>
840051c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840051cd:	e9 8c 01 00 00       	jmp    8400535e <__srefill_r+0x1fa>
840051d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051d6:	98                   	cwtl   
840051d7:	83 e0 04             	and    $0x4,%eax
840051da:	85 c0                	test   %eax,%eax
840051dc:	75 79                	jne    84005257 <__srefill_r+0xf3>
840051de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051e2:	98                   	cwtl   
840051e3:	83 e0 10             	and    $0x10,%eax
840051e6:	85 c0                	test   %eax,%eax
840051e8:	75 1e                	jne    84005208 <__srefill_r+0xa4>
840051ea:	8b 45 08             	mov    0x8(%ebp),%eax
840051ed:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
840051f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051f7:	83 c8 40             	or     $0x40,%eax
840051fa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840051fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84005203:	e9 56 01 00 00       	jmp    8400535e <__srefill_r+0x1fa>
84005208:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400520c:	98                   	cwtl   
8400520d:	83 e0 08             	and    $0x8,%eax
84005210:	85 c0                	test   %eax,%eax
84005212:	74 36                	je     8400524a <__srefill_r+0xe6>
84005214:	83 ec 08             	sub    $0x8,%esp
84005217:	53                   	push   %ebx
84005218:	ff 75 08             	push   0x8(%ebp)
8400521b:	e8 5b bc ff ff       	call   84000e7b <_fflush_r>
84005220:	83 c4 10             	add    $0x10,%esp
84005223:	85 c0                	test   %eax,%eax
84005225:	74 0a                	je     84005231 <__srefill_r+0xcd>
84005227:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400522c:	e9 2d 01 00 00       	jmp    8400535e <__srefill_r+0x1fa>
84005231:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005235:	83 e0 f7             	and    $0xfffffff7,%eax
84005238:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400523c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84005243:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8400524a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400524e:	83 c8 04             	or     $0x4,%eax
84005251:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84005255:	eb 46                	jmp    8400529d <__srefill_r+0x139>
84005257:	8b 43 30             	mov    0x30(%ebx),%eax
8400525a:	85 c0                	test   %eax,%eax
8400525c:	74 3f                	je     8400529d <__srefill_r+0x139>
8400525e:	8b 53 30             	mov    0x30(%ebx),%edx
84005261:	8d 43 40             	lea    0x40(%ebx),%eax
84005264:	39 c2                	cmp    %eax,%edx
84005266:	74 12                	je     8400527a <__srefill_r+0x116>
84005268:	8b 43 30             	mov    0x30(%ebx),%eax
8400526b:	83 ec 08             	sub    $0x8,%esp
8400526e:	50                   	push   %eax
8400526f:	ff 75 08             	push   0x8(%ebp)
84005272:	e8 97 c0 ff ff       	call   8400130e <_free_r>
84005277:	83 c4 10             	add    $0x10,%esp
8400527a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84005281:	8b 43 3c             	mov    0x3c(%ebx),%eax
84005284:	89 43 04             	mov    %eax,0x4(%ebx)
84005287:	8b 43 04             	mov    0x4(%ebx),%eax
8400528a:	85 c0                	test   %eax,%eax
8400528c:	74 0f                	je     8400529d <__srefill_r+0x139>
8400528e:	8b 43 38             	mov    0x38(%ebx),%eax
84005291:	89 03                	mov    %eax,(%ebx)
84005293:	b8 00 00 00 00       	mov    $0x0,%eax
84005298:	e9 c1 00 00 00       	jmp    8400535e <__srefill_r+0x1fa>
8400529d:	8b 43 10             	mov    0x10(%ebx),%eax
840052a0:	85 c0                	test   %eax,%eax
840052a2:	75 0f                	jne    840052b3 <__srefill_r+0x14f>
840052a4:	83 ec 08             	sub    $0x8,%esp
840052a7:	53                   	push   %ebx
840052a8:	ff 75 08             	push   0x8(%ebp)
840052ab:	e8 6d da ff ff       	call   84002d1d <__smakebuf_r>
840052b0:	83 c4 10             	add    $0x10,%esp
840052b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052b7:	98                   	cwtl   
840052b8:	83 e0 03             	and    $0x3,%eax
840052bb:	85 c0                	test   %eax,%eax
840052bd:	74 48                	je     84005307 <__srefill_r+0x1a3>
840052bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052c3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
840052c7:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
840052cd:	a1 38 56 00 84       	mov    0x84005638,%eax
840052d2:	83 ec 08             	sub    $0x8,%esp
840052d5:	68 37 51 00 84       	push   $0x84005137
840052da:	50                   	push   %eax
840052db:	e8 6a c5 ff ff       	call   8400184a <_fwalk>
840052e0:	83 c4 10             	add    $0x10,%esp
840052e3:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
840052e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840052eb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052ef:	98                   	cwtl   
840052f0:	83 e0 09             	and    $0x9,%eax
840052f3:	83 f8 09             	cmp    $0x9,%eax
840052f6:	75 0f                	jne    84005307 <__srefill_r+0x1a3>
840052f8:	83 ec 08             	sub    $0x8,%esp
840052fb:	53                   	push   %ebx
840052fc:	ff 75 08             	push   0x8(%ebp)
840052ff:	e8 51 b9 ff ff       	call   84000c55 <__sflush_r>
84005304:	83 c4 10             	add    $0x10,%esp
84005307:	8b 43 10             	mov    0x10(%ebx),%eax
8400530a:	89 03                	mov    %eax,(%ebx)
8400530c:	8b 43 20             	mov    0x20(%ebx),%eax
8400530f:	8b 73 14             	mov    0x14(%ebx),%esi
84005312:	8b 0b                	mov    (%ebx),%ecx
84005314:	8b 53 1c             	mov    0x1c(%ebx),%edx
84005317:	56                   	push   %esi
84005318:	51                   	push   %ecx
84005319:	52                   	push   %edx
8400531a:	ff 75 08             	push   0x8(%ebp)
8400531d:	ff d0                	call   *%eax
8400531f:	83 c4 10             	add    $0x10,%esp
84005322:	89 43 04             	mov    %eax,0x4(%ebx)
84005325:	8b 43 04             	mov    0x4(%ebx),%eax
84005328:	85 c0                	test   %eax,%eax
8400532a:	7f 2d                	jg     84005359 <__srefill_r+0x1f5>
8400532c:	8b 43 04             	mov    0x4(%ebx),%eax
8400532f:	85 c0                	test   %eax,%eax
84005331:	75 0d                	jne    84005340 <__srefill_r+0x1dc>
84005333:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005337:	83 c8 20             	or     $0x20,%eax
8400533a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400533e:	eb 12                	jmp    84005352 <__srefill_r+0x1ee>
84005340:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84005347:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400534b:	83 c8 40             	or     $0x40,%eax
8400534e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84005352:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84005357:	eb 05                	jmp    8400535e <__srefill_r+0x1fa>
84005359:	b8 00 00 00 00       	mov    $0x0,%eax
8400535e:	8d 65 f8             	lea    -0x8(%ebp),%esp
84005361:	5b                   	pop    %ebx
84005362:	5e                   	pop    %esi
84005363:	5d                   	pop    %ebp
84005364:	c3                   	ret    

84005365 <strcmp>:
84005365:	55                   	push   %ebp
84005366:	89 e5                	mov    %esp,%ebp
84005368:	83 ec 10             	sub    $0x10,%esp
8400536b:	8b 55 08             	mov    0x8(%ebp),%edx
8400536e:	8b 45 0c             	mov    0xc(%ebp),%eax
84005371:	09 d0                	or     %edx,%eax
84005373:	83 e0 03             	and    $0x3,%eax
84005376:	85 c0                	test   %eax,%eax
84005378:	75 5e                	jne    840053d8 <strcmp+0x73>
8400537a:	8b 45 08             	mov    0x8(%ebp),%eax
8400537d:	89 45 fc             	mov    %eax,-0x4(%ebp)
84005380:	8b 45 0c             	mov    0xc(%ebp),%eax
84005383:	89 45 f8             	mov    %eax,-0x8(%ebp)
84005386:	eb 2c                	jmp    840053b4 <strcmp+0x4f>
84005388:	8b 45 fc             	mov    -0x4(%ebp),%eax
8400538b:	8b 00                	mov    (%eax),%eax
8400538d:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
84005393:	8b 45 fc             	mov    -0x4(%ebp),%eax
84005396:	8b 00                	mov    (%eax),%eax
84005398:	f7 d0                	not    %eax
8400539a:	21 d0                	and    %edx,%eax
8400539c:	25 80 80 80 80       	and    $0x80808080,%eax
840053a1:	85 c0                	test   %eax,%eax
840053a3:	74 07                	je     840053ac <strcmp+0x47>
840053a5:	b8 00 00 00 00       	mov    $0x0,%eax
840053aa:	eb 5c                	jmp    84005408 <strcmp+0xa3>
840053ac:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
840053b0:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
840053b4:	8b 45 fc             	mov    -0x4(%ebp),%eax
840053b7:	8b 10                	mov    (%eax),%edx
840053b9:	8b 45 f8             	mov    -0x8(%ebp),%eax
840053bc:	8b 00                	mov    (%eax),%eax
840053be:	39 c2                	cmp    %eax,%edx
840053c0:	74 c6                	je     84005388 <strcmp+0x23>
840053c2:	8b 45 fc             	mov    -0x4(%ebp),%eax
840053c5:	89 45 08             	mov    %eax,0x8(%ebp)
840053c8:	8b 45 f8             	mov    -0x8(%ebp),%eax
840053cb:	89 45 0c             	mov    %eax,0xc(%ebp)
840053ce:	eb 08                	jmp    840053d8 <strcmp+0x73>
840053d0:	83 45 08 01          	addl   $0x1,0x8(%ebp)
840053d4:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
840053d8:	8b 45 08             	mov    0x8(%ebp),%eax
840053db:	0f b6 00             	movzbl (%eax),%eax
840053de:	84 c0                	test   %al,%al
840053e0:	74 10                	je     840053f2 <strcmp+0x8d>
840053e2:	8b 45 08             	mov    0x8(%ebp),%eax
840053e5:	0f b6 10             	movzbl (%eax),%edx
840053e8:	8b 45 0c             	mov    0xc(%ebp),%eax
840053eb:	0f b6 00             	movzbl (%eax),%eax
840053ee:	38 c2                	cmp    %al,%dl
840053f0:	74 de                	je     840053d0 <strcmp+0x6b>
840053f2:	8b 45 08             	mov    0x8(%ebp),%eax
840053f5:	0f b6 00             	movzbl (%eax),%eax
840053f8:	0f b6 d0             	movzbl %al,%edx
840053fb:	8b 45 0c             	mov    0xc(%ebp),%eax
840053fe:	0f b6 00             	movzbl (%eax),%eax
84005401:	0f b6 c8             	movzbl %al,%ecx
84005404:	89 d0                	mov    %edx,%eax
84005406:	29 c8                	sub    %ecx,%eax
84005408:	c9                   	leave  
84005409:	c3                   	ret    

8400540a <__get_global_locale>:
8400540a:	55                   	push   %ebp
8400540b:	89 e5                	mov    %esp,%ebp
8400540d:	b8 20 62 00 84       	mov    $0x84006220,%eax
84005412:	5d                   	pop    %ebp
84005413:	c3                   	ret    

84005414 <__get_current_locale>:
84005414:	55                   	push   %ebp
84005415:	89 e5                	mov    %esp,%ebp
84005417:	e8 ee ff ff ff       	call   8400540a <__get_global_locale>
8400541c:	5d                   	pop    %ebp
8400541d:	c3                   	ret    

8400541e <_wcrtomb_r>:
8400541e:	55                   	push   %ebp
8400541f:	89 e5                	mov    %esp,%ebp
84005421:	83 ec 18             	sub    $0x18,%esp
84005424:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8400542b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400542f:	75 21                	jne    84005452 <_wcrtomb_r+0x34>
84005431:	e8 de ff ff ff       	call   84005414 <__get_current_locale>
84005436:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400543c:	ff 75 14             	push   0x14(%ebp)
8400543f:	6a 00                	push   $0x0
84005441:	8d 55 ea             	lea    -0x16(%ebp),%edx
84005444:	52                   	push   %edx
84005445:	ff 75 08             	push   0x8(%ebp)
84005448:	ff d0                	call   *%eax
8400544a:	83 c4 10             	add    $0x10,%esp
8400544d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005450:	eb 1f                	jmp    84005471 <_wcrtomb_r+0x53>
84005452:	e8 bd ff ff ff       	call   84005414 <__get_current_locale>
84005457:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400545d:	ff 75 14             	push   0x14(%ebp)
84005460:	ff 75 10             	push   0x10(%ebp)
84005463:	ff 75 0c             	push   0xc(%ebp)
84005466:	ff 75 08             	push   0x8(%ebp)
84005469:	ff d0                	call   *%eax
8400546b:	83 c4 10             	add    $0x10,%esp
8400546e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005471:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84005475:	75 19                	jne    84005490 <_wcrtomb_r+0x72>
84005477:	8b 45 14             	mov    0x14(%ebp),%eax
8400547a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84005480:	8b 45 08             	mov    0x8(%ebp),%eax
84005483:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005489:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400548e:	eb 03                	jmp    84005493 <_wcrtomb_r+0x75>
84005490:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005493:	c9                   	leave  
84005494:	c3                   	ret    

84005495 <wcrtomb>:
84005495:	55                   	push   %ebp
84005496:	89 e5                	mov    %esp,%ebp
84005498:	83 ec 28             	sub    $0x28,%esp
8400549b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
840054a2:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
840054a7:	89 45 f0             	mov    %eax,-0x10(%ebp)
840054aa:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
840054ae:	75 21                	jne    840054d1 <wcrtomb+0x3c>
840054b0:	e8 5f ff ff ff       	call   84005414 <__get_current_locale>
840054b5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
840054bb:	ff 75 10             	push   0x10(%ebp)
840054be:	6a 00                	push   $0x0
840054c0:	8d 55 e6             	lea    -0x1a(%ebp),%edx
840054c3:	52                   	push   %edx
840054c4:	ff 75 f0             	push   -0x10(%ebp)
840054c7:	ff d0                	call   *%eax
840054c9:	83 c4 10             	add    $0x10,%esp
840054cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
840054cf:	eb 1f                	jmp    840054f0 <wcrtomb+0x5b>
840054d1:	e8 3e ff ff ff       	call   84005414 <__get_current_locale>
840054d6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
840054dc:	ff 75 10             	push   0x10(%ebp)
840054df:	ff 75 0c             	push   0xc(%ebp)
840054e2:	ff 75 08             	push   0x8(%ebp)
840054e5:	ff 75 f0             	push   -0x10(%ebp)
840054e8:	ff d0                	call   *%eax
840054ea:	83 c4 10             	add    $0x10,%esp
840054ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
840054f0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840054f4:	75 19                	jne    8400550f <wcrtomb+0x7a>
840054f6:	8b 45 10             	mov    0x10(%ebp),%eax
840054f9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
840054ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
84005502:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005508:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400550d:	eb 03                	jmp    84005512 <wcrtomb+0x7d>
8400550f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005512:	c9                   	leave  
84005513:	c3                   	ret    

84005514 <__get_global_locale>:
84005514:	55                   	push   %ebp
84005515:	89 e5                	mov    %esp,%ebp
84005517:	b8 20 62 00 84       	mov    $0x84006220,%eax
8400551c:	5d                   	pop    %ebp
8400551d:	c3                   	ret    

8400551e <__get_current_locale>:
8400551e:	55                   	push   %ebp
8400551f:	89 e5                	mov    %esp,%ebp
84005521:	e8 ee ff ff ff       	call   84005514 <__get_global_locale>
84005526:	5d                   	pop    %ebp
84005527:	c3                   	ret    

84005528 <_wctomb_r>:
84005528:	55                   	push   %ebp
84005529:	89 e5                	mov    %esp,%ebp
8400552b:	83 ec 08             	sub    $0x8,%esp
8400552e:	e8 eb ff ff ff       	call   8400551e <__get_current_locale>
84005533:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
84005539:	ff 75 14             	push   0x14(%ebp)
8400553c:	ff 75 10             	push   0x10(%ebp)
8400553f:	ff 75 0c             	push   0xc(%ebp)
84005542:	ff 75 08             	push   0x8(%ebp)
84005545:	ff d0                	call   *%eax
84005547:	83 c4 10             	add    $0x10,%esp
8400554a:	c9                   	leave  
8400554b:	c3                   	ret    

8400554c <__ascii_wctomb>:
8400554c:	55                   	push   %ebp
8400554d:	89 e5                	mov    %esp,%ebp
8400554f:	83 ec 10             	sub    $0x10,%esp
84005552:	8b 45 10             	mov    0x10(%ebp),%eax
84005555:	89 45 fc             	mov    %eax,-0x4(%ebp)
84005558:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400555c:	75 07                	jne    84005565 <__ascii_wctomb+0x19>
8400555e:	b8 00 00 00 00       	mov    $0x0,%eax
84005563:	eb 28                	jmp    8400558d <__ascii_wctomb+0x41>
84005565:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8400556c:	76 10                	jbe    8400557e <__ascii_wctomb+0x32>
8400556e:	8b 45 08             	mov    0x8(%ebp),%eax
84005571:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005577:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400557c:	eb 0f                	jmp    8400558d <__ascii_wctomb+0x41>
8400557e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84005581:	89 c2                	mov    %eax,%edx
84005583:	8b 45 0c             	mov    0xc(%ebp),%eax
84005586:	88 10                	mov    %dl,(%eax)
84005588:	b8 01 00 00 00       	mov    $0x1,%eax
8400558d:	c9                   	leave  
8400558e:	c3                   	ret    
