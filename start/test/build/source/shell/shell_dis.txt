
/home/hsa/x86-code/start/test/build/source/shell/shell.elf:     file format elf32-i386
/home/hsa/x86-code/start/test/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000b03

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00009690 memsz 0x00009c40 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000856a  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000071d  81008580  81008580  00009580  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008ca0  81008ca0  00009ca0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000005a0  810096a0  810096a0  0000a690  2**5
                  ALLOC
  4 .debug_info   0002a454  00000000  00000000  0000a690  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00009874  00000000  00000000  00034ae4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000009a8  00000000  00000000  0003e358  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 00000070  00000000  00000000  0003ed00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00005e8a  00000000  00000000  0003ed70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00001779  00000000  00000000  00044bfa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 00001750  00000000  00000000  00046373  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      0000003d  00000000  00000000  00047ac3  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001ee8  00000000  00000000  00047b00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
810096a0 l     O .bss	0000040c cli
81008ca0 l     O .data	00000004 promot
81000000 l     F .text	00000033 show_promot
81000033 l     F .text	00000042 do_help
81000075 l     F .text	00000037 do_clear
810000ac l     F .text	000001a8 do_echo
81000254 l     F .text	00000010 do_exit
81000264 l     F .text	000002a3 do_less
81000507 l     F .text	000000aa do_ls
810005b1 l     F .text	00000107 do_cp
810006b8 l     F .text	0000007c do_remove
810087c0 l     O .rodata	00000060 cmd_list
81000734 l     F .text	00000048 cli_init
8100077c l     F .text	00000043 find_builtin
810007bf l     F .text	00000042 run_builtin
81000801 l     F .text	00000081 find_exec_path
81009ac0 l     O .bss	000000ff path.0
81000882 l     F .text	000000b6 run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
81000b51 l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810015f8 l     F .text	000000ad std
810016a5 l     F .text	0000001b stdin_init
810016c0 l     F .text	0000001b stdout_init
810016db l     F .text	0000001b stderr_init
81009bc0 l     O .bss	00000004 __sfp_recursive_mutex
81009bc4 l     O .bss	00000004 __sinit_recursive_mutex
8100199e l     F .text	0000000a __fp_lock
810019a8 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81009bd0 l     O .bss	00000004 optwhere
81009bd4 l     O .bss	00000004 permute_from
81009bd8 l     O .bss	00000004 num_nonopts
81002f7d l     F .text	0000007b reverse_argv_elements
81002ff8 l     F .text	00000036 permute
8100302e l     F .text	00000031 is_option
8100305f l     F .text	00000059 read_globals
810030b8 l     F .text	00000052 write_globals
8100310a l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81008cc0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003f2e l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81004a7d l       .text	00000000 L20
81004a34 l       .text	00000000 L5
81004a7a l       .text	00000000 L15
81004a40 l       .text	00000000 L8
81004a61 l       .text	00000000 L9
81004a70 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
81004acf l       .text	00000000 L4
81004ac1 l       .text	00000000 BYTECMP
81004abc l       .text	00000000 L5
81004ac3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81009c28 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004d1d l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
8100639b l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
81006b0b l       .text	00000000 L25
81006ab2 l       .text	00000000 L5
81006afe l       .text	00000000 L14
81006b04 l       .text	00000000 L19
81006ac3 l       .text	00000000 L10
81006af0 l       .text	00000000 L9
81006af3 l       .text	00000000 L15
81006b3e l       .text	00000000 L26
81006b41 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81006c46 l       .text	00000000 L5
81006c7e l       .text	00000000 L15
81006c50 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strlwr.c
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81006de4 l     F .text	0000000a __locale_ctype_ptr_l
81006dee l     F .text	0000000a __get_global_locale
81006df8 l     F .text	0000000a __get_current_locale
81006e02 l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81009c30 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputwc.c
810075c8 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81009510 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81007907 l     F .text	0000000a __get_global_locale
81007911 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810079f3 l     F .text	0000000a __get_global_locale
810079fd l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
810081ac l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810083d9 l     F .text	0000000a __get_global_locale
810083e3 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810084e3 l     F .text	0000000a __get_global_locale
810084ed l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81009c38 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81009c3c l     O .bss	00000004 __env_recursive_mutex
810078c7 g     F .text	00000040 _isatty_r
81006204 g     F .text	00000037 cleanup_glue
81005838 g     F .text	000000d6 _puts_r
810079ad g     F .text	00000046 _lseek_r
81000c55 g     F .text	0000001b yield
81006895 g     F .text	00000055 _siprintf_r
8100747a g     F .text	000000ba __sflags
81000e0b g     F .text	00000033 ioctl
81006dca g     F .text	0000001a strtok_r
81005803 g     F .text	00000035 printf
810083ed g     F .text	00000077 _wcrtomb_r
810069eb g     F .text	0000004a __sseek
810018ed g     F .text	00000099 __sinit
81007047 g     F .text	00000112 __swbuf_r
8100791b g     F .text	0000005f _setlocale_r
810016f6 g     F .text	0000006f __sfmoreglue
81004c3b g     F .text	00000006 __malloc_unlock
81006c89 g     F .text	00000058 strlwr
81004b20 g       .text	00000000 memmove
81003c66 g     F .text	00000049 getopt_long
810018d3 g     F .text	0000001a _cleanup
81006d0a g     F .text	000000c0 __strtok_r
81007470 g     F .text	0000000a __errno
8100779d g     F .text	00000020 getenv
810028ec g     F .text	00000043 _fstat_r
81009c2c g     O .bss	00000004 errno
8100662c g     F .text	0000001d __srget
81006986 g     F .text	0000000a __seofread
81000c28 g     F .text	0000002d execve
81000bcb g     F .text	0000001b getpid
810015d9 g     F .text	0000001f fgets
81004ad8 g       .text	00000000 memcpy
81006689 g     F .text	0000020c setvbuf
810018b2 g     F .text	00000021 _cleanup_r
81007e72 g     F .text	0000033a _svfprintf_r
8100590e g     F .text	0000001c puts
81003ef5 g     F .text	0000001c malloc
810057d6 g     F .text	0000002d _printf_r
81000da8 g     F .text	00000021 isatty
81003d6b g     F .text	0000000a __getreent
81009bc8 g     O .bss	00000004 optarg
81009be0 g     O .bss	00000004 __malloc_top_pad
810096a0 g       .bss	00000000 __bss_start__
8100292f g     F .text	0000049e __sfvwrite_r
81006649 g     F .text	00000040 _sbrk_r
81008ca4 g     O .data	00000004 opterr
81000ea9 g     F .text	00000040 readdir
810082b0 g     F .text	00000046 _read_r
81000fb6 g     F .text	00000107 _fclose_r
81001358 g     F .text	00000039 fflush
81009be4 g     O .bss	00000004 __malloc_max_sbrked_mem
81001391 g     F .text	00000071 _fgetc_r
81000d54 g     F .text	0000002d lseek
81008924 g     O .rodata	00000004 _global_impure_ptr
8100592a g     F .text	000008da _realloc_r
81006ff9 g     F .text	00000025 strtol_l
810076de g     F .text	00000057 _fputwc_r
810019b2 g     F .text	00000024 __fp_lock_all
8100701e g     F .text	00000029 strtol
8100241b g     F .text	000004b1 _fseeko_r
8100623b g     F .text	00000160 _reclaim_reent
81007534 g     F .text	00000046 _fputc_r
81000d06 g     F .text	0000002d write
81008212 g     F .text	0000004b _putc_r
8100968c g     O .data	00000004 environ
81000d81 g     F .text	00000027 fstat
81001b17 g     F .text	0000002c fprintf
81003d44 g     F .text	00000027 __getopt_long_only_r
810028cc g     F .text	00000020 fseeko
81000f58 g     F .text	0000001a _atoi_r
81007a89 g     F .text	000001b7 __ssputs_r
810023fb g     F .text	00000020 fseek
81004d83 g     F .text	000000a8 __sfputs_r
81009bcc g     O .bss	00000004 optind
81001986 g     F .text	00000006 __sfp_lock_acquire
810049f0 g       .text	00000000 memchr
81006895 g     F .text	00000055 _sprintf_r
81009c40 g       .bss	00000000 __bss_end__
81001ea2 g     F .text	000003db _free_r
81000c70 g     F .text	00000021 wait
81008a00 g     O .rodata	00000180 _ctype_b
8100797a g     F .text	00000014 __locale_mb_cur_max
810065c9 g     F .text	00000063 __srget_r
8100731b g     F .text	00000115 __call_exitprocs
8100950c g     O .data	00000004 __malloc_sbrk_base
81000b03 g       .text	00000000 _start
81000cd9 g     F .text	0000002d read
81007c40 g     F .text	00000232 __ssprint_r
81005790 g     F .text	00000046 _open_r
810082f6 g     F .text	000000e3 strncmp
81003d1d g     F .text	00000027 __getopt_long_r
81009c00 g     O .bss	00000028 __malloc_current_mallinfo
81000f1d g     F .text	00000021 unlink
810057d6 g     F .text	0000002d _iprintf_r
81007430 g     F .text	00000040 _close_r
81006ce1 g     F .text	00000029 strtok
81004a85 g       .text	00000000 memcmp
81002ea0 g     F .text	000000b8 _fwrite_r
81000c0d g     F .text	0000001b fork
810071c0 g     F .text	0000015b __swsetup_r
81001765 g     F .text	0000014d __sfp
81009100 g     O .data	00000408 __malloc_av_
81001998 g     F .text	00000006 __sinit_lock_release
81006942 g     F .text	00000044 __sread
81001e7d g     F .text	00000025 fread
81004c35 g     F .text	00000006 __malloc_lock
81001aee g     F .text	00000029 _fprintf_r
81000dc9 g     F .text	00000021 sbrk
81001300 g     F .text	00000058 _fflush_r
81000b13 g     F .text	0000003e cstart
81001acf g     F .text	0000001f fopen
81003c1f g     F .text	00000047 getopt
81004bad g       .text	00000000 memset
81000938 g     F .text	000001cb main
81009be8 g     O .bss	00000004 __malloc_max_total_mem
81007159 g     F .text	00000021 __swbuf
81001c08 g     F .text	00000275 _fread_r
81006a35 g     F .text	00000025 __sclose
810010bd g     F .text	0000001d fclose
81006fd4 g     F .text	00000025 _strtol_r
810077bd g     F .text	000000ed _findenv_r
810041c1 g     F .text	00000822 _malloc_r
8100851b g     F .text	00000043 __ascii_wctomb
81000e3e g     F .text	0000006b opendir
81001aee g     F .text	00000029 _fiprintf_r
81008564 g     F .text	00000006 __env_unlock
8100777d g     F .text	00000020 _findenv
81002dcd g     F .text	00000068 _fwalk
8100147b g     F .text	0000015e _fgets_r
81007a07 g     F .text	0000002a _mbtowc_r
8100825d g     F .text	00000053 putc
81003caf g     F .text	00000049 getopt_long_only
8100227d g     F .text	00000161 _malloc_trim_r
81006b5c g     F .text	000000a5 strcmp
81004e2b g     F .text	00000025 vfiprintf
81000dea g     F .text	00000021 dup
81005803 g     F .text	00000035 iprintf
81001402 g     F .text	00000079 fgetc
810068ea g     F .text	00000058 sprintf
81009c34 g     O .bss	00000004 _PathLocale
8100717a g     F .text	00000046 _write_r
8100798e g     F .text	0000001f setlocale
810051a6 g     F .text	0000019b _printf_common
810090e4 g     O .data	00000004 _impure_ptr
810010da g     F .text	00000226 __sflush_r
810023de g     F .text	0000001d _fseek_r
81007e72 g     F .text	0000033a _svfiprintf_r
810063c8 g     F .text	00000201 __srefill_r
81007a31 g     F .text	00000058 __ascii_mbtowc
810019d6 g     F .text	00000024 __fp_unlock_all
8100757a g     F .text	0000004e fputc
81000be6 g     F .text	00000027 print_msg
81008ca8 g     O .data	00000004 optopt
81003e62 g     F .text	00000093 __swhatbuf_r
81002f58 g     F .text	00000025 fwrite
8100762e g     F .text	000000b0 __fputwc
81001b43 g     F .text	000000a6 _fputs_r
81006990 g     F .text	0000005b __swrite
81009508 g     O .data	00000004 __malloc_trim_threshold
81000f72 g     F .text	00000044 exit
81001b17 g     F .text	0000002c fiprintf
81004e50 g     F .text	00000356 _vfiprintf_r
81002e35 g     F .text	0000006b _fwalk_reent
8100198c g     F .text	00000006 __sfp_lock_release
810068ea g     F .text	00000058 siprintf
81000f3e g     F .text	0000001a atoi
81008b80 g     O .rodata	00000101 _ctype_
81003cf8 g     F .text	00000025 __getopt_r
810019fa g     F .text	000000d5 _fopen_r
81000c91 g     F .text	00000021 _exit
81003d75 g     F .text	000000ed __smakebuf_r
81006c10 g       .text	00000000 strlen
81005341 g     F .text	0000044f _printf_i
81000cb2 g     F .text	00000027 open
81004c41 g     F .text	000000dc __sprint_r
81006a60 g       .text	00000000 strchr
81001be9 g     F .text	0000001f fputs
81000ee9 g     F .text	00000034 closedir
810084f7 g     F .text	00000024 _wctomb_r
8100855e g     F .text	00000006 __env_lock
81004e50 g     F .text	00000356 _vfprintf_r
81000b9d g     F .text	0000002e msleep
81008464 g     F .text	0000007f wcrtomb
81000d33 g     F .text	00000021 close
81009520 g     O .data	0000016c __global_locale
81004e2b g     F .text	00000025 vfprintf
81007735 g     F .text	00000048 fputwc
81003f11 g     F .text	0000001d free
81001992 g     F .text	00000006 __sinit_lock_acquire
810078aa g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <show_promot>:
static const char * promot = "sh >>";       // 命令行提示符

/**
 * 显示命令行提示符
 */
static void show_promot(void) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 08             	sub    $0x8,%esp
    printf("%s", cli.promot);
81000006:	a1 a8 9a 00 81       	mov    0x81009aa8,%eax
8100000b:	83 ec 08             	sub    $0x8,%esp
8100000e:	50                   	push   %eax
8100000f:	68 86 85 00 81       	push   $0x81008586
81000014:	e8 ea 57 00 00       	call   81005803 <iprintf>
81000019:	83 c4 10             	add    $0x10,%esp
    fflush(stdout);
8100001c:	e8 4a 3d 00 00       	call   81003d6b <__getreent>
81000021:	8b 40 08             	mov    0x8(%eax),%eax
81000024:	83 ec 0c             	sub    $0xc,%esp
81000027:	50                   	push   %eax
81000028:	e8 2b 13 00 00       	call   81001358 <fflush>
8100002d:	83 c4 10             	add    $0x10,%esp
}
81000030:	90                   	nop
81000031:	c9                   	leave  
81000032:	c3                   	ret    

81000033 <do_help>:

/**
 * help命令
 */
static int do_help(int argc, char **argv) {
81000033:	55                   	push   %ebp
81000034:	89 e5                	mov    %esp,%ebp
81000036:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t * start = cli.cmd_start;
81000039:	a1 a0 9a 00 81       	mov    0x81009aa0,%eax
8100003e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    // 循环打印名称及用法
    while (start < cli.cmd_end) {
81000041:	eb 21                	jmp    81000064 <do_help+0x31>
        printf("%s %s\n",  start->name, start->useage);
81000043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000046:	8b 50 04             	mov    0x4(%eax),%edx
81000049:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100004c:	8b 00                	mov    (%eax),%eax
8100004e:	83 ec 04             	sub    $0x4,%esp
81000051:	52                   	push   %edx
81000052:	50                   	push   %eax
81000053:	68 89 85 00 81       	push   $0x81008589
81000058:	e8 a6 57 00 00       	call   81005803 <iprintf>
8100005d:	83 c4 10             	add    $0x10,%esp
        start++;
81000060:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while (start < cli.cmd_end) {
81000064:	a1 a4 9a 00 81       	mov    0x81009aa4,%eax
81000069:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100006c:	72 d5                	jb     81000043 <do_help+0x10>
    }
    return 0;
8100006e:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000073:	c9                   	leave  
81000074:	c3                   	ret    

81000075 <do_clear>:

/**
 * 清屏命令
 */
static int do_clear (int argc, char ** argv) {
81000075:	55                   	push   %ebp
81000076:	89 e5                	mov    %esp,%ebp
81000078:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
8100007b:	83 ec 08             	sub    $0x8,%esp
8100007e:	68 90 85 00 81       	push   $0x81008590
81000083:	68 86 85 00 81       	push   $0x81008586
81000088:	e8 76 57 00 00       	call   81005803 <iprintf>
8100008d:	83 c4 10             	add    $0x10,%esp
    printf("%s", ESC_MOVE_CURSOR(0, 0));
81000090:	83 ec 08             	sub    $0x8,%esp
81000093:	68 95 85 00 81       	push   $0x81008595
81000098:	68 86 85 00 81       	push   $0x81008586
8100009d:	e8 61 57 00 00       	call   81005803 <iprintf>
810000a2:	83 c4 10             	add    $0x10,%esp
    return 0;
810000a5:	b8 00 00 00 00       	mov    $0x0,%eax
}
810000aa:	c9                   	leave  
810000ab:	c3                   	ret    

810000ac <do_echo>:

/**
 * 回显命令
 */
static int do_echo (int argc, char ** argv) {
810000ac:	55                   	push   %ebp
810000ad:	89 e5                	mov    %esp,%ebp
810000af:	53                   	push   %ebx
810000b0:	81 ec 94 00 00 00    	sub    $0x94,%esp
    // 只有一个参数，需要先手动输入，再输出
    if (argc == 1) {
810000b6:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810000ba:	75 40                	jne    810000fc <do_echo+0x50>
        char msg_buf[128];

        fgets(msg_buf, sizeof(msg_buf), stdin);
810000bc:	e8 aa 3c 00 00       	call   81003d6b <__getreent>
810000c1:	8b 40 04             	mov    0x4(%eax),%eax
810000c4:	83 ec 04             	sub    $0x4,%esp
810000c7:	50                   	push   %eax
810000c8:	68 80 00 00 00       	push   $0x80
810000cd:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000d3:	50                   	push   %eax
810000d4:	e8 00 15 00 00       	call   810015d9 <fgets>
810000d9:	83 c4 10             	add    $0x10,%esp
        msg_buf[sizeof(msg_buf) - 1] = '\0';
810000dc:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(msg_buf);
810000e0:	83 ec 0c             	sub    $0xc,%esp
810000e3:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000e9:	50                   	push   %eax
810000ea:	e8 1f 58 00 00       	call   8100590e <puts>
810000ef:	83 c4 10             	add    $0x10,%esp
        return 0;
810000f2:	b8 00 00 00 00       	mov    $0x0,%eax
810000f7:	e9 53 01 00 00       	jmp    8100024f <do_echo+0x1a3>
    }

    // https://www.cnblogs.com/yinghao-liu/p/7123622.html
    // optind是下一个要处理的元素在argv中的索引
    // 当没有选项时，变为argv第一个不是选项元素的索引。
    int count = 1;    // 缺省只打印一次
810000fc:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
    int ch;
    while ((ch = getopt(argc, argv, "n:h")) != -1) {
81000103:	e9 a7 00 00 00       	jmp    810001af <do_echo+0x103>
        switch (ch) {
81000108:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
8100010c:	74 4e                	je     8100015c <do_echo+0xb0>
8100010e:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
81000112:	0f 8f 97 00 00 00    	jg     810001af <do_echo+0x103>
81000118:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
8100011c:	74 54                	je     81000172 <do_echo+0xc6>
8100011e:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
81000122:	0f 85 87 00 00 00    	jne    810001af <do_echo+0x103>
            case 'h':
                puts("echo echo any message");
81000128:	83 ec 0c             	sub    $0xc,%esp
8100012b:	68 9c 85 00 81       	push   $0x8100859c
81000130:	e8 d9 57 00 00       	call   8100590e <puts>
81000135:	83 c4 10             	add    $0x10,%esp
                puts("Usage: echo [-n count] msg");
81000138:	83 ec 0c             	sub    $0xc,%esp
8100013b:	68 b2 85 00 81       	push   $0x810085b2
81000140:	e8 c9 57 00 00       	call   8100590e <puts>
81000145:	83 c4 10             	add    $0x10,%esp
                optind = 1;        // getopt需要多次调用，需要重置
81000148:	c7 05 cc 9b 00 81 01 	movl   $0x1,0x81009bcc
8100014f:	00 00 00 
                return 0;
81000152:	b8 00 00 00 00       	mov    $0x0,%eax
81000157:	e9 f3 00 00 00       	jmp    8100024f <do_echo+0x1a3>
            case 'n':
                count = atoi(optarg);
8100015c:	a1 c8 9b 00 81       	mov    0x81009bc8,%eax
81000161:	83 ec 0c             	sub    $0xc,%esp
81000164:	50                   	push   %eax
81000165:	e8 d4 0d 00 00       	call   81000f3e <atoi>
8100016a:	83 c4 10             	add    $0x10,%esp
8100016d:	89 45 f4             	mov    %eax,-0xc(%ebp)
                break;
81000170:	eb 3d                	jmp    810001af <do_echo+0x103>
            case '?':
                if (optarg) {
81000172:	a1 c8 9b 00 81       	mov    0x81009bc8,%eax
81000177:	85 c0                	test   %eax,%eax
81000179:	74 20                	je     8100019b <do_echo+0xef>
                    fprintf(stderr, "Unknown option: -%s\n", optarg);
8100017b:	8b 1d c8 9b 00 81    	mov    0x81009bc8,%ebx
81000181:	e8 e5 3b 00 00       	call   81003d6b <__getreent>
81000186:	8b 40 0c             	mov    0xc(%eax),%eax
81000189:	83 ec 04             	sub    $0x4,%esp
8100018c:	53                   	push   %ebx
8100018d:	68 cd 85 00 81       	push   $0x810085cd
81000192:	50                   	push   %eax
81000193:	e8 7f 19 00 00       	call   81001b17 <fiprintf>
81000198:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;        // getopt需要多次调用，需要重置
8100019b:	c7 05 cc 9b 00 81 01 	movl   $0x1,0x81009bcc
810001a2:	00 00 00 
                return -1;
810001a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001aa:	e9 a0 00 00 00       	jmp    8100024f <do_echo+0x1a3>
    while ((ch = getopt(argc, argv, "n:h")) != -1) {
810001af:	83 ec 04             	sub    $0x4,%esp
810001b2:	68 e2 85 00 81       	push   $0x810085e2
810001b7:	ff 75 0c             	push   0xc(%ebp)
810001ba:	ff 75 08             	push   0x8(%ebp)
810001bd:	e8 5d 3a 00 00       	call   81003c1f <getopt>
810001c2:	83 c4 10             	add    $0x10,%esp
810001c5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810001c8:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001cc:	0f 85 36 ff ff ff    	jne    81000108 <do_echo+0x5c>
        }
    }

    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1) {
810001d2:	a1 cc 9b 00 81       	mov    0x81009bcc,%eax
810001d7:	39 45 08             	cmp    %eax,0x8(%ebp)
810001da:	7f 2b                	jg     81000207 <do_echo+0x15b>
        fprintf(stderr, "Message is empty \n");
810001dc:	e8 8a 3b 00 00       	call   81003d6b <__getreent>
810001e1:	8b 40 0c             	mov    0xc(%eax),%eax
810001e4:	50                   	push   %eax
810001e5:	6a 12                	push   $0x12
810001e7:	6a 01                	push   $0x1
810001e9:	68 e6 85 00 81       	push   $0x810085e6
810001ee:	e8 65 2d 00 00       	call   81002f58 <fwrite>
810001f3:	83 c4 10             	add    $0x10,%esp
        optind = 1;        // getopt需要多次调用，需要重置
810001f6:	c7 05 cc 9b 00 81 01 	movl   $0x1,0x81009bcc
810001fd:	00 00 00 
        return -1;
81000200:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000205:	eb 48                	jmp    8100024f <do_echo+0x1a3>
    }

    // 循环打印消息
    char * msg = argv[optind];
81000207:	a1 cc 9b 00 81       	mov    0x81009bcc,%eax
8100020c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000213:	8b 45 0c             	mov    0xc(%ebp),%eax
81000216:	01 d0                	add    %edx,%eax
81000218:	8b 00                	mov    (%eax),%eax
8100021a:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for (int i = 0; i < count; i++) {
8100021d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000224:	eb 12                	jmp    81000238 <do_echo+0x18c>
        puts(msg);
81000226:	83 ec 0c             	sub    $0xc,%esp
81000229:	ff 75 e8             	push   -0x18(%ebp)
8100022c:	e8 dd 56 00 00       	call   8100590e <puts>
81000231:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < count; i++) {
81000234:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000238:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100023b:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100023e:	7c e6                	jl     81000226 <do_echo+0x17a>
    }
    optind = 1;        // getopt需要多次调用，需要重置
81000240:	c7 05 cc 9b 00 81 01 	movl   $0x1,0x81009bcc
81000247:	00 00 00 
    return 0;
8100024a:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100024f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000252:	c9                   	leave  
81000253:	c3                   	ret    

81000254 <do_exit>:

/**
 * 程序退出命令
 */
static int do_exit (int argc, char ** argv) {
81000254:	55                   	push   %ebp
81000255:	89 e5                	mov    %esp,%ebp
81000257:	83 ec 08             	sub    $0x8,%esp
    exit(0);
8100025a:	83 ec 0c             	sub    $0xc,%esp
8100025d:	6a 00                	push   $0x0
8100025f:	e8 0e 0d 00 00       	call   81000f72 <exit>

81000264 <do_less>:
}

/**
 * @brief 列出文本文件内容
 */
static int do_less (int argc, char ** argv) {
81000264:	55                   	push   %ebp
81000265:	89 e5                	mov    %esp,%ebp
81000267:	53                   	push   %ebx
81000268:	83 ec 24             	sub    $0x24,%esp
    int line_mode = 0;
8100026b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    int ch;
    while ((ch = getopt(argc, argv, "lh")) != -1) {
81000272:	e9 94 00 00 00       	jmp    8100030b <do_less+0xa7>
        switch (ch) {
81000277:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
8100027b:	74 48                	je     810002c5 <do_less+0x61>
8100027d:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000281:	0f 8f 84 00 00 00    	jg     8100030b <do_less+0xa7>
81000287:	83 7d f0 3f          	cmpl   $0x3f,-0x10(%ebp)
8100028b:	74 41                	je     810002ce <do_less+0x6a>
8100028d:	83 7d f0 68          	cmpl   $0x68,-0x10(%ebp)
81000291:	75 78                	jne    8100030b <do_less+0xa7>
            case 'h':
                puts("show file content");
81000293:	83 ec 0c             	sub    $0xc,%esp
81000296:	68 f9 85 00 81       	push   $0x810085f9
8100029b:	e8 6e 56 00 00       	call   8100590e <puts>
810002a0:	83 c4 10             	add    $0x10,%esp
                puts("less [-l] file");
810002a3:	83 ec 0c             	sub    $0xc,%esp
810002a6:	68 0b 86 00 81       	push   $0x8100860b
810002ab:	e8 5e 56 00 00       	call   8100590e <puts>
810002b0:	83 c4 10             	add    $0x10,%esp
                puts("-l show file line by line.");
810002b3:	83 ec 0c             	sub    $0xc,%esp
810002b6:	68 1a 86 00 81       	push   $0x8100861a
810002bb:	e8 4e 56 00 00       	call   8100590e <puts>
810002c0:	83 c4 10             	add    $0x10,%esp
                break;
810002c3:	eb 46                	jmp    8100030b <do_less+0xa7>
            case 'l':
                line_mode = 1;
810002c5:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
                break;
810002cc:	eb 3d                	jmp    8100030b <do_less+0xa7>
            case '?':
                if (optarg) {
810002ce:	a1 c8 9b 00 81       	mov    0x81009bc8,%eax
810002d3:	85 c0                	test   %eax,%eax
810002d5:	74 20                	je     810002f7 <do_less+0x93>
                    fprintf(stderr, "Unknown option: -%s\n", optarg);
810002d7:	8b 1d c8 9b 00 81    	mov    0x81009bc8,%ebx
810002dd:	e8 89 3a 00 00       	call   81003d6b <__getreent>
810002e2:	8b 40 0c             	mov    0xc(%eax),%eax
810002e5:	83 ec 04             	sub    $0x4,%esp
810002e8:	53                   	push   %ebx
810002e9:	68 cd 85 00 81       	push   $0x810085cd
810002ee:	50                   	push   %eax
810002ef:	e8 23 18 00 00       	call   81001b17 <fiprintf>
810002f4:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;        // getopt需要多次调用，需要重置
810002f7:	c7 05 cc 9b 00 81 01 	movl   $0x1,0x81009bcc
810002fe:	00 00 00 
                return -1;
81000301:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000306:	e9 f7 01 00 00       	jmp    81000502 <do_less+0x29e>
    while ((ch = getopt(argc, argv, "lh")) != -1) {
8100030b:	83 ec 04             	sub    $0x4,%esp
8100030e:	68 35 86 00 81       	push   $0x81008635
81000313:	ff 75 0c             	push   0xc(%ebp)
81000316:	ff 75 08             	push   0x8(%ebp)
81000319:	e8 01 39 00 00       	call   81003c1f <getopt>
8100031e:	83 c4 10             	add    $0x10,%esp
81000321:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000324:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81000328:	0f 85 49 ff ff ff    	jne    81000277 <do_less+0x13>
        }
    }

    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1) {
8100032e:	a1 cc 9b 00 81       	mov    0x81009bcc,%eax
81000333:	39 45 08             	cmp    %eax,0x8(%ebp)
81000336:	7f 2e                	jg     81000366 <do_less+0x102>
        fprintf(stderr, "no file\n");
81000338:	e8 2e 3a 00 00       	call   81003d6b <__getreent>
8100033d:	8b 40 0c             	mov    0xc(%eax),%eax
81000340:	50                   	push   %eax
81000341:	6a 08                	push   $0x8
81000343:	6a 01                	push   $0x1
81000345:	68 38 86 00 81       	push   $0x81008638
8100034a:	e8 09 2c 00 00       	call   81002f58 <fwrite>
8100034f:	83 c4 10             	add    $0x10,%esp
        optind = 1;        // getopt需要多次调用，需要重置
81000352:	c7 05 cc 9b 00 81 01 	movl   $0x1,0x81009bcc
81000359:	00 00 00 
        return -1;
8100035c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000361:	e9 9c 01 00 00       	jmp    81000502 <do_less+0x29e>
    }

    FILE * file = fopen(argv[optind], "r");
81000366:	a1 cc 9b 00 81       	mov    0x81009bcc,%eax
8100036b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000372:	8b 45 0c             	mov    0xc(%ebp),%eax
81000375:	01 d0                	add    %edx,%eax
81000377:	8b 00                	mov    (%eax),%eax
81000379:	83 ec 08             	sub    $0x8,%esp
8100037c:	68 41 86 00 81       	push   $0x81008641
81000381:	50                   	push   %eax
81000382:	e8 48 17 00 00       	call   81001acf <fopen>
81000387:	83 c4 10             	add    $0x10,%esp
8100038a:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (file == NULL) {
8100038d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000391:	75 41                	jne    810003d4 <do_less+0x170>
        fprintf(stderr, "open file failed. %s", argv[optind]);
81000393:	a1 cc 9b 00 81       	mov    0x81009bcc,%eax
81000398:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100039f:	8b 45 0c             	mov    0xc(%ebp),%eax
810003a2:	01 d0                	add    %edx,%eax
810003a4:	8b 18                	mov    (%eax),%ebx
810003a6:	e8 c0 39 00 00       	call   81003d6b <__getreent>
810003ab:	8b 40 0c             	mov    0xc(%eax),%eax
810003ae:	83 ec 04             	sub    $0x4,%esp
810003b1:	53                   	push   %ebx
810003b2:	68 43 86 00 81       	push   $0x81008643
810003b7:	50                   	push   %eax
810003b8:	e8 5a 17 00 00       	call   81001b17 <fiprintf>
810003bd:	83 c4 10             	add    $0x10,%esp
        optind = 1;        // getopt需要多次调用，需要重置
810003c0:	c7 05 cc 9b 00 81 01 	movl   $0x1,0x81009bcc
810003c7:	00 00 00 
        return -1;
810003ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003cf:	e9 2e 01 00 00       	jmp    81000502 <do_less+0x29e>
    }

    char * buf = (char *)malloc(255);
810003d4:	83 ec 0c             	sub    $0xc,%esp
810003d7:	68 ff 00 00 00       	push   $0xff
810003dc:	e8 14 3b 00 00       	call   81003ef5 <malloc>
810003e1:	83 c4 10             	add    $0x10,%esp
810003e4:	89 45 e8             	mov    %eax,-0x18(%ebp)

    if (line_mode == 0) {
810003e7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810003eb:	75 38                	jne    81000425 <do_less+0x1c1>
        while (fgets(buf, 255, file) != NULL)  {
810003ed:	eb 17                	jmp    81000406 <do_less+0x1a2>
            fputs(buf, stdout);
810003ef:	e8 77 39 00 00       	call   81003d6b <__getreent>
810003f4:	8b 40 08             	mov    0x8(%eax),%eax
810003f7:	83 ec 08             	sub    $0x8,%esp
810003fa:	50                   	push   %eax
810003fb:	ff 75 e8             	push   -0x18(%ebp)
810003fe:	e8 e6 17 00 00       	call   81001be9 <fputs>
81000403:	83 c4 10             	add    $0x10,%esp
        while (fgets(buf, 255, file) != NULL)  {
81000406:	83 ec 04             	sub    $0x4,%esp
81000409:	ff 75 ec             	push   -0x14(%ebp)
8100040c:	68 ff 00 00 00       	push   $0xff
81000411:	ff 75 e8             	push   -0x18(%ebp)
81000414:	e8 c0 11 00 00       	call   810015d9 <fgets>
81000419:	83 c4 10             	add    $0x10,%esp
8100041c:	85 c0                	test   %eax,%eax
8100041e:	75 cf                	jne    810003ef <do_less+0x18b>
81000420:	e9 b2 00 00 00       	jmp    810004d7 <do_less+0x273>
        }
    } else {
        // 不使用缓存，这样能直接立即读取到输入而不用等回车
        setvbuf(stdin, NULL, _IONBF, 0);
81000425:	e8 41 39 00 00       	call   81003d6b <__getreent>
8100042a:	8b 40 04             	mov    0x4(%eax),%eax
8100042d:	6a 00                	push   $0x0
8100042f:	6a 02                	push   $0x2
81000431:	6a 00                	push   $0x0
81000433:	50                   	push   %eax
81000434:	e8 50 62 00 00       	call   81006689 <setvbuf>
81000439:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 0, 0);
8100043c:	6a 00                	push   $0x0
8100043e:	6a 00                	push   $0x0
81000440:	6a 01                	push   $0x1
81000442:	6a 00                	push   $0x0
81000444:	e8 c2 09 00 00       	call   81000e0b <ioctl>
81000449:	83 c4 10             	add    $0x10,%esp
        while (1) {
            char * b = fgets(buf, 255, file);
8100044c:	83 ec 04             	sub    $0x4,%esp
8100044f:	ff 75 ec             	push   -0x14(%ebp)
81000452:	68 ff 00 00 00       	push   $0xff
81000457:	ff 75 e8             	push   -0x18(%ebp)
8100045a:	e8 7a 11 00 00       	call   810015d9 <fgets>
8100045f:	83 c4 10             	add    $0x10,%esp
81000462:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            if (b == NULL ) {
81000465:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000469:	74 3e                	je     810004a9 <do_less+0x245>
                break;
            }
            fputs(buf, stdout);
8100046b:	e8 fb 38 00 00       	call   81003d6b <__getreent>
81000470:	8b 40 08             	mov    0x8(%eax),%eax
81000473:	83 ec 08             	sub    $0x8,%esp
81000476:	50                   	push   %eax
81000477:	ff 75 e8             	push   -0x18(%ebp)
8100047a:	e8 6a 17 00 00       	call   81001be9 <fputs>
8100047f:	83 c4 10             	add    $0x10,%esp

            int ch;
            while ((ch = fgetc(stdin)) != 'n') {
81000482:	eb 06                	jmp    8100048a <do_less+0x226>
                if (ch == 'q') {
81000484:	83 7d e0 71          	cmpl   $0x71,-0x20(%ebp)
81000488:	74 22                	je     810004ac <do_less+0x248>
            while ((ch = fgetc(stdin)) != 'n') {
8100048a:	e8 dc 38 00 00       	call   81003d6b <__getreent>
8100048f:	8b 40 04             	mov    0x4(%eax),%eax
81000492:	83 ec 0c             	sub    $0xc,%esp
81000495:	50                   	push   %eax
81000496:	e8 67 0f 00 00       	call   81001402 <fgetc>
8100049b:	83 c4 10             	add    $0x10,%esp
8100049e:	89 45 e0             	mov    %eax,-0x20(%ebp)
810004a1:	83 7d e0 6e          	cmpl   $0x6e,-0x20(%ebp)
810004a5:	75 dd                	jne    81000484 <do_less+0x220>
        while (1) {
810004a7:	eb a3                	jmp    8100044c <do_less+0x1e8>
                break;
810004a9:	90                   	nop
810004aa:	eb 01                	jmp    810004ad <do_less+0x249>
                    goto less_quit;
810004ac:	90                   	nop
                }
            }
        }
    less_quit:
    // 恢复为行缓存
        setvbuf(stdin, NULL,_IOLBF, BUFSIZ);
810004ad:	e8 b9 38 00 00       	call   81003d6b <__getreent>
810004b2:	8b 40 04             	mov    0x4(%eax),%eax
810004b5:	68 00 04 00 00       	push   $0x400
810004ba:	6a 01                	push   $0x1
810004bc:	6a 00                	push   $0x0
810004be:	50                   	push   %eax
810004bf:	e8 c5 61 00 00       	call   81006689 <setvbuf>
810004c4:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 1, 0);
810004c7:	6a 00                	push   $0x0
810004c9:	6a 01                	push   $0x1
810004cb:	6a 01                	push   $0x1
810004cd:	6a 00                	push   $0x0
810004cf:	e8 37 09 00 00       	call   81000e0b <ioctl>
810004d4:	83 c4 10             	add    $0x10,%esp
    }
    free(buf);
810004d7:	83 ec 0c             	sub    $0xc,%esp
810004da:	ff 75 e8             	push   -0x18(%ebp)
810004dd:	e8 2f 3a 00 00       	call   81003f11 <free>
810004e2:	83 c4 10             	add    $0x10,%esp
    fclose(file);
810004e5:	83 ec 0c             	sub    $0xc,%esp
810004e8:	ff 75 ec             	push   -0x14(%ebp)
810004eb:	e8 cd 0b 00 00       	call   810010bd <fclose>
810004f0:	83 c4 10             	add    $0x10,%esp
    optind = 1;        // getopt需要多次调用，需要重置
810004f3:	c7 05 cc 9b 00 81 01 	movl   $0x1,0x81009bcc
810004fa:	00 00 00 
    return 0;
810004fd:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000502:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000505:	c9                   	leave  
81000506:	c3                   	ret    

81000507 <do_ls>:

/**
 * @brief 列出目录内容
 */
static int do_ls (int argc, char ** argv) {
81000507:	55                   	push   %ebp
81000508:	89 e5                	mov    %esp,%ebp
8100050a:	83 ec 18             	sub    $0x18,%esp
    // 打开目录
	DIR * p_dir = opendir("temp");
8100050d:	83 ec 0c             	sub    $0xc,%esp
81000510:	68 58 86 00 81       	push   $0x81008658
81000515:	e8 24 09 00 00       	call   81000e3e <opendir>
8100051a:	83 c4 10             	add    $0x10,%esp
8100051d:	89 45 f4             	mov    %eax,-0xc(%ebp)
	if (p_dir == NULL) {
81000520:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000524:	75 5f                	jne    81000585 <do_ls+0x7e>
		printf("open dir failed\n");
81000526:	83 ec 0c             	sub    $0xc,%esp
81000529:	68 5d 86 00 81       	push   $0x8100865d
8100052e:	e8 db 53 00 00       	call   8100590e <puts>
81000533:	83 c4 10             	add    $0x10,%esp
		return -1;
81000536:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100053b:	eb 72                	jmp    810005af <do_ls+0xa8>
	}

    // 然后进行遍历
	struct dirent * entry;
	while((entry = readdir(p_dir)) != NULL) {
        strlwr(entry->name);
8100053d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000540:	83 c0 08             	add    $0x8,%eax
81000543:	83 ec 0c             	sub    $0xc,%esp
81000546:	50                   	push   %eax
81000547:	e8 3d 67 00 00       	call   81006c89 <strlwr>
8100054c:	83 c4 10             	add    $0x10,%esp
		printf("%c %s %d\n",
8100054f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000552:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
                entry->type == FILE_DIR ? 'd' : 'f',
                entry->name,
81000558:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100055b:	8d 4a 08             	lea    0x8(%edx),%ecx
                entry->type == FILE_DIR ? 'd' : 'f',
8100055e:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000561:	8b 52 04             	mov    0x4(%edx),%edx
		printf("%c %s %d\n",
81000564:	83 fa 03             	cmp    $0x3,%edx
81000567:	75 07                	jne    81000570 <do_ls+0x69>
81000569:	ba 64 00 00 00       	mov    $0x64,%edx
8100056e:	eb 05                	jmp    81000575 <do_ls+0x6e>
81000570:	ba 66 00 00 00       	mov    $0x66,%edx
81000575:	50                   	push   %eax
81000576:	51                   	push   %ecx
81000577:	52                   	push   %edx
81000578:	68 6d 86 00 81       	push   $0x8100866d
8100057d:	e8 81 52 00 00       	call   81005803 <iprintf>
81000582:	83 c4 10             	add    $0x10,%esp
	while((entry = readdir(p_dir)) != NULL) {
81000585:	83 ec 0c             	sub    $0xc,%esp
81000588:	ff 75 f4             	push   -0xc(%ebp)
8100058b:	e8 19 09 00 00       	call   81000ea9 <readdir>
81000590:	83 c4 10             	add    $0x10,%esp
81000593:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000596:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100059a:	75 a1                	jne    8100053d <do_ls+0x36>
                entry->size);
	}
	closedir(p_dir);
8100059c:	83 ec 0c             	sub    $0xc,%esp
8100059f:	ff 75 f4             	push   -0xc(%ebp)
810005a2:	e8 42 09 00 00       	call   81000ee9 <closedir>
810005a7:	83 c4 10             	add    $0x10,%esp

    return 0;
810005aa:	b8 00 00 00 00       	mov    $0x0,%eax
}
810005af:	c9                   	leave  
810005b0:	c3                   	ret    

810005b1 <do_cp>:

/**
 * @brief 复制文件命令
 */
static int do_cp (int argc, char ** argv) {
810005b1:	55                   	push   %ebp
810005b2:	89 e5                	mov    %esp,%ebp
810005b4:	83 ec 18             	sub    $0x18,%esp
    if (argc < 3) {
810005b7:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
810005bb:	7f 1a                	jg     810005d7 <do_cp+0x26>
        puts("no [from] or no [to]");
810005bd:	83 ec 0c             	sub    $0xc,%esp
810005c0:	68 77 86 00 81       	push   $0x81008677
810005c5:	e8 44 53 00 00       	call   8100590e <puts>
810005ca:	83 c4 10             	add    $0x10,%esp
        return -1;
810005cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810005d2:	e9 df 00 00 00       	jmp    810006b6 <do_cp+0x105>
    }

    FILE * from, * to;
    from = fopen(argv[1], "rb");
810005d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810005da:	83 c0 04             	add    $0x4,%eax
810005dd:	8b 00                	mov    (%eax),%eax
810005df:	83 ec 08             	sub    $0x8,%esp
810005e2:	68 8c 86 00 81       	push   $0x8100868c
810005e7:	50                   	push   %eax
810005e8:	e8 e2 14 00 00       	call   81001acf <fopen>
810005ed:	83 c4 10             	add    $0x10,%esp
810005f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    to = fopen(argv[2], "wb");
810005f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810005f6:	83 c0 08             	add    $0x8,%eax
810005f9:	8b 00                	mov    (%eax),%eax
810005fb:	83 ec 08             	sub    $0x8,%esp
810005fe:	68 8f 86 00 81       	push   $0x8100868f
81000603:	50                   	push   %eax
81000604:	e8 c6 14 00 00       	call   81001acf <fopen>
81000609:	83 c4 10             	add    $0x10,%esp
8100060c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (!from || !to) {
8100060f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000613:	74 06                	je     8100061b <do_cp+0x6a>
81000615:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000619:	75 12                	jne    8100062d <do_cp+0x7c>
        puts("open file failed.");
8100061b:	83 ec 0c             	sub    $0xc,%esp
8100061e:	68 92 86 00 81       	push   $0x81008692
81000623:	e8 e6 52 00 00       	call   8100590e <puts>
81000628:	83 c4 10             	add    $0x10,%esp
        goto ls_failed;
8100062b:	eb 5c                	jmp    81000689 <do_cp+0xd8>
    }

    char * buf = (char *)malloc(255);
8100062d:	83 ec 0c             	sub    $0xc,%esp
81000630:	68 ff 00 00 00       	push   $0xff
81000635:	e8 bb 38 00 00       	call   81003ef5 <malloc>
8100063a:	83 c4 10             	add    $0x10,%esp
8100063d:	89 45 ec             	mov    %eax,-0x14(%ebp)
    int size = 0;
81000640:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    while ((size = fread(buf, 1, 255, from)) > 0) {
81000647:	eb 14                	jmp    8100065d <do_cp+0xac>
        fwrite(buf, 1, size, to);
81000649:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100064c:	ff 75 f0             	push   -0x10(%ebp)
8100064f:	50                   	push   %eax
81000650:	6a 01                	push   $0x1
81000652:	ff 75 ec             	push   -0x14(%ebp)
81000655:	e8 fe 28 00 00       	call   81002f58 <fwrite>
8100065a:	83 c4 10             	add    $0x10,%esp
    while ((size = fread(buf, 1, 255, from)) > 0) {
8100065d:	ff 75 f4             	push   -0xc(%ebp)
81000660:	68 ff 00 00 00       	push   $0xff
81000665:	6a 01                	push   $0x1
81000667:	ff 75 ec             	push   -0x14(%ebp)
8100066a:	e8 0e 18 00 00       	call   81001e7d <fread>
8100066f:	83 c4 10             	add    $0x10,%esp
81000672:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000675:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000679:	7f ce                	jg     81000649 <do_cp+0x98>
    }
    free(buf);
8100067b:	83 ec 0c             	sub    $0xc,%esp
8100067e:	ff 75 ec             	push   -0x14(%ebp)
81000681:	e8 8b 38 00 00       	call   81003f11 <free>
81000686:	83 c4 10             	add    $0x10,%esp

ls_failed:
    if (from) {
81000689:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100068d:	74 0e                	je     8100069d <do_cp+0xec>
        fclose(from);
8100068f:	83 ec 0c             	sub    $0xc,%esp
81000692:	ff 75 f4             	push   -0xc(%ebp)
81000695:	e8 23 0a 00 00       	call   810010bd <fclose>
8100069a:	83 c4 10             	add    $0x10,%esp
    }
    if (to) {
8100069d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810006a1:	74 0e                	je     810006b1 <do_cp+0x100>
        fclose(to);
810006a3:	83 ec 0c             	sub    $0xc,%esp
810006a6:	ff 75 f0             	push   -0x10(%ebp)
810006a9:	e8 0f 0a 00 00       	call   810010bd <fclose>
810006ae:	83 c4 10             	add    $0x10,%esp
    }
    return 0;
810006b1:	b8 00 00 00 00       	mov    $0x0,%eax
}
810006b6:	c9                   	leave  
810006b7:	c3                   	ret    

810006b8 <do_remove>:

/**
 * @brief 删除文件命令
 */
static int do_remove (int argc, char ** argv) {
810006b8:	55                   	push   %ebp
810006b9:	89 e5                	mov    %esp,%ebp
810006bb:	53                   	push   %ebx
810006bc:	83 ec 14             	sub    $0x14,%esp
    if (argc < 2) {
810006bf:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810006c3:	7f 21                	jg     810006e6 <do_remove+0x2e>
        fprintf(stderr, "no file");
810006c5:	e8 a1 36 00 00       	call   81003d6b <__getreent>
810006ca:	8b 40 0c             	mov    0xc(%eax),%eax
810006cd:	50                   	push   %eax
810006ce:	6a 07                	push   $0x7
810006d0:	6a 01                	push   $0x1
810006d2:	68 a4 86 00 81       	push   $0x810086a4
810006d7:	e8 7c 28 00 00       	call   81002f58 <fwrite>
810006dc:	83 c4 10             	add    $0x10,%esp
        return -1;
810006df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810006e4:	eb 49                	jmp    8100072f <do_remove+0x77>
    }

    int err = unlink(argv[1]);
810006e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810006e9:	83 c0 04             	add    $0x4,%eax
810006ec:	8b 00                	mov    (%eax),%eax
810006ee:	83 ec 0c             	sub    $0xc,%esp
810006f1:	50                   	push   %eax
810006f2:	e8 26 08 00 00       	call   81000f1d <unlink>
810006f7:	83 c4 10             	add    $0x10,%esp
810006fa:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (err < 0) {
810006fd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000701:	79 27                	jns    8100072a <do_remove+0x72>
        fprintf(stderr, "rm file failed: %s", argv[1]);
81000703:	8b 45 0c             	mov    0xc(%ebp),%eax
81000706:	83 c0 04             	add    $0x4,%eax
81000709:	8b 18                	mov    (%eax),%ebx
8100070b:	e8 5b 36 00 00       	call   81003d6b <__getreent>
81000710:	8b 40 0c             	mov    0xc(%eax),%eax
81000713:	83 ec 04             	sub    $0x4,%esp
81000716:	53                   	push   %ebx
81000717:	68 ac 86 00 81       	push   $0x810086ac
8100071c:	50                   	push   %eax
8100071d:	e8 f5 13 00 00       	call   81001b17 <fiprintf>
81000722:	83 c4 10             	add    $0x10,%esp
        return err;
81000725:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000728:	eb 05                	jmp    8100072f <do_remove+0x77>
    }

    return 0;
8100072a:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100072f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000732:	c9                   	leave  
81000733:	c3                   	ret    

81000734 <cli_init>:
};

/**
 * 命令行初始化
 */
static void cli_init(const char * promot, const cli_cmd_t * cmd_list, int cnt) {
81000734:	55                   	push   %ebp
81000735:	89 e5                	mov    %esp,%ebp
81000737:	83 ec 08             	sub    $0x8,%esp
    cli.promot = promot;
8100073a:	8b 45 08             	mov    0x8(%ebp),%eax
8100073d:	a3 a8 9a 00 81       	mov    %eax,0x81009aa8
    
    memset(cli.curr_input, 0, CLI_INPUT_SIZE);
81000742:	83 ec 04             	sub    $0x4,%esp
81000745:	68 00 04 00 00       	push   $0x400
8100074a:	6a 00                	push   $0x0
8100074c:	68 a0 96 00 81       	push   $0x810096a0
81000751:	e8 57 44 00 00       	call   81004bad <memset>
81000756:	83 c4 10             	add    $0x10,%esp
    
    cli.cmd_start = cmd_list;
81000759:	8b 45 0c             	mov    0xc(%ebp),%eax
8100075c:	a3 a0 9a 00 81       	mov    %eax,0x81009aa0
    cli.cmd_end = cmd_list + cnt;
81000761:	8b 55 10             	mov    0x10(%ebp),%edx
81000764:	89 d0                	mov    %edx,%eax
81000766:	01 c0                	add    %eax,%eax
81000768:	01 d0                	add    %edx,%eax
8100076a:	c1 e0 02             	shl    $0x2,%eax
8100076d:	89 c2                	mov    %eax,%edx
8100076f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000772:	01 d0                	add    %edx,%eax
81000774:	a3 a4 9a 00 81       	mov    %eax,0x81009aa4
}
81000779:	90                   	nop
8100077a:	c9                   	leave  
8100077b:	c3                   	ret    

8100077c <find_builtin>:

/**
 * 在内部命令中搜索
 */
static const cli_cmd_t * find_builtin (const char * name) {
8100077c:	55                   	push   %ebp
8100077d:	89 e5                	mov    %esp,%ebp
8100077f:	83 ec 18             	sub    $0x18,%esp
    for (const cli_cmd_t * cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++) {
81000782:	a1 a0 9a 00 81       	mov    0x81009aa0,%eax
81000787:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100078a:	eb 22                	jmp    810007ae <find_builtin+0x32>
        if (strcmp(cmd->name, name) != 0) {
8100078c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100078f:	8b 00                	mov    (%eax),%eax
81000791:	83 ec 08             	sub    $0x8,%esp
81000794:	ff 75 08             	push   0x8(%ebp)
81000797:	50                   	push   %eax
81000798:	e8 bf 63 00 00       	call   81006b5c <strcmp>
8100079d:	83 c4 10             	add    $0x10,%esp
810007a0:	85 c0                	test   %eax,%eax
810007a2:	75 05                	jne    810007a9 <find_builtin+0x2d>
            continue;
        }

        return cmd;
810007a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007a7:	eb 14                	jmp    810007bd <find_builtin+0x41>
            continue;
810007a9:	90                   	nop
    for (const cli_cmd_t * cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++) {
810007aa:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810007ae:	a1 a4 9a 00 81       	mov    0x81009aa4,%eax
810007b3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810007b6:	72 d4                	jb     8100078c <find_builtin+0x10>
    }

    return (const cli_cmd_t *)0;
810007b8:	b8 00 00 00 00       	mov    $0x0,%eax
}
810007bd:	c9                   	leave  
810007be:	c3                   	ret    

810007bf <run_builtin>:

/**
 * 运行内部命令
 */
static void run_builtin (const cli_cmd_t * cmd, int argc, char ** argv) {
810007bf:	55                   	push   %ebp
810007c0:	89 e5                	mov    %esp,%ebp
810007c2:	83 ec 18             	sub    $0x18,%esp
    int ret = cmd->do_func(argc, argv);
810007c5:	8b 45 08             	mov    0x8(%ebp),%eax
810007c8:	8b 40 08             	mov    0x8(%eax),%eax
810007cb:	83 ec 08             	sub    $0x8,%esp
810007ce:	ff 75 10             	push   0x10(%ebp)
810007d1:	ff 75 0c             	push   0xc(%ebp)
810007d4:	ff d0                	call   *%eax
810007d6:	83 c4 10             	add    $0x10,%esp
810007d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (ret < 0) {
810007dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007e0:	79 1c                	jns    810007fe <run_builtin+0x3f>
        fprintf(stderr,ESC_COLOR_ERROR"error: %d\n"ESC_COLOR_DEFAULT, ret);
810007e2:	e8 84 35 00 00       	call   81003d6b <__getreent>
810007e7:	8b 40 0c             	mov    0xc(%eax),%eax
810007ea:	83 ec 04             	sub    $0x4,%esp
810007ed:	ff 75 f4             	push   -0xc(%ebp)
810007f0:	68 20 88 00 81       	push   $0x81008820
810007f5:	50                   	push   %eax
810007f6:	e8 1c 13 00 00       	call   81001b17 <fiprintf>
810007fb:	83 c4 10             	add    $0x10,%esp
    }
}
810007fe:	90                   	nop
810007ff:	c9                   	leave  
81000800:	c3                   	ret    

81000801 <find_exec_path>:

/**
 * 遍历搜索目录，看看文件是否存在，存在返回文件所在路径
 */
static const char * find_exec_path (const char * file_name) {
81000801:	55                   	push   %ebp
81000802:	89 e5                	mov    %esp,%ebp
81000804:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
81000807:	83 ec 08             	sub    $0x8,%esp
8100080a:	6a 00                	push   $0x0
8100080c:	ff 75 08             	push   0x8(%ebp)
8100080f:	e8 9e 04 00 00       	call   81000cb2 <open>
81000814:	83 c4 10             	add    $0x10,%esp
81000817:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0) {
8100081a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100081e:	79 4f                	jns    8100086f <find_exec_path+0x6e>
        sprintf(path, "%s.elf", file_name);
81000820:	83 ec 04             	sub    $0x4,%esp
81000823:	ff 75 08             	push   0x8(%ebp)
81000826:	68 35 88 00 81       	push   $0x81008835
8100082b:	68 c0 9a 00 81       	push   $0x81009ac0
81000830:	e8 b5 60 00 00       	call   810068ea <siprintf>
81000835:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
81000838:	83 ec 08             	sub    $0x8,%esp
8100083b:	6a 00                	push   $0x0
8100083d:	68 c0 9a 00 81       	push   $0x81009ac0
81000842:	e8 6b 04 00 00       	call   81000cb2 <open>
81000847:	83 c4 10             	add    $0x10,%esp
8100084a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0) {
8100084d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000851:	79 07                	jns    8100085a <find_exec_path+0x59>
            return (const char * )0;
81000853:	b8 00 00 00 00       	mov    $0x0,%eax
81000858:	eb 26                	jmp    81000880 <find_exec_path+0x7f>
        }
        close(fd);
8100085a:	83 ec 0c             	sub    $0xc,%esp
8100085d:	ff 75 f4             	push   -0xc(%ebp)
81000860:	e8 ce 04 00 00       	call   81000d33 <close>
81000865:	83 c4 10             	add    $0x10,%esp
        return path;
81000868:	b8 c0 9a 00 81       	mov    $0x81009ac0,%eax
8100086d:	eb 11                	jmp    81000880 <find_exec_path+0x7f>
    } else {
        close(fd);
8100086f:	83 ec 0c             	sub    $0xc,%esp
81000872:	ff 75 f4             	push   -0xc(%ebp)
81000875:	e8 b9 04 00 00       	call   81000d33 <close>
8100087a:	83 c4 10             	add    $0x10,%esp
        return file_name;
8100087d:	8b 45 08             	mov    0x8(%ebp),%eax
    }
}
81000880:	c9                   	leave  
81000881:	c3                   	ret    

81000882 <run_exec_file>:

/**
 * 试图运行当前文件
 */
static void run_exec_file (const char * path, int argc, char ** argv) {
81000882:	55                   	push   %ebp
81000883:	89 e5                	mov    %esp,%ebp
81000885:	53                   	push   %ebx
81000886:	83 ec 14             	sub    $0x14,%esp
    int pid = fork();
81000889:	e8 7f 03 00 00       	call   81000c0d <fork>
8100088e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (pid < 0) {
81000891:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000895:	79 1e                	jns    810008b5 <run_exec_file+0x33>
        fprintf(stderr, "fork failed: %s", path);
81000897:	e8 cf 34 00 00       	call   81003d6b <__getreent>
8100089c:	8b 40 0c             	mov    0xc(%eax),%eax
8100089f:	83 ec 04             	sub    $0x4,%esp
810008a2:	ff 75 08             	push   0x8(%ebp)
810008a5:	68 3c 88 00 81       	push   $0x8100883c
810008aa:	50                   	push   %eax
810008ab:	e8 67 12 00 00       	call   81001b17 <fiprintf>
810008b0:	83 c4 10             	add    $0x10,%esp
		// 等待子进程执行完毕
        int status;
        int pid = wait(&status);
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
    }
}
810008b3:	eb 7d                	jmp    81000932 <run_exec_file+0xb0>
    } else if (pid == 0) {
810008b5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810008b9:	75 42                	jne    810008fd <run_exec_file+0x7b>
        int err = execve(path, argv, (char * const *)0);
810008bb:	83 ec 04             	sub    $0x4,%esp
810008be:	6a 00                	push   $0x0
810008c0:	ff 75 10             	push   0x10(%ebp)
810008c3:	ff 75 08             	push   0x8(%ebp)
810008c6:	e8 5d 03 00 00       	call   81000c28 <execve>
810008cb:	83 c4 10             	add    $0x10,%esp
810008ce:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (err < 0) {
810008d1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810008d5:	79 1c                	jns    810008f3 <run_exec_file+0x71>
            fprintf(stderr, "exec failed: %s", path);
810008d7:	e8 8f 34 00 00       	call   81003d6b <__getreent>
810008dc:	8b 40 0c             	mov    0xc(%eax),%eax
810008df:	83 ec 04             	sub    $0x4,%esp
810008e2:	ff 75 08             	push   0x8(%ebp)
810008e5:	68 4c 88 00 81       	push   $0x8100884c
810008ea:	50                   	push   %eax
810008eb:	e8 27 12 00 00       	call   81001b17 <fiprintf>
810008f0:	83 c4 10             	add    $0x10,%esp
        exit(-1);
810008f3:	83 ec 0c             	sub    $0xc,%esp
810008f6:	6a ff                	push   $0xffffffff
810008f8:	e8 75 06 00 00       	call   81000f72 <exit>
        int pid = wait(&status);
810008fd:	83 ec 0c             	sub    $0xc,%esp
81000900:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000903:	50                   	push   %eax
81000904:	e8 67 03 00 00       	call   81000c70 <wait>
81000909:	83 c4 10             	add    $0x10,%esp
8100090c:	89 45 f0             	mov    %eax,-0x10(%ebp)
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
8100090f:	8b 5d e8             	mov    -0x18(%ebp),%ebx
81000912:	e8 54 34 00 00       	call   81003d6b <__getreent>
81000917:	8b 40 0c             	mov    0xc(%eax),%eax
8100091a:	83 ec 0c             	sub    $0xc,%esp
8100091d:	ff 75 f0             	push   -0x10(%ebp)
81000920:	53                   	push   %ebx
81000921:	ff 75 08             	push   0x8(%ebp)
81000924:	68 5c 88 00 81       	push   $0x8100885c
81000929:	50                   	push   %eax
8100092a:	e8 e8 11 00 00       	call   81001b17 <fiprintf>
8100092f:	83 c4 20             	add    $0x20,%esp
}
81000932:	90                   	nop
81000933:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000936:	c9                   	leave  
81000937:	c3                   	ret    

81000938 <main>:

int main (int argc, char **argv) {
81000938:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100093c:	83 e4 f0             	and    $0xfffffff0,%esp
8100093f:	ff 71 fc             	push   -0x4(%ecx)
81000942:	55                   	push   %ebp
81000943:	89 e5                	mov    %esp,%ebp
81000945:	51                   	push   %ecx
81000946:	83 ec 54             	sub    $0x54,%esp
81000949:	89 c8                	mov    %ecx,%eax
	open(argv[0], O_RDWR);
8100094b:	8b 40 04             	mov    0x4(%eax),%eax
8100094e:	8b 00                	mov    (%eax),%eax
81000950:	83 ec 08             	sub    $0x8,%esp
81000953:	6a 02                	push   $0x2
81000955:	50                   	push   %eax
81000956:	e8 57 03 00 00       	call   81000cb2 <open>
8100095b:	83 c4 10             	add    $0x10,%esp
    dup(0);     // 标准输出
8100095e:	83 ec 0c             	sub    $0xc,%esp
81000961:	6a 00                	push   $0x0
81000963:	e8 82 04 00 00       	call   81000dea <dup>
81000968:	83 c4 10             	add    $0x10,%esp
    dup(0);     // 标准错误输出
8100096b:	83 ec 0c             	sub    $0xc,%esp
8100096e:	6a 00                	push   $0x0
81000970:	e8 75 04 00 00       	call   81000dea <dup>
81000975:	83 c4 10             	add    $0x10,%esp

   	cli_init(promot, cmd_list, sizeof(cmd_list) / sizeof(cli_cmd_t));
81000978:	a1 a0 8c 00 81       	mov    0x81008ca0,%eax
8100097d:	83 ec 04             	sub    $0x4,%esp
81000980:	6a 08                	push   $0x8
81000982:	68 c0 87 00 81       	push   $0x810087c0
81000987:	50                   	push   %eax
81000988:	e8 a7 fd ff ff       	call   81000734 <cli_init>
8100098d:	83 c4 10             	add    $0x10,%esp
	for (;;) {
        // 显示提示符，开始工作
        show_promot();
81000990:	e8 6b f6 ff ff       	call   81000000 <show_promot>

        // 获取输入的字符串，然后进行处理.
        // 注意，读取到的字符串结尾中会包含换行符和0
        char * str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000995:	e8 d1 33 00 00       	call   81003d6b <__getreent>
8100099a:	8b 40 04             	mov    0x4(%eax),%eax
8100099d:	83 ec 04             	sub    $0x4,%esp
810009a0:	50                   	push   %eax
810009a1:	68 00 04 00 00       	push   $0x400
810009a6:	68 a0 96 00 81       	push   $0x810096a0
810009ab:	e8 29 0c 00 00       	call   810015d9 <fgets>
810009b0:	83 c4 10             	add    $0x10,%esp
810009b3:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (str == (char *)0) {
810009b6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810009ba:	75 0a                	jne    810009c6 <main+0x8e>

        // 找不到命令，提示错误
        fprintf(stderr, ESC_COLOR_ERROR"Unknown command: %s\n"ESC_COLOR_DEFAULT, cli.curr_input);
    }

    return 0;
810009bc:	b8 00 00 00 00       	mov    $0x0,%eax
810009c1:	e9 35 01 00 00       	jmp    81000afb <main+0x1c3>
        char * cr = strchr(cli.curr_input, '\n');
810009c6:	83 ec 08             	sub    $0x8,%esp
810009c9:	6a 0a                	push   $0xa
810009cb:	68 a0 96 00 81       	push   $0x810096a0
810009d0:	e8 8b 60 00 00       	call   81006a60 <strchr>
810009d5:	83 c4 10             	add    $0x10,%esp
810009d8:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr) {
810009db:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009df:	74 06                	je     810009e7 <main+0xaf>
            *cr = '\0';
810009e1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009e4:	c6 00 00             	movb   $0x0,(%eax)
        cr = strchr(cli.curr_input, '\r');
810009e7:	83 ec 08             	sub    $0x8,%esp
810009ea:	6a 0d                	push   $0xd
810009ec:	68 a0 96 00 81       	push   $0x810096a0
810009f1:	e8 6a 60 00 00       	call   81006a60 <strchr>
810009f6:	83 c4 10             	add    $0x10,%esp
810009f9:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr) {
810009fc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000a00:	74 06                	je     81000a08 <main+0xd0>
            *cr = '\0';
81000a02:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000a05:	c6 00 00             	movb   $0x0,(%eax)
        int argc = 0;
81000a08:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        memset(argv, 0, sizeof(argv));
81000a0f:	83 ec 04             	sub    $0x4,%esp
81000a12:	6a 28                	push   $0x28
81000a14:	6a 00                	push   $0x0
81000a16:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a19:	50                   	push   %eax
81000a1a:	e8 8e 41 00 00       	call   81004bad <memset>
81000a1f:	83 c4 10             	add    $0x10,%esp
        const char * space = " ";  // 字符分割器
81000a22:	c7 45 e4 79 88 00 81 	movl   $0x81008879,-0x1c(%ebp)
        char *token = strtok(cli.curr_input, space);
81000a29:	83 ec 08             	sub    $0x8,%esp
81000a2c:	ff 75 e4             	push   -0x1c(%ebp)
81000a2f:	68 a0 96 00 81       	push   $0x810096a0
81000a34:	e8 a8 62 00 00       	call   81006ce1 <strtok>
81000a39:	83 c4 10             	add    $0x10,%esp
81000a3c:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token) {
81000a3f:	eb 23                	jmp    81000a64 <main+0x12c>
            argv[argc++] = token;
81000a41:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a44:	8d 50 01             	lea    0x1(%eax),%edx
81000a47:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000a4a:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000a4d:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
            token = strtok(NULL, space);
81000a51:	83 ec 08             	sub    $0x8,%esp
81000a54:	ff 75 e4             	push   -0x1c(%ebp)
81000a57:	6a 00                	push   $0x0
81000a59:	e8 83 62 00 00       	call   81006ce1 <strtok>
81000a5e:	83 c4 10             	add    $0x10,%esp
81000a61:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token) {
81000a64:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000a68:	75 d7                	jne    81000a41 <main+0x109>
        if (argc == 0) {
81000a6a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000a6e:	0f 84 81 00 00 00    	je     81000af5 <main+0x1bd>
        const cli_cmd_t * cmd = find_builtin(argv[0]);
81000a74:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a77:	83 ec 0c             	sub    $0xc,%esp
81000a7a:	50                   	push   %eax
81000a7b:	e8 fc fc ff ff       	call   8100077c <find_builtin>
81000a80:	83 c4 10             	add    $0x10,%esp
81000a83:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if (cmd) {
81000a86:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000a8a:	74 17                	je     81000aa3 <main+0x16b>
            run_builtin(cmd, argc, argv);
81000a8c:	83 ec 04             	sub    $0x4,%esp
81000a8f:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a92:	50                   	push   %eax
81000a93:	ff 75 f4             	push   -0xc(%ebp)
81000a96:	ff 75 e0             	push   -0x20(%ebp)
81000a99:	e8 21 fd ff ff       	call   810007bf <run_builtin>
81000a9e:	83 c4 10             	add    $0x10,%esp
            continue;
81000aa1:	eb 53                	jmp    81000af6 <main+0x1be>
        const char * path = find_exec_path(argv[0]);
81000aa3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000aa6:	83 ec 0c             	sub    $0xc,%esp
81000aa9:	50                   	push   %eax
81000aaa:	e8 52 fd ff ff       	call   81000801 <find_exec_path>
81000aaf:	83 c4 10             	add    $0x10,%esp
81000ab2:	89 45 dc             	mov    %eax,-0x24(%ebp)
        if (path) {
81000ab5:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000ab9:	74 17                	je     81000ad2 <main+0x19a>
            run_exec_file(path, argc, argv);
81000abb:	83 ec 04             	sub    $0x4,%esp
81000abe:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000ac1:	50                   	push   %eax
81000ac2:	ff 75 f4             	push   -0xc(%ebp)
81000ac5:	ff 75 dc             	push   -0x24(%ebp)
81000ac8:	e8 b5 fd ff ff       	call   81000882 <run_exec_file>
81000acd:	83 c4 10             	add    $0x10,%esp
            continue;
81000ad0:	eb 24                	jmp    81000af6 <main+0x1be>
        fprintf(stderr, ESC_COLOR_ERROR"Unknown command: %s\n"ESC_COLOR_DEFAULT, cli.curr_input);
81000ad2:	e8 94 32 00 00       	call   81003d6b <__getreent>
81000ad7:	8b 40 0c             	mov    0xc(%eax),%eax
81000ada:	83 ec 04             	sub    $0x4,%esp
81000add:	68 a0 96 00 81       	push   $0x810096a0
81000ae2:	68 7c 88 00 81       	push   $0x8100887c
81000ae7:	50                   	push   %eax
81000ae8:	e8 2a 10 00 00       	call   81001b17 <fiprintf>
81000aed:	83 c4 10             	add    $0x10,%esp
81000af0:	e9 9b fe ff ff       	jmp    81000990 <main+0x58>
            continue;
81000af5:	90                   	nop
	for (;;) {
81000af6:	e9 95 fe ff ff       	jmp    81000990 <main+0x58>
81000afb:	8b 4d fc             	mov    -0x4(%ebp),%ecx
81000afe:	c9                   	leave  
81000aff:	8d 61 fc             	lea    -0x4(%ecx),%esp
81000b02:	c3                   	ret    

81000b03 <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
81000b03:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
81000b06:	8e d8                	mov    %eax,%ds
    mov %ax, %es
81000b08:	8e c0                	mov    %eax,%es
    mov %ax, %fs
81000b0a:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
81000b0c:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
81000b0e:	e9 00 00 00 00       	jmp    81000b13 <cstart>

81000b13 <cstart>:
extern uint8_t __bss_start__[], __bss_end__[];

/**
 * @brief 应用的初始化，C部分
 */
void cstart (int argc, char ** argv) {
81000b13:	55                   	push   %ebp
81000b14:	89 e5                	mov    %esp,%ebp
81000b16:	83 ec 18             	sub    $0x18,%esp
    // 清空bss区，注意这是必须的！！！
    // 像newlib库中有些代码就依赖于此，未清空时数据未知，导致调用sbrk时申请很大内存空间
    uint8_t * start = __bss_start__;
81000b19:	c7 45 f4 a0 96 00 81 	movl   $0x810096a0,-0xc(%ebp)
    while (start < __bss_end__) {
81000b20:	eb 0c                	jmp    81000b2e <cstart+0x1b>
        *start++ = 0;
81000b22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b25:	8d 50 01             	lea    0x1(%eax),%edx
81000b28:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000b2b:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000b2e:	81 7d f4 40 9c 00 81 	cmpl   $0x81009c40,-0xc(%ebp)
81000b35:	72 eb                	jb     81000b22 <cstart+0xf>
    }

    exit(main(argc, argv));
81000b37:	83 ec 08             	sub    $0x8,%esp
81000b3a:	ff 75 0c             	push   0xc(%ebp)
81000b3d:	ff 75 08             	push   0x8(%ebp)
81000b40:	e8 f3 fd ff ff       	call   81000938 <main>
81000b45:	83 c4 10             	add    $0x10,%esp
81000b48:	83 ec 0c             	sub    $0xc,%esp
81000b4b:	50                   	push   %eax
81000b4c:	e8 21 04 00 00       	call   81000f72 <exit>

81000b51 <sys_call>:
#include <string.h>

/**
 * 执行系统调用
 */
static inline int sys_call (syscall_args_t * args) {
81000b51:	55                   	push   %ebp
81000b52:	89 e5                	mov    %esp,%ebp
81000b54:	57                   	push   %edi
81000b55:	56                   	push   %esi
81000b56:	53                   	push   %ebx
81000b57:	83 ec 10             	sub    $0x10,%esp
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0};  // 使用特权级0
81000b5a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000b61:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
            "push %[arg1]\n\t"
            "push %[arg0]\n\t"
            "push %[id]\n\t"
            "lcalll *(%[gate])\n\n"
            :"=a"(ret)
            :[arg3]"r"(args->arg3), [arg2]"r"(args->arg2), [arg1]"r"(args->arg1),
81000b68:	8b 45 08             	mov    0x8(%ebp),%eax
81000b6b:	8b 40 10             	mov    0x10(%eax),%eax
81000b6e:	8b 55 08             	mov    0x8(%ebp),%edx
81000b71:	8b 52 0c             	mov    0xc(%edx),%edx
81000b74:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000b77:	8b 49 08             	mov    0x8(%ecx),%ecx
    [arg0]"r"(args->arg0), [id]"r"(args->id),
81000b7a:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000b7d:	8b 5b 04             	mov    0x4(%ebx),%ebx
81000b80:	8b 75 08             	mov    0x8(%ebp),%esi
81000b83:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
81000b85:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000b88:	50                   	push   %eax
81000b89:	52                   	push   %edx
81000b8a:	51                   	push   %ecx
81000b8b:	53                   	push   %ebx
81000b8c:	56                   	push   %esi
81000b8d:	ff 1f                	lcall  *(%edi)
81000b8f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    [gate]"r"(sys_gate_addr));
    return ret;
81000b92:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000b95:	83 c4 10             	add    $0x10,%esp
81000b98:	5b                   	pop    %ebx
81000b99:	5e                   	pop    %esi
81000b9a:	5f                   	pop    %edi
81000b9b:	5d                   	pop    %ebp
81000b9c:	c3                   	ret    

81000b9d <msleep>:

int msleep (int ms) {
81000b9d:	55                   	push   %ebp
81000b9e:	89 e5                	mov    %esp,%ebp
81000ba0:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) {
81000ba3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000ba7:	7f 07                	jg     81000bb0 <msleep+0x13>
        return 0;
81000ba9:	b8 00 00 00 00       	mov    $0x0,%eax
81000bae:	eb 19                	jmp    81000bc9 <msleep+0x2c>
    }

    syscall_args_t args;
    args.id = SYS_msleep;
81000bb0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000bb7:	8b 45 08             	mov    0x8(%ebp),%eax
81000bba:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000bbd:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bc0:	50                   	push   %eax
81000bc1:	e8 8b ff ff ff       	call   81000b51 <sys_call>
81000bc6:	83 c4 04             	add    $0x4,%esp
}
81000bc9:	c9                   	leave  
81000bca:	c3                   	ret    

81000bcb <getpid>:

int getpid() {
81000bcb:	55                   	push   %ebp
81000bcc:	89 e5                	mov    %esp,%ebp
81000bce:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000bd1:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
81000bd8:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bdb:	50                   	push   %eax
81000bdc:	e8 70 ff ff ff       	call   81000b51 <sys_call>
81000be1:	83 c4 04             	add    $0x4,%esp
}
81000be4:	c9                   	leave  
81000be5:	c3                   	ret    

81000be6 <print_msg>:

int print_msg(char * fmt, int arg) {
81000be6:	55                   	push   %ebp
81000be7:	89 e5                	mov    %esp,%ebp
81000be9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000bec:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000bf3:	8b 45 08             	mov    0x8(%ebp),%eax
81000bf6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000bf9:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bfc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000bff:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c02:	50                   	push   %eax
81000c03:	e8 49 ff ff ff       	call   81000b51 <sys_call>
81000c08:	83 c4 04             	add    $0x4,%esp
}
81000c0b:	c9                   	leave  
81000c0c:	c3                   	ret    

81000c0d <fork>:

int fork() {
81000c0d:	55                   	push   %ebp
81000c0e:	89 e5                	mov    %esp,%ebp
81000c10:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000c13:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
81000c1a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c1d:	50                   	push   %eax
81000c1e:	e8 2e ff ff ff       	call   81000b51 <sys_call>
81000c23:	83 c4 04             	add    $0x4,%esp
}
81000c26:	c9                   	leave  
81000c27:	c3                   	ret    

81000c28 <execve>:

int execve(const char *name, char * const *argv, char * const *env) {
81000c28:	55                   	push   %ebp
81000c29:	89 e5                	mov    %esp,%ebp
81000c2b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000c2e:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000c35:	8b 45 08             	mov    0x8(%ebp),%eax
81000c38:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000c3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c3e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000c41:	8b 45 10             	mov    0x10(%ebp),%eax
81000c44:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000c47:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c4a:	50                   	push   %eax
81000c4b:	e8 01 ff ff ff       	call   81000b51 <sys_call>
81000c50:	83 c4 04             	add    $0x4,%esp
}
81000c53:	c9                   	leave  
81000c54:	c3                   	ret    

81000c55 <yield>:

int yield (void) {
81000c55:	55                   	push   %ebp
81000c56:	89 e5                	mov    %esp,%ebp
81000c58:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000c5b:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
81000c62:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c65:	50                   	push   %eax
81000c66:	e8 e6 fe ff ff       	call   81000b51 <sys_call>
81000c6b:	83 c4 04             	add    $0x4,%esp
}
81000c6e:	c9                   	leave  
81000c6f:	c3                   	ret    

81000c70 <wait>:

int wait(int* status) {
81000c70:	55                   	push   %ebp
81000c71:	89 e5                	mov    %esp,%ebp
81000c73:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000c76:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000c7d:	8b 45 08             	mov    0x8(%ebp),%eax
81000c80:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000c83:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c86:	50                   	push   %eax
81000c87:	e8 c5 fe ff ff       	call   81000b51 <sys_call>
81000c8c:	83 c4 04             	add    $0x4,%esp
}
81000c8f:	c9                   	leave  
81000c90:	c3                   	ret    

81000c91 <_exit>:

void _exit(int status) {
81000c91:	55                   	push   %ebp
81000c92:	89 e5                	mov    %esp,%ebp
81000c94:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000c97:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = (int)status;
81000c9e:	8b 45 08             	mov    0x8(%ebp),%eax
81000ca1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000ca4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ca7:	50                   	push   %eax
81000ca8:	e8 a4 fe ff ff       	call   81000b51 <sys_call>
81000cad:	83 c4 04             	add    $0x4,%esp
    for (;;) {}
81000cb0:	eb fe                	jmp    81000cb0 <_exit+0x1f>

81000cb2 <open>:
}

int open(const char *name, int flags, ...) {
81000cb2:	55                   	push   %ebp
81000cb3:	89 e5                	mov    %esp,%ebp
81000cb5:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
81000cb8:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000cbf:	8b 45 08             	mov    0x8(%ebp),%eax
81000cc2:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
81000cc5:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000ccb:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cce:	50                   	push   %eax
81000ccf:	e8 7d fe ff ff       	call   81000b51 <sys_call>
81000cd4:	83 c4 04             	add    $0x4,%esp
}
81000cd7:	c9                   	leave  
81000cd8:	c3                   	ret    

81000cd9 <read>:

int read(int file, char *ptr, int len) {
81000cd9:	55                   	push   %ebp
81000cda:	89 e5                	mov    %esp,%ebp
81000cdc:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000cdf:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
81000ce6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ce9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000cec:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cef:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000cf2:	8b 45 10             	mov    0x10(%ebp),%eax
81000cf5:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000cf8:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cfb:	50                   	push   %eax
81000cfc:	e8 50 fe ff ff       	call   81000b51 <sys_call>
81000d01:	83 c4 04             	add    $0x4,%esp
}
81000d04:	c9                   	leave  
81000d05:	c3                   	ret    

81000d06 <write>:

int write(int file, char *ptr, int len) {
81000d06:	55                   	push   %ebp
81000d07:	89 e5                	mov    %esp,%ebp
81000d09:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000d0c:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
81000d13:	8b 45 08             	mov    0x8(%ebp),%eax
81000d16:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000d19:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d1c:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000d1f:	8b 45 10             	mov    0x10(%ebp),%eax
81000d22:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000d25:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d28:	50                   	push   %eax
81000d29:	e8 23 fe ff ff       	call   81000b51 <sys_call>
81000d2e:	83 c4 04             	add    $0x4,%esp
}
81000d31:	c9                   	leave  
81000d32:	c3                   	ret    

81000d33 <close>:

int close(int file) {
81000d33:	55                   	push   %ebp
81000d34:	89 e5                	mov    %esp,%ebp
81000d36:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000d39:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
81000d40:	8b 45 08             	mov    0x8(%ebp),%eax
81000d43:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000d46:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d49:	50                   	push   %eax
81000d4a:	e8 02 fe ff ff       	call   81000b51 <sys_call>
81000d4f:	83 c4 04             	add    $0x4,%esp
}
81000d52:	c9                   	leave  
81000d53:	c3                   	ret    

81000d54 <lseek>:

int lseek(int file, int ptr, int dir) {
81000d54:	55                   	push   %ebp
81000d55:	89 e5                	mov    %esp,%ebp
81000d57:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000d5a:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
81000d61:	8b 45 08             	mov    0x8(%ebp),%eax
81000d64:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000d67:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d6a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000d6d:	8b 45 10             	mov    0x10(%ebp),%eax
81000d70:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000d73:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d76:	50                   	push   %eax
81000d77:	e8 d5 fd ff ff       	call   81000b51 <sys_call>
81000d7c:	83 c4 04             	add    $0x4,%esp
}
81000d7f:	c9                   	leave  
81000d80:	c3                   	ret    

81000d81 <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st) {
81000d81:	55                   	push   %ebp
81000d82:	89 e5                	mov    %esp,%ebp
81000d84:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000d87:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
81000d8e:	8b 45 08             	mov    0x8(%ebp),%eax
81000d91:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000d94:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d97:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000d9a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d9d:	50                   	push   %eax
81000d9e:	e8 ae fd ff ff       	call   81000b51 <sys_call>
81000da3:	83 c4 04             	add    $0x4,%esp
}
81000da6:	c9                   	leave  
81000da7:	c3                   	ret    

81000da8 <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file) {
81000da8:	55                   	push   %ebp
81000da9:	89 e5                	mov    %esp,%ebp
81000dab:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000dae:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
81000db5:	8b 45 08             	mov    0x8(%ebp),%eax
81000db8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000dbb:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000dbe:	50                   	push   %eax
81000dbf:	e8 8d fd ff ff       	call   81000b51 <sys_call>
81000dc4:	83 c4 04             	add    $0x4,%esp
}
81000dc7:	c9                   	leave  
81000dc8:	c3                   	ret    

81000dc9 <sbrk>:

void * sbrk(ptrdiff_t incr) {
81000dc9:	55                   	push   %ebp
81000dca:	89 e5                	mov    %esp,%ebp
81000dcc:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000dcf:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
81000dd6:	8b 45 08             	mov    0x8(%ebp),%eax
81000dd9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
81000ddc:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ddf:	50                   	push   %eax
81000de0:	e8 6c fd ff ff       	call   81000b51 <sys_call>
81000de5:	83 c4 04             	add    $0x4,%esp
}
81000de8:	c9                   	leave  
81000de9:	c3                   	ret    

81000dea <dup>:

int dup (int file) {
81000dea:	55                   	push   %ebp
81000deb:	89 e5                	mov    %esp,%ebp
81000ded:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000df0:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
81000df7:	8b 45 08             	mov    0x8(%ebp),%eax
81000dfa:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000dfd:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000e00:	50                   	push   %eax
81000e01:	e8 4b fd ff ff       	call   81000b51 <sys_call>
81000e06:	83 c4 04             	add    $0x4,%esp
}
81000e09:	c9                   	leave  
81000e0a:	c3                   	ret    

81000e0b <ioctl>:

int ioctl(int fd, int cmd, int arg0, int arg1) {
81000e0b:	55                   	push   %ebp
81000e0c:	89 e5                	mov    %esp,%ebp
81000e0e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000e11:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = fd;
81000e18:	8b 45 08             	mov    0x8(%ebp),%eax
81000e1b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = cmd;
81000e1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e21:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = arg0;
81000e24:	8b 45 10             	mov    0x10(%ebp),%eax
81000e27:	89 45 f8             	mov    %eax,-0x8(%ebp)
    args.arg3 = arg1;
81000e2a:	8b 45 14             	mov    0x14(%ebp),%eax
81000e2d:	89 45 fc             	mov    %eax,-0x4(%ebp)
    return sys_call(&args);
81000e30:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000e33:	50                   	push   %eax
81000e34:	e8 18 fd ff ff       	call   81000b51 <sys_call>
81000e39:	83 c4 04             	add    $0x4,%esp
}
81000e3c:	c9                   	leave  
81000e3d:	c3                   	ret    

81000e3e <opendir>:

DIR * opendir(const char * name) {
81000e3e:	55                   	push   %ebp
81000e3f:	89 e5                	mov    %esp,%ebp
81000e41:	83 ec 28             	sub    $0x28,%esp
    DIR * dir = (DIR *)malloc(sizeof(DIR));
81000e44:	83 ec 0c             	sub    $0xc,%esp
81000e47:	68 10 01 00 00       	push   $0x110
81000e4c:	e8 a4 30 00 00       	call   81003ef5 <malloc>
81000e51:	83 c4 10             	add    $0x10,%esp
81000e54:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR *)0) {
81000e57:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000e5b:	75 07                	jne    81000e64 <opendir+0x26>
        return (DIR *)0;
81000e5d:	b8 00 00 00 00       	mov    $0x0,%eax
81000e62:	eb 43                	jmp    81000ea7 <opendir+0x69>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000e64:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)name;
81000e6b:	8b 45 08             	mov    0x8(%ebp),%eax
81000e6e:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000e71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e74:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    int err = sys_call(&args);
81000e77:	83 ec 0c             	sub    $0xc,%esp
81000e7a:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000e7d:	50                   	push   %eax
81000e7e:	e8 ce fc ff ff       	call   81000b51 <sys_call>
81000e83:	83 c4 10             	add    $0x10,%esp
81000e86:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (err < 0) {
81000e89:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000e8d:	79 15                	jns    81000ea4 <opendir+0x66>
        free(dir);
81000e8f:	83 ec 0c             	sub    $0xc,%esp
81000e92:	ff 75 f4             	push   -0xc(%ebp)
81000e95:	e8 77 30 00 00       	call   81003f11 <free>
81000e9a:	83 c4 10             	add    $0x10,%esp
        return (DIR *)0;
81000e9d:	b8 00 00 00 00       	mov    $0x0,%eax
81000ea2:	eb 03                	jmp    81000ea7 <opendir+0x69>
    }
    return dir;
81000ea4:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000ea7:	c9                   	leave  
81000ea8:	c3                   	ret    

81000ea9 <readdir>:

struct dirent* readdir(DIR* dir) {
81000ea9:	55                   	push   %ebp
81000eaa:	89 e5                	mov    %esp,%ebp
81000eac:	83 ec 20             	sub    $0x20,%esp

    syscall_args_t args;
    args.id = SYS_readdir;
81000eaf:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000eb6:	8b 45 08             	mov    0x8(%ebp),%eax
81000eb9:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&dir->dirent;
81000ebc:	8b 45 08             	mov    0x8(%ebp),%eax
81000ebf:	83 c0 04             	add    $0x4,%eax
81000ec2:	89 45 f0             	mov    %eax,-0x10(%ebp)
    int err = sys_call(&args);
81000ec5:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000ec8:	50                   	push   %eax
81000ec9:	e8 83 fc ff ff       	call   81000b51 <sys_call>
81000ece:	83 c4 04             	add    $0x4,%esp
81000ed1:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000ed4:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000ed8:	79 07                	jns    81000ee1 <readdir+0x38>
        return (struct dirent *)0;
81000eda:	b8 00 00 00 00       	mov    $0x0,%eax
81000edf:	eb 06                	jmp    81000ee7 <readdir+0x3e>
    }
    return &dir->dirent;
81000ee1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ee4:	83 c0 04             	add    $0x4,%eax
}
81000ee7:	c9                   	leave  
81000ee8:	c3                   	ret    

81000ee9 <closedir>:

int closedir(DIR *dir) {
81000ee9:	55                   	push   %ebp
81000eea:	89 e5                	mov    %esp,%ebp
81000eec:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000eef:	c7 45 e4 3e 00 00 00 	movl   $0x3e,-0x1c(%ebp)
    args.arg0 = (int)dir;
81000ef6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ef9:	89 45 e8             	mov    %eax,-0x18(%ebp)
    sys_call(&args);
81000efc:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81000eff:	50                   	push   %eax
81000f00:	e8 4c fc ff ff       	call   81000b51 <sys_call>
81000f05:	83 c4 04             	add    $0x4,%esp

    free(dir);
81000f08:	83 ec 0c             	sub    $0xc,%esp
81000f0b:	ff 75 08             	push   0x8(%ebp)
81000f0e:	e8 fe 2f 00 00       	call   81003f11 <free>
81000f13:	83 c4 10             	add    $0x10,%esp
    return 0;
81000f16:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000f1b:	c9                   	leave  
81000f1c:	c3                   	ret    

81000f1d <unlink>:

int unlink(const char *path) {
81000f1d:	55                   	push   %ebp
81000f1e:	89 e5                	mov    %esp,%ebp
81000f20:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
81000f23:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)path;
81000f2a:	8b 45 08             	mov    0x8(%ebp),%eax
81000f2d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000f30:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000f33:	50                   	push   %eax
81000f34:	e8 18 fc ff ff       	call   81000b51 <sys_call>
81000f39:	83 c4 04             	add    $0x4,%esp
}
81000f3c:	c9                   	leave  
81000f3d:	c3                   	ret    

81000f3e <atoi>:
81000f3e:	55                   	push   %ebp
81000f3f:	89 e5                	mov    %esp,%ebp
81000f41:	83 ec 08             	sub    $0x8,%esp
81000f44:	83 ec 04             	sub    $0x4,%esp
81000f47:	6a 0a                	push   $0xa
81000f49:	6a 00                	push   $0x0
81000f4b:	ff 75 08             	push   0x8(%ebp)
81000f4e:	e8 cb 60 00 00       	call   8100701e <strtol>
81000f53:	83 c4 10             	add    $0x10,%esp
81000f56:	c9                   	leave  
81000f57:	c3                   	ret    

81000f58 <_atoi_r>:
81000f58:	55                   	push   %ebp
81000f59:	89 e5                	mov    %esp,%ebp
81000f5b:	83 ec 08             	sub    $0x8,%esp
81000f5e:	6a 0a                	push   $0xa
81000f60:	6a 00                	push   $0x0
81000f62:	ff 75 0c             	push   0xc(%ebp)
81000f65:	ff 75 08             	push   0x8(%ebp)
81000f68:	e8 67 60 00 00       	call   81006fd4 <_strtol_r>
81000f6d:	83 c4 10             	add    $0x10,%esp
81000f70:	c9                   	leave  
81000f71:	c3                   	ret    

81000f72 <exit>:
81000f72:	55                   	push   %ebp
81000f73:	89 e5                	mov    %esp,%ebp
81000f75:	83 ec 08             	sub    $0x8,%esp
81000f78:	83 ec 08             	sub    $0x8,%esp
81000f7b:	6a 00                	push   $0x0
81000f7d:	ff 75 08             	push   0x8(%ebp)
81000f80:	e8 96 63 00 00       	call   8100731b <__call_exitprocs>
81000f85:	83 c4 10             	add    $0x10,%esp
81000f88:	a1 24 89 00 81       	mov    0x81008924,%eax
81000f8d:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f90:	85 c0                	test   %eax,%eax
81000f92:	74 17                	je     81000fab <exit+0x39>
81000f94:	a1 24 89 00 81       	mov    0x81008924,%eax
81000f99:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f9c:	8b 15 24 89 00 81    	mov    0x81008924,%edx
81000fa2:	83 ec 0c             	sub    $0xc,%esp
81000fa5:	52                   	push   %edx
81000fa6:	ff d0                	call   *%eax
81000fa8:	83 c4 10             	add    $0x10,%esp
81000fab:	83 ec 0c             	sub    $0xc,%esp
81000fae:	ff 75 08             	push   0x8(%ebp)
81000fb1:	e8 db fc ff ff       	call   81000c91 <_exit>

81000fb6 <_fclose_r>:
81000fb6:	55                   	push   %ebp
81000fb7:	89 e5                	mov    %esp,%ebp
81000fb9:	53                   	push   %ebx
81000fba:	83 ec 14             	sub    $0x14,%esp
81000fbd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fc0:	85 db                	test   %ebx,%ebx
81000fc2:	75 0a                	jne    81000fce <_fclose_r+0x18>
81000fc4:	b8 00 00 00 00       	mov    $0x0,%eax
81000fc9:	e9 ea 00 00 00       	jmp    810010b8 <_fclose_r+0x102>
81000fce:	8b 45 08             	mov    0x8(%ebp),%eax
81000fd1:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fd4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000fd8:	74 18                	je     81000ff2 <_fclose_r+0x3c>
81000fda:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fdd:	8b 40 38             	mov    0x38(%eax),%eax
81000fe0:	85 c0                	test   %eax,%eax
81000fe2:	75 0e                	jne    81000ff2 <_fclose_r+0x3c>
81000fe4:	83 ec 0c             	sub    $0xc,%esp
81000fe7:	ff 75 f0             	push   -0x10(%ebp)
81000fea:	e8 fe 08 00 00       	call   810018ed <__sinit>
81000fef:	83 c4 10             	add    $0x10,%esp
81000ff2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ff6:	66 85 c0             	test   %ax,%ax
81000ff9:	75 0a                	jne    81001005 <_fclose_r+0x4f>
81000ffb:	b8 00 00 00 00       	mov    $0x0,%eax
81001000:	e9 b3 00 00 00       	jmp    810010b8 <_fclose_r+0x102>
81001005:	83 ec 08             	sub    $0x8,%esp
81001008:	53                   	push   %ebx
81001009:	ff 75 08             	push   0x8(%ebp)
8100100c:	e8 c9 00 00 00       	call   810010da <__sflush_r>
81001011:	83 c4 10             	add    $0x10,%esp
81001014:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001017:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100101a:	85 c0                	test   %eax,%eax
8100101c:	74 1d                	je     8100103b <_fclose_r+0x85>
8100101e:	8b 43 2c             	mov    0x2c(%ebx),%eax
81001021:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001024:	83 ec 08             	sub    $0x8,%esp
81001027:	52                   	push   %edx
81001028:	ff 75 08             	push   0x8(%ebp)
8100102b:	ff d0                	call   *%eax
8100102d:	83 c4 10             	add    $0x10,%esp
81001030:	85 c0                	test   %eax,%eax
81001032:	79 07                	jns    8100103b <_fclose_r+0x85>
81001034:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8100103b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100103f:	98                   	cwtl   
81001040:	25 80 00 00 00       	and    $0x80,%eax
81001045:	85 c0                	test   %eax,%eax
81001047:	74 12                	je     8100105b <_fclose_r+0xa5>
81001049:	8b 43 10             	mov    0x10(%ebx),%eax
8100104c:	83 ec 08             	sub    $0x8,%esp
8100104f:	50                   	push   %eax
81001050:	ff 75 08             	push   0x8(%ebp)
81001053:	e8 4a 0e 00 00       	call   81001ea2 <_free_r>
81001058:	83 c4 10             	add    $0x10,%esp
8100105b:	8b 43 30             	mov    0x30(%ebx),%eax
8100105e:	85 c0                	test   %eax,%eax
81001060:	74 23                	je     81001085 <_fclose_r+0xcf>
81001062:	8b 53 30             	mov    0x30(%ebx),%edx
81001065:	8d 43 40             	lea    0x40(%ebx),%eax
81001068:	39 c2                	cmp    %eax,%edx
8100106a:	74 12                	je     8100107e <_fclose_r+0xc8>
8100106c:	8b 43 30             	mov    0x30(%ebx),%eax
8100106f:	83 ec 08             	sub    $0x8,%esp
81001072:	50                   	push   %eax
81001073:	ff 75 08             	push   0x8(%ebp)
81001076:	e8 27 0e 00 00       	call   81001ea2 <_free_r>
8100107b:	83 c4 10             	add    $0x10,%esp
8100107e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81001085:	8b 43 44             	mov    0x44(%ebx),%eax
81001088:	85 c0                	test   %eax,%eax
8100108a:	74 19                	je     810010a5 <_fclose_r+0xef>
8100108c:	8b 43 44             	mov    0x44(%ebx),%eax
8100108f:	83 ec 08             	sub    $0x8,%esp
81001092:	50                   	push   %eax
81001093:	ff 75 08             	push   0x8(%ebp)
81001096:	e8 07 0e 00 00       	call   81001ea2 <_free_r>
8100109b:	83 c4 10             	add    $0x10,%esp
8100109e:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
810010a5:	e8 dc 08 00 00       	call   81001986 <__sfp_lock_acquire>
810010aa:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810010b0:	e8 d7 08 00 00       	call   8100198c <__sfp_lock_release>
810010b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010b8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810010bb:	c9                   	leave  
810010bc:	c3                   	ret    

810010bd <fclose>:
810010bd:	55                   	push   %ebp
810010be:	89 e5                	mov    %esp,%ebp
810010c0:	83 ec 08             	sub    $0x8,%esp
810010c3:	8b 55 08             	mov    0x8(%ebp),%edx
810010c6:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810010cb:	83 ec 08             	sub    $0x8,%esp
810010ce:	52                   	push   %edx
810010cf:	50                   	push   %eax
810010d0:	e8 e1 fe ff ff       	call   81000fb6 <_fclose_r>
810010d5:	83 c4 10             	add    $0x10,%esp
810010d8:	c9                   	leave  
810010d9:	c3                   	ret    

810010da <__sflush_r>:
810010da:	55                   	push   %ebp
810010db:	89 e5                	mov    %esp,%ebp
810010dd:	57                   	push   %edi
810010de:	56                   	push   %esi
810010df:	53                   	push   %ebx
810010e0:	83 ec 1c             	sub    $0x1c,%esp
810010e3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810010e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010ea:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810010ee:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810010f2:	83 e0 08             	and    $0x8,%eax
810010f5:	85 c0                	test   %eax,%eax
810010f7:	0f 85 93 01 00 00    	jne    81001290 <__sflush_r+0x1b6>
810010fd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001101:	80 cc 08             	or     $0x8,%ah
81001104:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001108:	8b 43 04             	mov    0x4(%ebx),%eax
8100110b:	85 c0                	test   %eax,%eax
8100110d:	7f 0b                	jg     8100111a <__sflush_r+0x40>
8100110f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001112:	85 c0                	test   %eax,%eax
81001114:	0f 8e 6f 01 00 00    	jle    81001289 <__sflush_r+0x1af>
8100111a:	8b 43 28             	mov    0x28(%ebx),%eax
8100111d:	85 c0                	test   %eax,%eax
8100111f:	0f 84 64 01 00 00    	je     81001289 <__sflush_r+0x1af>
81001125:	8b 45 08             	mov    0x8(%ebp),%eax
81001128:	8b 00                	mov    (%eax),%eax
8100112a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100112d:	8b 45 08             	mov    0x8(%ebp),%eax
81001130:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001136:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100113a:	98                   	cwtl   
8100113b:	25 00 10 00 00       	and    $0x1000,%eax
81001140:	85 c0                	test   %eax,%eax
81001142:	74 08                	je     8100114c <__sflush_r+0x72>
81001144:	8b 43 50             	mov    0x50(%ebx),%eax
81001147:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100114a:	eb 64                	jmp    810011b0 <__sflush_r+0xd6>
8100114c:	8b 43 28             	mov    0x28(%ebx),%eax
8100114f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001152:	6a 01                	push   $0x1
81001154:	6a 00                	push   $0x0
81001156:	52                   	push   %edx
81001157:	ff 75 08             	push   0x8(%ebp)
8100115a:	ff d0                	call   *%eax
8100115c:	83 c4 10             	add    $0x10,%esp
8100115f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001162:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001166:	75 48                	jne    810011b0 <__sflush_r+0xd6>
81001168:	8b 45 08             	mov    0x8(%ebp),%eax
8100116b:	8b 00                	mov    (%eax),%eax
8100116d:	85 c0                	test   %eax,%eax
8100116f:	74 3f                	je     810011b0 <__sflush_r+0xd6>
81001171:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001178:	8b 45 08             	mov    0x8(%ebp),%eax
8100117b:	8b 00                	mov    (%eax),%eax
8100117d:	83 f8 1d             	cmp    $0x1d,%eax
81001180:	74 0a                	je     8100118c <__sflush_r+0xb2>
81001182:	8b 45 08             	mov    0x8(%ebp),%eax
81001185:	8b 00                	mov    (%eax),%eax
81001187:	83 f8 16             	cmp    $0x16,%eax
8100118a:	75 11                	jne    8100119d <__sflush_r+0xc3>
8100118c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81001193:	8b 45 08             	mov    0x8(%ebp),%eax
81001196:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001199:	89 10                	mov    %edx,(%eax)
8100119b:	eb 0b                	jmp    810011a8 <__sflush_r+0xce>
8100119d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011a1:	83 c8 40             	or     $0x40,%eax
810011a4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810011a8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011ab:	e9 48 01 00 00       	jmp    810012f8 <__sflush_r+0x21e>
810011b0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011b4:	98                   	cwtl   
810011b5:	83 e0 04             	and    $0x4,%eax
810011b8:	85 c0                	test   %eax,%eax
810011ba:	74 13                	je     810011cf <__sflush_r+0xf5>
810011bc:	8b 43 04             	mov    0x4(%ebx),%eax
810011bf:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011c2:	8b 43 30             	mov    0x30(%ebx),%eax
810011c5:	85 c0                	test   %eax,%eax
810011c7:	74 06                	je     810011cf <__sflush_r+0xf5>
810011c9:	8b 43 3c             	mov    0x3c(%ebx),%eax
810011cc:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011cf:	8b 43 28             	mov    0x28(%ebx),%eax
810011d2:	8b 53 1c             	mov    0x1c(%ebx),%edx
810011d5:	6a 00                	push   $0x0
810011d7:	ff 75 e4             	push   -0x1c(%ebp)
810011da:	52                   	push   %edx
810011db:	ff 75 08             	push   0x8(%ebp)
810011de:	ff d0                	call   *%eax
810011e0:	83 c4 10             	add    $0x10,%esp
810011e3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810011e6:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810011ea:	75 1d                	jne    81001209 <__sflush_r+0x12f>
810011ec:	8b 45 08             	mov    0x8(%ebp),%eax
810011ef:	8b 00                	mov    (%eax),%eax
810011f1:	85 c0                	test   %eax,%eax
810011f3:	74 14                	je     81001209 <__sflush_r+0x12f>
810011f5:	8b 45 08             	mov    0x8(%ebp),%eax
810011f8:	8b 00                	mov    (%eax),%eax
810011fa:	83 f8 1d             	cmp    $0x1d,%eax
810011fd:	74 0a                	je     81001209 <__sflush_r+0x12f>
810011ff:	8b 45 08             	mov    0x8(%ebp),%eax
81001202:	8b 00                	mov    (%eax),%eax
81001204:	83 f8 16             	cmp    $0x16,%eax
81001207:	75 6e                	jne    81001277 <__sflush_r+0x19d>
81001209:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100120d:	80 e4 f7             	and    $0xf7,%ah
81001210:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001214:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100121b:	8b 43 10             	mov    0x10(%ebx),%eax
8100121e:	89 03                	mov    %eax,(%ebx)
81001220:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001224:	98                   	cwtl   
81001225:	25 00 10 00 00       	and    $0x1000,%eax
8100122a:	85 c0                	test   %eax,%eax
8100122c:	74 15                	je     81001243 <__sflush_r+0x169>
8100122e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001232:	75 09                	jne    8100123d <__sflush_r+0x163>
81001234:	8b 45 08             	mov    0x8(%ebp),%eax
81001237:	8b 00                	mov    (%eax),%eax
81001239:	85 c0                	test   %eax,%eax
8100123b:	75 06                	jne    81001243 <__sflush_r+0x169>
8100123d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001240:	89 43 50             	mov    %eax,0x50(%ebx)
81001243:	8b 45 08             	mov    0x8(%ebp),%eax
81001246:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001249:	89 10                	mov    %edx,(%eax)
8100124b:	8b 43 30             	mov    0x30(%ebx),%eax
8100124e:	85 c0                	test   %eax,%eax
81001250:	74 37                	je     81001289 <__sflush_r+0x1af>
81001252:	8b 53 30             	mov    0x30(%ebx),%edx
81001255:	8d 43 40             	lea    0x40(%ebx),%eax
81001258:	39 c2                	cmp    %eax,%edx
8100125a:	74 12                	je     8100126e <__sflush_r+0x194>
8100125c:	8b 43 30             	mov    0x30(%ebx),%eax
8100125f:	83 ec 08             	sub    $0x8,%esp
81001262:	50                   	push   %eax
81001263:	ff 75 08             	push   0x8(%ebp)
81001266:	e8 37 0c 00 00       	call   81001ea2 <_free_r>
8100126b:	83 c4 10             	add    $0x10,%esp
8100126e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81001275:	eb 12                	jmp    81001289 <__sflush_r+0x1af>
81001277:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100127b:	83 c8 40             	or     $0x40,%eax
8100127e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001282:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001287:	eb 6f                	jmp    810012f8 <__sflush_r+0x21e>
81001289:	b8 00 00 00 00       	mov    $0x0,%eax
8100128e:	eb 68                	jmp    810012f8 <__sflush_r+0x21e>
81001290:	8b 73 10             	mov    0x10(%ebx),%esi
81001293:	85 f6                	test   %esi,%esi
81001295:	75 07                	jne    8100129e <__sflush_r+0x1c4>
81001297:	b8 00 00 00 00       	mov    $0x0,%eax
8100129c:	eb 5a                	jmp    810012f8 <__sflush_r+0x21e>
8100129e:	8b 03                	mov    (%ebx),%eax
810012a0:	29 f0                	sub    %esi,%eax
810012a2:	89 c7                	mov    %eax,%edi
810012a4:	89 33                	mov    %esi,(%ebx)
810012a6:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810012aa:	83 e0 03             	and    $0x3,%eax
810012ad:	85 c0                	test   %eax,%eax
810012af:	75 05                	jne    810012b6 <__sflush_r+0x1dc>
810012b1:	8b 43 14             	mov    0x14(%ebx),%eax
810012b4:	eb 05                	jmp    810012bb <__sflush_r+0x1e1>
810012b6:	b8 00 00 00 00       	mov    $0x0,%eax
810012bb:	89 43 08             	mov    %eax,0x8(%ebx)
810012be:	eb 2f                	jmp    810012ef <__sflush_r+0x215>
810012c0:	8b 43 24             	mov    0x24(%ebx),%eax
810012c3:	8b 53 1c             	mov    0x1c(%ebx),%edx
810012c6:	57                   	push   %edi
810012c7:	56                   	push   %esi
810012c8:	52                   	push   %edx
810012c9:	ff 75 08             	push   0x8(%ebp)
810012cc:	ff d0                	call   *%eax
810012ce:	83 c4 10             	add    $0x10,%esp
810012d1:	85 c0                	test   %eax,%eax
810012d3:	7f 12                	jg     810012e7 <__sflush_r+0x20d>
810012d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810012d9:	83 c8 40             	or     $0x40,%eax
810012dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810012e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810012e5:	eb 11                	jmp    810012f8 <__sflush_r+0x21e>
810012e7:	89 c1                	mov    %eax,%ecx
810012e9:	89 c8                	mov    %ecx,%eax
810012eb:	01 c6                	add    %eax,%esi
810012ed:	29 cf                	sub    %ecx,%edi
810012ef:	85 ff                	test   %edi,%edi
810012f1:	7f cd                	jg     810012c0 <__sflush_r+0x1e6>
810012f3:	b8 00 00 00 00       	mov    $0x0,%eax
810012f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810012fb:	5b                   	pop    %ebx
810012fc:	5e                   	pop    %esi
810012fd:	5f                   	pop    %edi
810012fe:	5d                   	pop    %ebp
810012ff:	c3                   	ret    

81001300 <_fflush_r>:
81001300:	55                   	push   %ebp
81001301:	89 e5                	mov    %esp,%ebp
81001303:	53                   	push   %ebx
81001304:	83 ec 14             	sub    $0x14,%esp
81001307:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100130a:	8b 45 08             	mov    0x8(%ebp),%eax
8100130d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001310:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001314:	74 18                	je     8100132e <_fflush_r+0x2e>
81001316:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001319:	8b 40 38             	mov    0x38(%eax),%eax
8100131c:	85 c0                	test   %eax,%eax
8100131e:	75 0e                	jne    8100132e <_fflush_r+0x2e>
81001320:	83 ec 0c             	sub    $0xc,%esp
81001323:	ff 75 f4             	push   -0xc(%ebp)
81001326:	e8 c2 05 00 00       	call   810018ed <__sinit>
8100132b:	83 c4 10             	add    $0x10,%esp
8100132e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001332:	66 85 c0             	test   %ax,%ax
81001335:	75 07                	jne    8100133e <_fflush_r+0x3e>
81001337:	b8 00 00 00 00       	mov    $0x0,%eax
8100133c:	eb 15                	jmp    81001353 <_fflush_r+0x53>
8100133e:	83 ec 08             	sub    $0x8,%esp
81001341:	53                   	push   %ebx
81001342:	ff 75 08             	push   0x8(%ebp)
81001345:	e8 90 fd ff ff       	call   810010da <__sflush_r>
8100134a:	83 c4 10             	add    $0x10,%esp
8100134d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001350:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001353:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001356:	c9                   	leave  
81001357:	c3                   	ret    

81001358 <fflush>:
81001358:	55                   	push   %ebp
81001359:	89 e5                	mov    %esp,%ebp
8100135b:	83 ec 08             	sub    $0x8,%esp
8100135e:	8b 55 08             	mov    0x8(%ebp),%edx
81001361:	85 d2                	test   %edx,%edx
81001363:	75 18                	jne    8100137d <fflush+0x25>
81001365:	a1 24 89 00 81       	mov    0x81008924,%eax
8100136a:	83 ec 08             	sub    $0x8,%esp
8100136d:	68 00 13 00 81       	push   $0x81001300
81001372:	50                   	push   %eax
81001373:	e8 bd 1a 00 00       	call   81002e35 <_fwalk_reent>
81001378:	83 c4 10             	add    $0x10,%esp
8100137b:	eb 12                	jmp    8100138f <fflush+0x37>
8100137d:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81001382:	83 ec 08             	sub    $0x8,%esp
81001385:	52                   	push   %edx
81001386:	50                   	push   %eax
81001387:	e8 74 ff ff ff       	call   81001300 <_fflush_r>
8100138c:	83 c4 10             	add    $0x10,%esp
8100138f:	c9                   	leave  
81001390:	c3                   	ret    

81001391 <_fgetc_r>:
81001391:	55                   	push   %ebp
81001392:	89 e5                	mov    %esp,%ebp
81001394:	83 ec 18             	sub    $0x18,%esp
81001397:	8b 45 08             	mov    0x8(%ebp),%eax
8100139a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100139d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810013a1:	74 18                	je     810013bb <_fgetc_r+0x2a>
810013a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013a6:	8b 40 38             	mov    0x38(%eax),%eax
810013a9:	85 c0                	test   %eax,%eax
810013ab:	75 0e                	jne    810013bb <_fgetc_r+0x2a>
810013ad:	83 ec 0c             	sub    $0xc,%esp
810013b0:	ff 75 f4             	push   -0xc(%ebp)
810013b3:	e8 35 05 00 00       	call   810018ed <__sinit>
810013b8:	83 c4 10             	add    $0x10,%esp
810013bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810013be:	8b 40 04             	mov    0x4(%eax),%eax
810013c1:	8d 50 ff             	lea    -0x1(%eax),%edx
810013c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810013c7:	89 50 04             	mov    %edx,0x4(%eax)
810013ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810013cd:	8b 40 04             	mov    0x4(%eax),%eax
810013d0:	85 c0                	test   %eax,%eax
810013d2:	79 13                	jns    810013e7 <_fgetc_r+0x56>
810013d4:	83 ec 08             	sub    $0x8,%esp
810013d7:	ff 75 0c             	push   0xc(%ebp)
810013da:	ff 75 08             	push   0x8(%ebp)
810013dd:	e8 e7 51 00 00       	call   810065c9 <__srget_r>
810013e2:	83 c4 10             	add    $0x10,%esp
810013e5:	eb 13                	jmp    810013fa <_fgetc_r+0x69>
810013e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810013ea:	8b 00                	mov    (%eax),%eax
810013ec:	8d 48 01             	lea    0x1(%eax),%ecx
810013ef:	8b 55 0c             	mov    0xc(%ebp),%edx
810013f2:	89 0a                	mov    %ecx,(%edx)
810013f4:	0f b6 00             	movzbl (%eax),%eax
810013f7:	0f b6 c0             	movzbl %al,%eax
810013fa:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001400:	c9                   	leave  
81001401:	c3                   	ret    

81001402 <fgetc>:
81001402:	55                   	push   %ebp
81001403:	89 e5                	mov    %esp,%ebp
81001405:	83 ec 18             	sub    $0x18,%esp
81001408:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100140d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001410:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001413:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001416:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100141a:	74 18                	je     81001434 <fgetc+0x32>
8100141c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100141f:	8b 40 38             	mov    0x38(%eax),%eax
81001422:	85 c0                	test   %eax,%eax
81001424:	75 0e                	jne    81001434 <fgetc+0x32>
81001426:	83 ec 0c             	sub    $0xc,%esp
81001429:	ff 75 f0             	push   -0x10(%ebp)
8100142c:	e8 bc 04 00 00       	call   810018ed <__sinit>
81001431:	83 c4 10             	add    $0x10,%esp
81001434:	8b 45 08             	mov    0x8(%ebp),%eax
81001437:	8b 40 04             	mov    0x4(%eax),%eax
8100143a:	8d 50 ff             	lea    -0x1(%eax),%edx
8100143d:	8b 45 08             	mov    0x8(%ebp),%eax
81001440:	89 50 04             	mov    %edx,0x4(%eax)
81001443:	8b 45 08             	mov    0x8(%ebp),%eax
81001446:	8b 40 04             	mov    0x4(%eax),%eax
81001449:	85 c0                	test   %eax,%eax
8100144b:	79 13                	jns    81001460 <fgetc+0x5e>
8100144d:	83 ec 08             	sub    $0x8,%esp
81001450:	ff 75 08             	push   0x8(%ebp)
81001453:	ff 75 f4             	push   -0xc(%ebp)
81001456:	e8 6e 51 00 00       	call   810065c9 <__srget_r>
8100145b:	83 c4 10             	add    $0x10,%esp
8100145e:	eb 13                	jmp    81001473 <fgetc+0x71>
81001460:	8b 45 08             	mov    0x8(%ebp),%eax
81001463:	8b 00                	mov    (%eax),%eax
81001465:	8d 48 01             	lea    0x1(%eax),%ecx
81001468:	8b 55 08             	mov    0x8(%ebp),%edx
8100146b:	89 0a                	mov    %ecx,(%edx)
8100146d:	0f b6 00             	movzbl (%eax),%eax
81001470:	0f b6 c0             	movzbl %al,%eax
81001473:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001476:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001479:	c9                   	leave  
8100147a:	c3                   	ret    

8100147b <_fgets_r>:
8100147b:	55                   	push   %ebp
8100147c:	89 e5                	mov    %esp,%ebp
8100147e:	83 ec 28             	sub    $0x28,%esp
81001481:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81001485:	7f 0a                	jg     81001491 <_fgets_r+0x16>
81001487:	b8 00 00 00 00       	mov    $0x0,%eax
8100148c:	e9 46 01 00 00       	jmp    810015d7 <_fgets_r+0x15c>
81001491:	8b 45 0c             	mov    0xc(%ebp),%eax
81001494:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001497:	8b 45 08             	mov    0x8(%ebp),%eax
8100149a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100149d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810014a1:	74 18                	je     810014bb <_fgets_r+0x40>
810014a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014a6:	8b 40 38             	mov    0x38(%eax),%eax
810014a9:	85 c0                	test   %eax,%eax
810014ab:	75 0e                	jne    810014bb <_fgets_r+0x40>
810014ad:	83 ec 0c             	sub    $0xc,%esp
810014b0:	ff 75 ec             	push   -0x14(%ebp)
810014b3:	e8 35 04 00 00       	call   810018ed <__sinit>
810014b8:	83 c4 10             	add    $0x10,%esp
810014bb:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
810014bf:	8b 45 14             	mov    0x14(%ebp),%eax
810014c2:	8b 40 04             	mov    0x4(%eax),%eax
810014c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014c8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810014cc:	75 34                	jne    81001502 <_fgets_r+0x87>
810014ce:	83 ec 08             	sub    $0x8,%esp
810014d1:	ff 75 14             	push   0x14(%ebp)
810014d4:	ff 75 08             	push   0x8(%ebp)
810014d7:	e8 ec 4e 00 00       	call   810063c8 <__srefill_r>
810014dc:	83 c4 10             	add    $0x10,%esp
810014df:	85 c0                	test   %eax,%eax
810014e1:	74 16                	je     810014f9 <_fgets_r+0x7e>
810014e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014e6:	3b 45 0c             	cmp    0xc(%ebp),%eax
810014e9:	0f 85 de 00 00 00    	jne    810015cd <_fgets_r+0x152>
810014ef:	b8 00 00 00 00       	mov    $0x0,%eax
810014f4:	e9 de 00 00 00       	jmp    810015d7 <_fgets_r+0x15c>
810014f9:	8b 45 14             	mov    0x14(%ebp),%eax
810014fc:	8b 40 04             	mov    0x4(%eax),%eax
810014ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001502:	8b 45 14             	mov    0x14(%ebp),%eax
81001505:	8b 00                	mov    (%eax),%eax
81001507:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100150a:	8b 45 10             	mov    0x10(%ebp),%eax
8100150d:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81001510:	76 06                	jbe    81001518 <_fgets_r+0x9d>
81001512:	8b 45 10             	mov    0x10(%ebp),%eax
81001515:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001518:	83 ec 04             	sub    $0x4,%esp
8100151b:	ff 75 f4             	push   -0xc(%ebp)
8100151e:	6a 0a                	push   $0xa
81001520:	ff 75 e8             	push   -0x18(%ebp)
81001523:	e8 c8 34 00 00       	call   810049f0 <memchr>
81001528:	83 c4 10             	add    $0x10,%esp
8100152b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100152e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001532:	74 4a                	je     8100157e <_fgets_r+0x103>
81001534:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81001538:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100153b:	2b 45 e8             	sub    -0x18(%ebp),%eax
8100153e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001541:	8b 45 14             	mov    0x14(%ebp),%eax
81001544:	8b 40 04             	mov    0x4(%eax),%eax
81001547:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100154a:	89 c2                	mov    %eax,%edx
8100154c:	8b 45 14             	mov    0x14(%ebp),%eax
8100154f:	89 50 04             	mov    %edx,0x4(%eax)
81001552:	8b 45 14             	mov    0x14(%ebp),%eax
81001555:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001558:	89 10                	mov    %edx,(%eax)
8100155a:	83 ec 04             	sub    $0x4,%esp
8100155d:	ff 75 f4             	push   -0xc(%ebp)
81001560:	ff 75 e8             	push   -0x18(%ebp)
81001563:	ff 75 f0             	push   -0x10(%ebp)
81001566:	e8 6d 35 00 00       	call   81004ad8 <memcpy>
8100156b:	83 c4 10             	add    $0x10,%esp
8100156e:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001571:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001574:	01 d0                	add    %edx,%eax
81001576:	c6 00 00             	movb   $0x0,(%eax)
81001579:	8b 45 0c             	mov    0xc(%ebp),%eax
8100157c:	eb 59                	jmp    810015d7 <_fgets_r+0x15c>
8100157e:	8b 45 14             	mov    0x14(%ebp),%eax
81001581:	8b 40 04             	mov    0x4(%eax),%eax
81001584:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001587:	89 c2                	mov    %eax,%edx
81001589:	8b 45 14             	mov    0x14(%ebp),%eax
8100158c:	89 50 04             	mov    %edx,0x4(%eax)
8100158f:	8b 45 14             	mov    0x14(%ebp),%eax
81001592:	8b 10                	mov    (%eax),%edx
81001594:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001597:	01 c2                	add    %eax,%edx
81001599:	8b 45 14             	mov    0x14(%ebp),%eax
8100159c:	89 10                	mov    %edx,(%eax)
8100159e:	83 ec 04             	sub    $0x4,%esp
810015a1:	ff 75 f4             	push   -0xc(%ebp)
810015a4:	ff 75 e8             	push   -0x18(%ebp)
810015a7:	ff 75 f0             	push   -0x10(%ebp)
810015aa:	e8 29 35 00 00       	call   81004ad8 <memcpy>
810015af:	83 c4 10             	add    $0x10,%esp
810015b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015b5:	01 45 f0             	add    %eax,-0x10(%ebp)
810015b8:	8b 45 10             	mov    0x10(%ebp),%eax
810015bb:	2b 45 f4             	sub    -0xc(%ebp),%eax
810015be:	89 45 10             	mov    %eax,0x10(%ebp)
810015c1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810015c5:	0f 85 f4 fe ff ff    	jne    810014bf <_fgets_r+0x44>
810015cb:	eb 01                	jmp    810015ce <_fgets_r+0x153>
810015cd:	90                   	nop
810015ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015d1:	c6 00 00             	movb   $0x0,(%eax)
810015d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810015d7:	c9                   	leave  
810015d8:	c3                   	ret    

810015d9 <fgets>:
810015d9:	55                   	push   %ebp
810015da:	89 e5                	mov    %esp,%ebp
810015dc:	83 ec 08             	sub    $0x8,%esp
810015df:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810015e4:	ff 75 10             	push   0x10(%ebp)
810015e7:	ff 75 0c             	push   0xc(%ebp)
810015ea:	ff 75 08             	push   0x8(%ebp)
810015ed:	50                   	push   %eax
810015ee:	e8 88 fe ff ff       	call   8100147b <_fgets_r>
810015f3:	83 c4 10             	add    $0x10,%esp
810015f6:	c9                   	leave  
810015f7:	c3                   	ret    

810015f8 <std>:
810015f8:	55                   	push   %ebp
810015f9:	89 e5                	mov    %esp,%ebp
810015fb:	83 ec 08             	sub    $0x8,%esp
810015fe:	8b 45 08             	mov    0x8(%ebp),%eax
81001601:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001607:	8b 45 08             	mov    0x8(%ebp),%eax
8100160a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001611:	8b 45 08             	mov    0x8(%ebp),%eax
81001614:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100161b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100161e:	89 c2                	mov    %eax,%edx
81001620:	8b 45 08             	mov    0x8(%ebp),%eax
81001623:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001627:	8b 45 08             	mov    0x8(%ebp),%eax
8100162a:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001631:	8b 45 10             	mov    0x10(%ebp),%eax
81001634:	89 c2                	mov    %eax,%edx
81001636:	8b 45 08             	mov    0x8(%ebp),%eax
81001639:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100163d:	8b 45 08             	mov    0x8(%ebp),%eax
81001640:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001647:	8b 45 08             	mov    0x8(%ebp),%eax
8100164a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001651:	8b 45 08             	mov    0x8(%ebp),%eax
81001654:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100165b:	8b 45 08             	mov    0x8(%ebp),%eax
8100165e:	83 c0 5c             	add    $0x5c,%eax
81001661:	83 ec 04             	sub    $0x4,%esp
81001664:	6a 08                	push   $0x8
81001666:	6a 00                	push   $0x0
81001668:	50                   	push   %eax
81001669:	e8 3f 35 00 00       	call   81004bad <memset>
8100166e:	83 c4 10             	add    $0x10,%esp
81001671:	8b 45 08             	mov    0x8(%ebp),%eax
81001674:	8b 55 08             	mov    0x8(%ebp),%edx
81001677:	89 50 1c             	mov    %edx,0x1c(%eax)
8100167a:	8b 45 08             	mov    0x8(%ebp),%eax
8100167d:	c7 40 20 42 69 00 81 	movl   $0x81006942,0x20(%eax)
81001684:	8b 45 08             	mov    0x8(%ebp),%eax
81001687:	c7 40 24 90 69 00 81 	movl   $0x81006990,0x24(%eax)
8100168e:	8b 45 08             	mov    0x8(%ebp),%eax
81001691:	c7 40 28 eb 69 00 81 	movl   $0x810069eb,0x28(%eax)
81001698:	8b 45 08             	mov    0x8(%ebp),%eax
8100169b:	c7 40 2c 35 6a 00 81 	movl   $0x81006a35,0x2c(%eax)
810016a2:	90                   	nop
810016a3:	c9                   	leave  
810016a4:	c3                   	ret    

810016a5 <stdin_init>:
810016a5:	55                   	push   %ebp
810016a6:	89 e5                	mov    %esp,%ebp
810016a8:	83 ec 08             	sub    $0x8,%esp
810016ab:	83 ec 04             	sub    $0x4,%esp
810016ae:	6a 00                	push   $0x0
810016b0:	6a 04                	push   $0x4
810016b2:	ff 75 08             	push   0x8(%ebp)
810016b5:	e8 3e ff ff ff       	call   810015f8 <std>
810016ba:	83 c4 10             	add    $0x10,%esp
810016bd:	90                   	nop
810016be:	c9                   	leave  
810016bf:	c3                   	ret    

810016c0 <stdout_init>:
810016c0:	55                   	push   %ebp
810016c1:	89 e5                	mov    %esp,%ebp
810016c3:	83 ec 08             	sub    $0x8,%esp
810016c6:	83 ec 04             	sub    $0x4,%esp
810016c9:	6a 01                	push   $0x1
810016cb:	6a 09                	push   $0x9
810016cd:	ff 75 08             	push   0x8(%ebp)
810016d0:	e8 23 ff ff ff       	call   810015f8 <std>
810016d5:	83 c4 10             	add    $0x10,%esp
810016d8:	90                   	nop
810016d9:	c9                   	leave  
810016da:	c3                   	ret    

810016db <stderr_init>:
810016db:	55                   	push   %ebp
810016dc:	89 e5                	mov    %esp,%ebp
810016de:	83 ec 08             	sub    $0x8,%esp
810016e1:	83 ec 04             	sub    $0x4,%esp
810016e4:	6a 02                	push   $0x2
810016e6:	6a 12                	push   $0x12
810016e8:	ff 75 08             	push   0x8(%ebp)
810016eb:	e8 08 ff ff ff       	call   810015f8 <std>
810016f0:	83 c4 10             	add    $0x10,%esp
810016f3:	90                   	nop
810016f4:	c9                   	leave  
810016f5:	c3                   	ret    

810016f6 <__sfmoreglue>:
810016f6:	55                   	push   %ebp
810016f7:	89 e5                	mov    %esp,%ebp
810016f9:	53                   	push   %ebx
810016fa:	83 ec 14             	sub    $0x14,%esp
810016fd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001700:	8d 43 ff             	lea    -0x1(%ebx),%eax
81001703:	6b c0 68             	imul   $0x68,%eax,%eax
81001706:	83 c0 74             	add    $0x74,%eax
81001709:	83 ec 08             	sub    $0x8,%esp
8100170c:	50                   	push   %eax
8100170d:	ff 75 08             	push   0x8(%ebp)
81001710:	e8 ac 2a 00 00       	call   810041c1 <_malloc_r>
81001715:	83 c4 10             	add    $0x10,%esp
81001718:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100171b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100171f:	75 07                	jne    81001728 <__sfmoreglue+0x32>
81001721:	b8 00 00 00 00       	mov    $0x0,%eax
81001726:	eb 38                	jmp    81001760 <__sfmoreglue+0x6a>
81001728:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100172b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001731:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001734:	89 58 04             	mov    %ebx,0x4(%eax)
81001737:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100173a:	8d 50 0c             	lea    0xc(%eax),%edx
8100173d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001740:	89 50 08             	mov    %edx,0x8(%eax)
81001743:	89 d8                	mov    %ebx,%eax
81001745:	6b c0 68             	imul   $0x68,%eax,%eax
81001748:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100174b:	83 c2 0c             	add    $0xc,%edx
8100174e:	83 ec 04             	sub    $0x4,%esp
81001751:	50                   	push   %eax
81001752:	6a 00                	push   $0x0
81001754:	52                   	push   %edx
81001755:	e8 53 34 00 00       	call   81004bad <memset>
8100175a:	83 c4 10             	add    $0x10,%esp
8100175d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001760:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001763:	c9                   	leave  
81001764:	c3                   	ret    

81001765 <__sfp>:
81001765:	55                   	push   %ebp
81001766:	89 e5                	mov    %esp,%ebp
81001768:	83 ec 18             	sub    $0x18,%esp
8100176b:	e8 16 02 00 00       	call   81001986 <__sfp_lock_acquire>
81001770:	a1 24 89 00 81       	mov    0x81008924,%eax
81001775:	8b 40 38             	mov    0x38(%eax),%eax
81001778:	85 c0                	test   %eax,%eax
8100177a:	75 11                	jne    8100178d <__sfp+0x28>
8100177c:	a1 24 89 00 81       	mov    0x81008924,%eax
81001781:	83 ec 0c             	sub    $0xc,%esp
81001784:	50                   	push   %eax
81001785:	e8 63 01 00 00       	call   810018ed <__sinit>
8100178a:	83 c4 10             	add    $0x10,%esp
8100178d:	a1 24 89 00 81       	mov    0x81008924,%eax
81001792:	05 e0 02 00 00       	add    $0x2e0,%eax
81001797:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100179a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100179d:	8b 40 08             	mov    0x8(%eax),%eax
810017a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017a6:	8b 40 04             	mov    0x4(%eax),%eax
810017a9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017ac:	eb 10                	jmp    810017be <__sfp+0x59>
810017ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017b1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810017b5:	66 85 c0             	test   %ax,%ax
810017b8:	74 58                	je     81001812 <__sfp+0xad>
810017ba:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810017be:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810017c2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810017c6:	79 e6                	jns    810017ae <__sfp+0x49>
810017c8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017cb:	8b 00                	mov    (%eax),%eax
810017cd:	85 c0                	test   %eax,%eax
810017cf:	75 1e                	jne    810017ef <__sfp+0x8a>
810017d1:	83 ec 08             	sub    $0x8,%esp
810017d4:	6a 04                	push   $0x4
810017d6:	ff 75 08             	push   0x8(%ebp)
810017d9:	e8 18 ff ff ff       	call   810016f6 <__sfmoreglue>
810017de:	83 c4 10             	add    $0x10,%esp
810017e1:	8b 55 ec             	mov    -0x14(%ebp),%edx
810017e4:	89 02                	mov    %eax,(%edx)
810017e6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017e9:	8b 00                	mov    (%eax),%eax
810017eb:	85 c0                	test   %eax,%eax
810017ed:	74 0a                	je     810017f9 <__sfp+0x94>
810017ef:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017f2:	8b 00                	mov    (%eax),%eax
810017f4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810017f7:	eb a1                	jmp    8100179a <__sfp+0x35>
810017f9:	90                   	nop
810017fa:	e8 8d 01 00 00       	call   8100198c <__sfp_lock_release>
810017ff:	8b 45 08             	mov    0x8(%ebp),%eax
81001802:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001808:	b8 00 00 00 00       	mov    $0x0,%eax
8100180d:	e9 9e 00 00 00       	jmp    810018b0 <__sfp+0x14b>
81001812:	90                   	nop
81001813:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001816:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
8100181c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100181f:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81001825:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001828:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8100182f:	e8 58 01 00 00       	call   8100198c <__sfp_lock_release>
81001834:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001837:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100183d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001840:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001847:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100184a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001851:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001854:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100185b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100185e:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001865:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001868:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100186f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001872:	83 c0 5c             	add    $0x5c,%eax
81001875:	83 ec 04             	sub    $0x4,%esp
81001878:	6a 08                	push   $0x8
8100187a:	6a 00                	push   $0x0
8100187c:	50                   	push   %eax
8100187d:	e8 2b 33 00 00       	call   81004bad <memset>
81001882:	83 c4 10             	add    $0x10,%esp
81001885:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001888:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
8100188f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001892:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001899:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100189c:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
810018a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018a6:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
810018ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018b0:	c9                   	leave  
810018b1:	c3                   	ret    

810018b2 <_cleanup_r>:
810018b2:	55                   	push   %ebp
810018b3:	89 e5                	mov    %esp,%ebp
810018b5:	83 ec 18             	sub    $0x18,%esp
810018b8:	c7 45 f4 b6 0f 00 81 	movl   $0x81000fb6,-0xc(%ebp)
810018bf:	83 ec 08             	sub    $0x8,%esp
810018c2:	ff 75 f4             	push   -0xc(%ebp)
810018c5:	ff 75 08             	push   0x8(%ebp)
810018c8:	e8 68 15 00 00       	call   81002e35 <_fwalk_reent>
810018cd:	83 c4 10             	add    $0x10,%esp
810018d0:	90                   	nop
810018d1:	c9                   	leave  
810018d2:	c3                   	ret    

810018d3 <_cleanup>:
810018d3:	55                   	push   %ebp
810018d4:	89 e5                	mov    %esp,%ebp
810018d6:	83 ec 08             	sub    $0x8,%esp
810018d9:	a1 24 89 00 81       	mov    0x81008924,%eax
810018de:	83 ec 0c             	sub    $0xc,%esp
810018e1:	50                   	push   %eax
810018e2:	e8 cb ff ff ff       	call   810018b2 <_cleanup_r>
810018e7:	83 c4 10             	add    $0x10,%esp
810018ea:	90                   	nop
810018eb:	c9                   	leave  
810018ec:	c3                   	ret    

810018ed <__sinit>:
810018ed:	55                   	push   %ebp
810018ee:	89 e5                	mov    %esp,%ebp
810018f0:	83 ec 08             	sub    $0x8,%esp
810018f3:	e8 9a 00 00 00       	call   81001992 <__sinit_lock_acquire>
810018f8:	8b 45 08             	mov    0x8(%ebp),%eax
810018fb:	8b 40 38             	mov    0x38(%eax),%eax
810018fe:	85 c0                	test   %eax,%eax
81001900:	74 07                	je     81001909 <__sinit+0x1c>
81001902:	e8 91 00 00 00       	call   81001998 <__sinit_lock_release>
81001907:	eb 7b                	jmp    81001984 <__sinit+0x97>
81001909:	8b 45 08             	mov    0x8(%ebp),%eax
8100190c:	c7 40 3c b2 18 00 81 	movl   $0x810018b2,0x3c(%eax)
81001913:	8b 45 08             	mov    0x8(%ebp),%eax
81001916:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
8100191d:	00 00 00 
81001920:	8b 45 08             	mov    0x8(%ebp),%eax
81001923:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100192a:	00 00 00 
8100192d:	8b 45 08             	mov    0x8(%ebp),%eax
81001930:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81001936:	8b 45 08             	mov    0x8(%ebp),%eax
81001939:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
8100193f:	8b 45 08             	mov    0x8(%ebp),%eax
81001942:	8b 40 04             	mov    0x4(%eax),%eax
81001945:	83 ec 0c             	sub    $0xc,%esp
81001948:	50                   	push   %eax
81001949:	e8 57 fd ff ff       	call   810016a5 <stdin_init>
8100194e:	83 c4 10             	add    $0x10,%esp
81001951:	8b 45 08             	mov    0x8(%ebp),%eax
81001954:	8b 40 08             	mov    0x8(%eax),%eax
81001957:	83 ec 0c             	sub    $0xc,%esp
8100195a:	50                   	push   %eax
8100195b:	e8 60 fd ff ff       	call   810016c0 <stdout_init>
81001960:	83 c4 10             	add    $0x10,%esp
81001963:	8b 45 08             	mov    0x8(%ebp),%eax
81001966:	8b 40 0c             	mov    0xc(%eax),%eax
81001969:	83 ec 0c             	sub    $0xc,%esp
8100196c:	50                   	push   %eax
8100196d:	e8 69 fd ff ff       	call   810016db <stderr_init>
81001972:	83 c4 10             	add    $0x10,%esp
81001975:	8b 45 08             	mov    0x8(%ebp),%eax
81001978:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
8100197f:	e8 14 00 00 00       	call   81001998 <__sinit_lock_release>
81001984:	c9                   	leave  
81001985:	c3                   	ret    

81001986 <__sfp_lock_acquire>:
81001986:	55                   	push   %ebp
81001987:	89 e5                	mov    %esp,%ebp
81001989:	90                   	nop
8100198a:	5d                   	pop    %ebp
8100198b:	c3                   	ret    

8100198c <__sfp_lock_release>:
8100198c:	55                   	push   %ebp
8100198d:	89 e5                	mov    %esp,%ebp
8100198f:	90                   	nop
81001990:	5d                   	pop    %ebp
81001991:	c3                   	ret    

81001992 <__sinit_lock_acquire>:
81001992:	55                   	push   %ebp
81001993:	89 e5                	mov    %esp,%ebp
81001995:	90                   	nop
81001996:	5d                   	pop    %ebp
81001997:	c3                   	ret    

81001998 <__sinit_lock_release>:
81001998:	55                   	push   %ebp
81001999:	89 e5                	mov    %esp,%ebp
8100199b:	90                   	nop
8100199c:	5d                   	pop    %ebp
8100199d:	c3                   	ret    

8100199e <__fp_lock>:
8100199e:	55                   	push   %ebp
8100199f:	89 e5                	mov    %esp,%ebp
810019a1:	b8 00 00 00 00       	mov    $0x0,%eax
810019a6:	5d                   	pop    %ebp
810019a7:	c3                   	ret    

810019a8 <__fp_unlock>:
810019a8:	55                   	push   %ebp
810019a9:	89 e5                	mov    %esp,%ebp
810019ab:	b8 00 00 00 00       	mov    $0x0,%eax
810019b0:	5d                   	pop    %ebp
810019b1:	c3                   	ret    

810019b2 <__fp_lock_all>:
810019b2:	55                   	push   %ebp
810019b3:	89 e5                	mov    %esp,%ebp
810019b5:	83 ec 08             	sub    $0x8,%esp
810019b8:	e8 c9 ff ff ff       	call   81001986 <__sfp_lock_acquire>
810019bd:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810019c2:	83 ec 08             	sub    $0x8,%esp
810019c5:	68 9e 19 00 81       	push   $0x8100199e
810019ca:	50                   	push   %eax
810019cb:	e8 fd 13 00 00       	call   81002dcd <_fwalk>
810019d0:	83 c4 10             	add    $0x10,%esp
810019d3:	90                   	nop
810019d4:	c9                   	leave  
810019d5:	c3                   	ret    

810019d6 <__fp_unlock_all>:
810019d6:	55                   	push   %ebp
810019d7:	89 e5                	mov    %esp,%ebp
810019d9:	83 ec 08             	sub    $0x8,%esp
810019dc:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810019e1:	83 ec 08             	sub    $0x8,%esp
810019e4:	68 a8 19 00 81       	push   $0x810019a8
810019e9:	50                   	push   %eax
810019ea:	e8 de 13 00 00       	call   81002dcd <_fwalk>
810019ef:	83 c4 10             	add    $0x10,%esp
810019f2:	e8 95 ff ff ff       	call   8100198c <__sfp_lock_release>
810019f7:	90                   	nop
810019f8:	c9                   	leave  
810019f9:	c3                   	ret    

810019fa <_fopen_r>:
810019fa:	55                   	push   %ebp
810019fb:	89 e5                	mov    %esp,%ebp
810019fd:	56                   	push   %esi
810019fe:	53                   	push   %ebx
810019ff:	83 ec 10             	sub    $0x10,%esp
81001a02:	83 ec 04             	sub    $0x4,%esp
81001a05:	8d 45 f0             	lea    -0x10(%ebp),%eax
81001a08:	50                   	push   %eax
81001a09:	ff 75 10             	push   0x10(%ebp)
81001a0c:	ff 75 08             	push   0x8(%ebp)
81001a0f:	e8 66 5a 00 00       	call   8100747a <__sflags>
81001a14:	83 c4 10             	add    $0x10,%esp
81001a17:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a1a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001a1e:	75 0a                	jne    81001a2a <_fopen_r+0x30>
81001a20:	b8 00 00 00 00       	mov    $0x0,%eax
81001a25:	e9 9e 00 00 00       	jmp    81001ac8 <_fopen_r+0xce>
81001a2a:	83 ec 0c             	sub    $0xc,%esp
81001a2d:	ff 75 08             	push   0x8(%ebp)
81001a30:	e8 30 fd ff ff       	call   81001765 <__sfp>
81001a35:	83 c4 10             	add    $0x10,%esp
81001a38:	89 c3                	mov    %eax,%ebx
81001a3a:	85 db                	test   %ebx,%ebx
81001a3c:	75 0a                	jne    81001a48 <_fopen_r+0x4e>
81001a3e:	b8 00 00 00 00       	mov    $0x0,%eax
81001a43:	e9 80 00 00 00       	jmp    81001ac8 <_fopen_r+0xce>
81001a48:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a4b:	68 b6 01 00 00       	push   $0x1b6
81001a50:	50                   	push   %eax
81001a51:	ff 75 0c             	push   0xc(%ebp)
81001a54:	ff 75 08             	push   0x8(%ebp)
81001a57:	e8 34 3d 00 00       	call   81005790 <_open_r>
81001a5c:	83 c4 10             	add    $0x10,%esp
81001a5f:	89 c6                	mov    %eax,%esi
81001a61:	85 f6                	test   %esi,%esi
81001a63:	79 17                	jns    81001a7c <_fopen_r+0x82>
81001a65:	e8 1c ff ff ff       	call   81001986 <__sfp_lock_acquire>
81001a6a:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001a70:	e8 17 ff ff ff       	call   8100198c <__sfp_lock_release>
81001a75:	b8 00 00 00 00       	mov    $0x0,%eax
81001a7a:	eb 4c                	jmp    81001ac8 <_fopen_r+0xce>
81001a7c:	89 f0                	mov    %esi,%eax
81001a7e:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001a82:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a85:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001a89:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001a8c:	c7 43 20 42 69 00 81 	movl   $0x81006942,0x20(%ebx)
81001a93:	c7 43 24 90 69 00 81 	movl   $0x81006990,0x24(%ebx)
81001a9a:	c7 43 28 eb 69 00 81 	movl   $0x810069eb,0x28(%ebx)
81001aa1:	c7 43 2c 35 6a 00 81 	movl   $0x81006a35,0x2c(%ebx)
81001aa8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001aac:	98                   	cwtl   
81001aad:	25 00 01 00 00       	and    $0x100,%eax
81001ab2:	85 c0                	test   %eax,%eax
81001ab4:	74 10                	je     81001ac6 <_fopen_r+0xcc>
81001ab6:	6a 02                	push   $0x2
81001ab8:	6a 00                	push   $0x0
81001aba:	53                   	push   %ebx
81001abb:	ff 75 08             	push   0x8(%ebp)
81001abe:	e8 1b 09 00 00       	call   810023de <_fseek_r>
81001ac3:	83 c4 10             	add    $0x10,%esp
81001ac6:	89 d8                	mov    %ebx,%eax
81001ac8:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001acb:	5b                   	pop    %ebx
81001acc:	5e                   	pop    %esi
81001acd:	5d                   	pop    %ebp
81001ace:	c3                   	ret    

81001acf <fopen>:
81001acf:	55                   	push   %ebp
81001ad0:	89 e5                	mov    %esp,%ebp
81001ad2:	83 ec 08             	sub    $0x8,%esp
81001ad5:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81001ada:	83 ec 04             	sub    $0x4,%esp
81001add:	ff 75 0c             	push   0xc(%ebp)
81001ae0:	ff 75 08             	push   0x8(%ebp)
81001ae3:	50                   	push   %eax
81001ae4:	e8 11 ff ff ff       	call   810019fa <_fopen_r>
81001ae9:	83 c4 10             	add    $0x10,%esp
81001aec:	c9                   	leave  
81001aed:	c3                   	ret    

81001aee <_fiprintf_r>:
81001aee:	55                   	push   %ebp
81001aef:	89 e5                	mov    %esp,%ebp
81001af1:	83 ec 18             	sub    $0x18,%esp
81001af4:	8d 45 14             	lea    0x14(%ebp),%eax
81001af7:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001afa:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001afd:	50                   	push   %eax
81001afe:	ff 75 10             	push   0x10(%ebp)
81001b01:	ff 75 0c             	push   0xc(%ebp)
81001b04:	ff 75 08             	push   0x8(%ebp)
81001b07:	e8 44 33 00 00       	call   81004e50 <_vfiprintf_r>
81001b0c:	83 c4 10             	add    $0x10,%esp
81001b0f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b12:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b15:	c9                   	leave  
81001b16:	c3                   	ret    

81001b17 <fiprintf>:
81001b17:	55                   	push   %ebp
81001b18:	89 e5                	mov    %esp,%ebp
81001b1a:	83 ec 18             	sub    $0x18,%esp
81001b1d:	8d 45 10             	lea    0x10(%ebp),%eax
81001b20:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001b23:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001b26:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81001b2b:	52                   	push   %edx
81001b2c:	ff 75 0c             	push   0xc(%ebp)
81001b2f:	ff 75 08             	push   0x8(%ebp)
81001b32:	50                   	push   %eax
81001b33:	e8 18 33 00 00       	call   81004e50 <_vfiprintf_r>
81001b38:	83 c4 10             	add    $0x10,%esp
81001b3b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b3e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b41:	c9                   	leave  
81001b42:	c3                   	ret    

81001b43 <_fputs_r>:
81001b43:	55                   	push   %ebp
81001b44:	89 e5                	mov    %esp,%ebp
81001b46:	83 ec 28             	sub    $0x28,%esp
81001b49:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b4c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b4f:	83 ec 0c             	sub    $0xc,%esp
81001b52:	ff 75 0c             	push   0xc(%ebp)
81001b55:	e8 b6 50 00 00       	call   81006c10 <strlen>
81001b5a:	83 c4 10             	add    $0x10,%esp
81001b5d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b60:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b63:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001b66:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001b69:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001b6c:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001b73:	8b 45 08             	mov    0x8(%ebp),%eax
81001b76:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b79:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001b7d:	74 18                	je     81001b97 <_fputs_r+0x54>
81001b7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b82:	8b 40 38             	mov    0x38(%eax),%eax
81001b85:	85 c0                	test   %eax,%eax
81001b87:	75 0e                	jne    81001b97 <_fputs_r+0x54>
81001b89:	83 ec 0c             	sub    $0xc,%esp
81001b8c:	ff 75 f4             	push   -0xc(%ebp)
81001b8f:	e8 59 fd ff ff       	call   810018ed <__sinit>
81001b94:	83 c4 10             	add    $0x10,%esp
81001b97:	8b 45 10             	mov    0x10(%ebp),%eax
81001b9a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b9e:	98                   	cwtl   
81001b9f:	25 00 20 00 00       	and    $0x2000,%eax
81001ba4:	85 c0                	test   %eax,%eax
81001ba6:	75 24                	jne    81001bcc <_fputs_r+0x89>
81001ba8:	8b 45 10             	mov    0x10(%ebp),%eax
81001bab:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001baf:	80 cc 20             	or     $0x20,%ah
81001bb2:	89 c2                	mov    %eax,%edx
81001bb4:	8b 45 10             	mov    0x10(%ebp),%eax
81001bb7:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001bbb:	8b 45 10             	mov    0x10(%ebp),%eax
81001bbe:	8b 40 64             	mov    0x64(%eax),%eax
81001bc1:	80 e4 df             	and    $0xdf,%ah
81001bc4:	89 c2                	mov    %eax,%edx
81001bc6:	8b 45 10             	mov    0x10(%ebp),%eax
81001bc9:	89 50 64             	mov    %edx,0x64(%eax)
81001bcc:	83 ec 04             	sub    $0x4,%esp
81001bcf:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81001bd2:	50                   	push   %eax
81001bd3:	ff 75 10             	push   0x10(%ebp)
81001bd6:	ff 75 08             	push   0x8(%ebp)
81001bd9:	e8 51 0d 00 00       	call   8100292f <__sfvwrite_r>
81001bde:	83 c4 10             	add    $0x10,%esp
81001be1:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001be4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001be7:	c9                   	leave  
81001be8:	c3                   	ret    

81001be9 <fputs>:
81001be9:	55                   	push   %ebp
81001bea:	89 e5                	mov    %esp,%ebp
81001bec:	83 ec 08             	sub    $0x8,%esp
81001bef:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81001bf4:	83 ec 04             	sub    $0x4,%esp
81001bf7:	ff 75 0c             	push   0xc(%ebp)
81001bfa:	ff 75 08             	push   0x8(%ebp)
81001bfd:	50                   	push   %eax
81001bfe:	e8 40 ff ff ff       	call   81001b43 <_fputs_r>
81001c03:	83 c4 10             	add    $0x10,%esp
81001c06:	c9                   	leave  
81001c07:	c3                   	ret    

81001c08 <_fread_r>:
81001c08:	55                   	push   %ebp
81001c09:	89 e5                	mov    %esp,%ebp
81001c0b:	57                   	push   %edi
81001c0c:	56                   	push   %esi
81001c0d:	53                   	push   %ebx
81001c0e:	83 ec 2c             	sub    $0x2c,%esp
81001c11:	8b 45 14             	mov    0x14(%ebp),%eax
81001c14:	0f af 45 10          	imul   0x10(%ebp),%eax
81001c18:	89 c3                	mov    %eax,%ebx
81001c1a:	85 db                	test   %ebx,%ebx
81001c1c:	75 0a                	jne    81001c28 <_fread_r+0x20>
81001c1e:	b8 00 00 00 00       	mov    $0x0,%eax
81001c23:	e9 4d 02 00 00       	jmp    81001e75 <_fread_r+0x26d>
81001c28:	8b 45 08             	mov    0x8(%ebp),%eax
81001c2b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c2e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001c32:	74 18                	je     81001c4c <_fread_r+0x44>
81001c34:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001c37:	8b 40 38             	mov    0x38(%eax),%eax
81001c3a:	85 c0                	test   %eax,%eax
81001c3c:	75 0e                	jne    81001c4c <_fread_r+0x44>
81001c3e:	83 ec 0c             	sub    $0xc,%esp
81001c41:	ff 75 e4             	push   -0x1c(%ebp)
81001c44:	e8 a4 fc ff ff       	call   810018ed <__sinit>
81001c49:	83 c4 10             	add    $0x10,%esp
81001c4c:	8b 45 18             	mov    0x18(%ebp),%eax
81001c4f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c53:	98                   	cwtl   
81001c54:	25 00 20 00 00       	and    $0x2000,%eax
81001c59:	85 c0                	test   %eax,%eax
81001c5b:	75 24                	jne    81001c81 <_fread_r+0x79>
81001c5d:	8b 45 18             	mov    0x18(%ebp),%eax
81001c60:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c64:	80 cc 20             	or     $0x20,%ah
81001c67:	89 c2                	mov    %eax,%edx
81001c69:	8b 45 18             	mov    0x18(%ebp),%eax
81001c6c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001c70:	8b 45 18             	mov    0x18(%ebp),%eax
81001c73:	8b 40 64             	mov    0x64(%eax),%eax
81001c76:	80 e4 df             	and    $0xdf,%ah
81001c79:	89 c2                	mov    %eax,%edx
81001c7b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c7e:	89 50 64             	mov    %edx,0x64(%eax)
81001c81:	8b 45 18             	mov    0x18(%ebp),%eax
81001c84:	8b 40 04             	mov    0x4(%eax),%eax
81001c87:	85 c0                	test   %eax,%eax
81001c89:	79 0a                	jns    81001c95 <_fread_r+0x8d>
81001c8b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c8e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001c95:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001c98:	8b 75 0c             	mov    0xc(%ebp),%esi
81001c9b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c9e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001ca2:	98                   	cwtl   
81001ca3:	83 e0 02             	and    $0x2,%eax
81001ca6:	85 c0                	test   %eax,%eax
81001ca8:	0f 84 88 01 00 00    	je     81001e36 <_fread_r+0x22e>
81001cae:	8b 45 18             	mov    0x18(%ebp),%eax
81001cb1:	8b 40 04             	mov    0x4(%eax),%eax
81001cb4:	39 c3                	cmp    %eax,%ebx
81001cb6:	0f 46 c3             	cmovbe %ebx,%eax
81001cb9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001cbc:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001cbf:	8b 45 18             	mov    0x18(%ebp),%eax
81001cc2:	8b 00                	mov    (%eax),%eax
81001cc4:	83 ec 04             	sub    $0x4,%esp
81001cc7:	52                   	push   %edx
81001cc8:	50                   	push   %eax
81001cc9:	56                   	push   %esi
81001cca:	e8 09 2e 00 00       	call   81004ad8 <memcpy>
81001ccf:	83 c4 10             	add    $0x10,%esp
81001cd2:	8b 45 18             	mov    0x18(%ebp),%eax
81001cd5:	8b 10                	mov    (%eax),%edx
81001cd7:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cda:	01 c2                	add    %eax,%edx
81001cdc:	8b 45 18             	mov    0x18(%ebp),%eax
81001cdf:	89 10                	mov    %edx,(%eax)
81001ce1:	8b 45 18             	mov    0x18(%ebp),%eax
81001ce4:	8b 40 04             	mov    0x4(%eax),%eax
81001ce7:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001cea:	89 c2                	mov    %eax,%edx
81001cec:	8b 45 18             	mov    0x18(%ebp),%eax
81001cef:	89 50 04             	mov    %edx,0x4(%eax)
81001cf2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cf5:	01 c6                	add    %eax,%esi
81001cf7:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cfa:	29 c3                	sub    %eax,%ebx
81001cfc:	8b 45 18             	mov    0x18(%ebp),%eax
81001cff:	8b 40 30             	mov    0x30(%eax),%eax
81001d02:	85 c0                	test   %eax,%eax
81001d04:	0f 84 d0 00 00 00    	je     81001dda <_fread_r+0x1d2>
81001d0a:	85 db                	test   %ebx,%ebx
81001d0c:	0f 84 c8 00 00 00    	je     81001dda <_fread_r+0x1d2>
81001d12:	8b 45 18             	mov    0x18(%ebp),%eax
81001d15:	8b 40 30             	mov    0x30(%eax),%eax
81001d18:	8b 55 18             	mov    0x18(%ebp),%edx
81001d1b:	83 c2 40             	add    $0x40,%edx
81001d1e:	39 d0                	cmp    %edx,%eax
81001d20:	74 15                	je     81001d37 <_fread_r+0x12f>
81001d22:	8b 45 18             	mov    0x18(%ebp),%eax
81001d25:	8b 40 30             	mov    0x30(%eax),%eax
81001d28:	83 ec 08             	sub    $0x8,%esp
81001d2b:	50                   	push   %eax
81001d2c:	ff 75 08             	push   0x8(%ebp)
81001d2f:	e8 6e 01 00 00       	call   81001ea2 <_free_r>
81001d34:	83 c4 10             	add    $0x10,%esp
81001d37:	8b 45 18             	mov    0x18(%ebp),%eax
81001d3a:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001d41:	e9 94 00 00 00       	jmp    81001dda <_fread_r+0x1d2>
81001d46:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001d4d:	8b 45 18             	mov    0x18(%ebp),%eax
81001d50:	8b 40 10             	mov    0x10(%eax),%eax
81001d53:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001d56:	8b 45 18             	mov    0x18(%ebp),%eax
81001d59:	8b 00                	mov    (%eax),%eax
81001d5b:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001d5e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d61:	8b 40 14             	mov    0x14(%eax),%eax
81001d64:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001d67:	8b 45 18             	mov    0x18(%ebp),%eax
81001d6a:	89 70 10             	mov    %esi,0x10(%eax)
81001d6d:	89 da                	mov    %ebx,%edx
81001d6f:	8b 45 18             	mov    0x18(%ebp),%eax
81001d72:	89 50 14             	mov    %edx,0x14(%eax)
81001d75:	8b 45 18             	mov    0x18(%ebp),%eax
81001d78:	89 30                	mov    %esi,(%eax)
81001d7a:	83 ec 08             	sub    $0x8,%esp
81001d7d:	ff 75 18             	push   0x18(%ebp)
81001d80:	ff 75 08             	push   0x8(%ebp)
81001d83:	e8 40 46 00 00       	call   810063c8 <__srefill_r>
81001d88:	83 c4 10             	add    $0x10,%esp
81001d8b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001d8e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d91:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001d94:	89 50 10             	mov    %edx,0x10(%eax)
81001d97:	8b 45 18             	mov    0x18(%ebp),%eax
81001d9a:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001d9d:	89 50 14             	mov    %edx,0x14(%eax)
81001da0:	8b 45 18             	mov    0x18(%ebp),%eax
81001da3:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001da6:	89 10                	mov    %edx,(%eax)
81001da8:	8b 45 18             	mov    0x18(%ebp),%eax
81001dab:	8b 40 04             	mov    0x4(%eax),%eax
81001dae:	29 c3                	sub    %eax,%ebx
81001db0:	8b 45 18             	mov    0x18(%ebp),%eax
81001db3:	8b 40 04             	mov    0x4(%eax),%eax
81001db6:	01 c6                	add    %eax,%esi
81001db8:	8b 45 18             	mov    0x18(%ebp),%eax
81001dbb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001dc2:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001dc6:	74 12                	je     81001dda <_fread_r+0x1d2>
81001dc8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dcb:	29 d8                	sub    %ebx,%eax
81001dcd:	ba 00 00 00 00       	mov    $0x0,%edx
81001dd2:	f7 75 10             	divl   0x10(%ebp)
81001dd5:	e9 9b 00 00 00       	jmp    81001e75 <_fread_r+0x26d>
81001dda:	85 db                	test   %ebx,%ebx
81001ddc:	0f 85 64 ff ff ff    	jne    81001d46 <_fread_r+0x13e>
81001de2:	e9 8b 00 00 00       	jmp    81001e72 <_fread_r+0x26a>
81001de7:	89 fa                	mov    %edi,%edx
81001de9:	8b 45 18             	mov    0x18(%ebp),%eax
81001dec:	8b 00                	mov    (%eax),%eax
81001dee:	83 ec 04             	sub    $0x4,%esp
81001df1:	52                   	push   %edx
81001df2:	50                   	push   %eax
81001df3:	56                   	push   %esi
81001df4:	e8 df 2c 00 00       	call   81004ad8 <memcpy>
81001df9:	83 c4 10             	add    $0x10,%esp
81001dfc:	8b 45 18             	mov    0x18(%ebp),%eax
81001dff:	8b 00                	mov    (%eax),%eax
81001e01:	89 fa                	mov    %edi,%edx
81001e03:	01 c2                	add    %eax,%edx
81001e05:	8b 45 18             	mov    0x18(%ebp),%eax
81001e08:	89 10                	mov    %edx,(%eax)
81001e0a:	89 f8                	mov    %edi,%eax
81001e0c:	01 c6                	add    %eax,%esi
81001e0e:	89 f8                	mov    %edi,%eax
81001e10:	29 c3                	sub    %eax,%ebx
81001e12:	83 ec 08             	sub    $0x8,%esp
81001e15:	ff 75 18             	push   0x18(%ebp)
81001e18:	ff 75 08             	push   0x8(%ebp)
81001e1b:	e8 a8 45 00 00       	call   810063c8 <__srefill_r>
81001e20:	83 c4 10             	add    $0x10,%esp
81001e23:	85 c0                	test   %eax,%eax
81001e25:	74 0f                	je     81001e36 <_fread_r+0x22e>
81001e27:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e2a:	29 d8                	sub    %ebx,%eax
81001e2c:	ba 00 00 00 00       	mov    $0x0,%edx
81001e31:	f7 75 10             	divl   0x10(%ebp)
81001e34:	eb 3f                	jmp    81001e75 <_fread_r+0x26d>
81001e36:	8b 45 18             	mov    0x18(%ebp),%eax
81001e39:	8b 78 04             	mov    0x4(%eax),%edi
81001e3c:	89 f8                	mov    %edi,%eax
81001e3e:	39 c3                	cmp    %eax,%ebx
81001e40:	77 a5                	ja     81001de7 <_fread_r+0x1df>
81001e42:	8b 45 18             	mov    0x18(%ebp),%eax
81001e45:	8b 00                	mov    (%eax),%eax
81001e47:	83 ec 04             	sub    $0x4,%esp
81001e4a:	53                   	push   %ebx
81001e4b:	50                   	push   %eax
81001e4c:	56                   	push   %esi
81001e4d:	e8 86 2c 00 00       	call   81004ad8 <memcpy>
81001e52:	83 c4 10             	add    $0x10,%esp
81001e55:	8b 45 18             	mov    0x18(%ebp),%eax
81001e58:	8b 40 04             	mov    0x4(%eax),%eax
81001e5b:	29 d8                	sub    %ebx,%eax
81001e5d:	89 c2                	mov    %eax,%edx
81001e5f:	8b 45 18             	mov    0x18(%ebp),%eax
81001e62:	89 50 04             	mov    %edx,0x4(%eax)
81001e65:	8b 45 18             	mov    0x18(%ebp),%eax
81001e68:	8b 00                	mov    (%eax),%eax
81001e6a:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001e6d:	8b 45 18             	mov    0x18(%ebp),%eax
81001e70:	89 10                	mov    %edx,(%eax)
81001e72:	8b 45 14             	mov    0x14(%ebp),%eax
81001e75:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001e78:	5b                   	pop    %ebx
81001e79:	5e                   	pop    %esi
81001e7a:	5f                   	pop    %edi
81001e7b:	5d                   	pop    %ebp
81001e7c:	c3                   	ret    

81001e7d <fread>:
81001e7d:	55                   	push   %ebp
81001e7e:	89 e5                	mov    %esp,%ebp
81001e80:	83 ec 08             	sub    $0x8,%esp
81001e83:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81001e88:	83 ec 0c             	sub    $0xc,%esp
81001e8b:	ff 75 14             	push   0x14(%ebp)
81001e8e:	ff 75 10             	push   0x10(%ebp)
81001e91:	ff 75 0c             	push   0xc(%ebp)
81001e94:	ff 75 08             	push   0x8(%ebp)
81001e97:	50                   	push   %eax
81001e98:	e8 6b fd ff ff       	call   81001c08 <_fread_r>
81001e9d:	83 c4 20             	add    $0x20,%esp
81001ea0:	c9                   	leave  
81001ea1:	c3                   	ret    

81001ea2 <_free_r>:
81001ea2:	55                   	push   %ebp
81001ea3:	89 e5                	mov    %esp,%ebp
81001ea5:	53                   	push   %ebx
81001ea6:	83 ec 34             	sub    $0x34,%esp
81001ea9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001ead:	0f 84 c4 03 00 00    	je     81002277 <_free_r+0x3d5>
81001eb3:	83 ec 0c             	sub    $0xc,%esp
81001eb6:	ff 75 08             	push   0x8(%ebp)
81001eb9:	e8 77 2d 00 00       	call   81004c35 <__malloc_lock>
81001ebe:	83 c4 10             	add    $0x10,%esp
81001ec1:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ec4:	83 e8 08             	sub    $0x8,%eax
81001ec7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001eca:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ecd:	8b 40 04             	mov    0x4(%eax),%eax
81001ed0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001ed3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ed6:	83 e0 fe             	and    $0xfffffffe,%eax
81001ed9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001edc:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001edf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ee2:	01 d0                	add    %edx,%eax
81001ee4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ee7:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001eea:	8b 40 04             	mov    0x4(%eax),%eax
81001eed:	83 e0 fc             	and    $0xfffffffc,%eax
81001ef0:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001ef3:	b8 00 91 00 81       	mov    $0x81009100,%eax
81001ef8:	8b 40 08             	mov    0x8(%eax),%eax
81001efb:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001efe:	0f 85 94 00 00 00    	jne    81001f98 <_free_r+0xf6>
81001f04:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001f07:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f0a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f0d:	83 e0 01             	and    $0x1,%eax
81001f10:	85 c0                	test   %eax,%eax
81001f12:	75 3a                	jne    81001f4e <_free_r+0xac>
81001f14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f17:	8b 00                	mov    (%eax),%eax
81001f19:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001f1c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f1f:	f7 d8                	neg    %eax
81001f21:	01 45 f4             	add    %eax,-0xc(%ebp)
81001f24:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f27:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f2a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f2d:	8b 40 0c             	mov    0xc(%eax),%eax
81001f30:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f33:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f36:	8b 40 08             	mov    0x8(%eax),%eax
81001f39:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f3c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f3f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f42:	89 50 0c             	mov    %edx,0xc(%eax)
81001f45:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f48:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f4b:	89 50 08             	mov    %edx,0x8(%eax)
81001f4e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f51:	83 c8 01             	or     $0x1,%eax
81001f54:	89 c2                	mov    %eax,%edx
81001f56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f59:	89 50 04             	mov    %edx,0x4(%eax)
81001f5c:	ba 00 91 00 81       	mov    $0x81009100,%edx
81001f61:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f64:	89 42 08             	mov    %eax,0x8(%edx)
81001f67:	a1 08 95 00 81       	mov    0x81009508,%eax
81001f6c:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001f6f:	72 14                	jb     81001f85 <_free_r+0xe3>
81001f71:	a1 e0 9b 00 81       	mov    0x81009be0,%eax
81001f76:	83 ec 08             	sub    $0x8,%esp
81001f79:	50                   	push   %eax
81001f7a:	ff 75 08             	push   0x8(%ebp)
81001f7d:	e8 fb 02 00 00       	call   8100227d <_malloc_trim_r>
81001f82:	83 c4 10             	add    $0x10,%esp
81001f85:	83 ec 0c             	sub    $0xc,%esp
81001f88:	ff 75 08             	push   0x8(%ebp)
81001f8b:	e8 ab 2c 00 00       	call   81004c3b <__malloc_unlock>
81001f90:	83 c4 10             	add    $0x10,%esp
81001f93:	e9 e0 02 00 00       	jmp    81002278 <_free_r+0x3d6>
81001f98:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001f9b:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001f9e:	89 50 04             	mov    %edx,0x4(%eax)
81001fa1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001fa8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001fab:	83 e0 01             	and    $0x1,%eax
81001fae:	85 c0                	test   %eax,%eax
81001fb0:	75 52                	jne    81002004 <_free_r+0x162>
81001fb2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fb5:	8b 00                	mov    (%eax),%eax
81001fb7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001fba:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001fbd:	f7 d8                	neg    %eax
81001fbf:	01 45 f4             	add    %eax,-0xc(%ebp)
81001fc2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001fc5:	01 45 f0             	add    %eax,-0x10(%ebp)
81001fc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fcb:	8b 40 08             	mov    0x8(%eax),%eax
81001fce:	ba 08 91 00 81       	mov    $0x81009108,%edx
81001fd3:	39 d0                	cmp    %edx,%eax
81001fd5:	75 09                	jne    81001fe0 <_free_r+0x13e>
81001fd7:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001fde:	eb 24                	jmp    81002004 <_free_r+0x162>
81001fe0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fe3:	8b 40 0c             	mov    0xc(%eax),%eax
81001fe6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fe9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fec:	8b 40 08             	mov    0x8(%eax),%eax
81001fef:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ff2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ff5:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001ff8:	89 50 0c             	mov    %edx,0xc(%eax)
81001ffb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ffe:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002001:	89 50 08             	mov    %edx,0x8(%eax)
81002004:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002007:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100200a:	01 d0                	add    %edx,%eax
8100200c:	8b 40 04             	mov    0x4(%eax),%eax
8100200f:	83 e0 01             	and    $0x1,%eax
81002012:	85 c0                	test   %eax,%eax
81002014:	75 75                	jne    8100208b <_free_r+0x1e9>
81002016:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002019:	01 45 f0             	add    %eax,-0x10(%ebp)
8100201c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002020:	75 45                	jne    81002067 <_free_r+0x1c5>
81002022:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002025:	8b 40 08             	mov    0x8(%eax),%eax
81002028:	ba 08 91 00 81       	mov    $0x81009108,%edx
8100202d:	39 d0                	cmp    %edx,%eax
8100202f:	75 36                	jne    81002067 <_free_r+0x1c5>
81002031:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002038:	b8 08 91 00 81       	mov    $0x81009108,%eax
8100203d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002040:	89 50 0c             	mov    %edx,0xc(%eax)
81002043:	ba 08 91 00 81       	mov    $0x81009108,%edx
81002048:	8b 40 0c             	mov    0xc(%eax),%eax
8100204b:	89 42 08             	mov    %eax,0x8(%edx)
8100204e:	ba 08 91 00 81       	mov    $0x81009108,%edx
81002053:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002056:	89 50 0c             	mov    %edx,0xc(%eax)
81002059:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100205c:	8b 50 0c             	mov    0xc(%eax),%edx
8100205f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002062:	89 50 08             	mov    %edx,0x8(%eax)
81002065:	eb 24                	jmp    8100208b <_free_r+0x1e9>
81002067:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100206a:	8b 40 0c             	mov    0xc(%eax),%eax
8100206d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002070:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002073:	8b 40 08             	mov    0x8(%eax),%eax
81002076:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002079:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100207c:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100207f:	89 50 0c             	mov    %edx,0xc(%eax)
81002082:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002085:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002088:	89 50 08             	mov    %edx,0x8(%eax)
8100208b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100208e:	83 c8 01             	or     $0x1,%eax
81002091:	89 c2                	mov    %eax,%edx
81002093:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002096:	89 50 04             	mov    %edx,0x4(%eax)
81002099:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100209c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100209f:	01 c2                	add    %eax,%edx
810020a1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020a4:	89 02                	mov    %eax,(%edx)
810020a6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810020aa:	0f 85 b7 01 00 00    	jne    81002267 <_free_r+0x3c5>
810020b0:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
810020b7:	77 7f                	ja     81002138 <_free_r+0x296>
810020b9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020bc:	c1 e8 03             	shr    $0x3,%eax
810020bf:	89 45 d0             	mov    %eax,-0x30(%ebp)
810020c2:	b8 00 91 00 81       	mov    $0x81009100,%eax
810020c7:	8b 58 04             	mov    0x4(%eax),%ebx
810020ca:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020cd:	8d 50 03             	lea    0x3(%eax),%edx
810020d0:	85 c0                	test   %eax,%eax
810020d2:	0f 48 c2             	cmovs  %edx,%eax
810020d5:	c1 f8 02             	sar    $0x2,%eax
810020d8:	ba 01 00 00 00       	mov    $0x1,%edx
810020dd:	89 c1                	mov    %eax,%ecx
810020df:	d3 e2                	shl    %cl,%edx
810020e1:	89 d0                	mov    %edx,%eax
810020e3:	ba 00 91 00 81       	mov    $0x81009100,%edx
810020e8:	09 d8                	or     %ebx,%eax
810020ea:	89 42 04             	mov    %eax,0x4(%edx)
810020ed:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020f0:	83 c0 01             	add    $0x1,%eax
810020f3:	01 c0                	add    %eax,%eax
810020f5:	c1 e0 02             	shl    $0x2,%eax
810020f8:	05 00 91 00 81       	add    $0x81009100,%eax
810020fd:	83 e8 08             	sub    $0x8,%eax
81002100:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002103:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002106:	8b 40 08             	mov    0x8(%eax),%eax
81002109:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100210c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100210f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002112:	89 50 0c             	mov    %edx,0xc(%eax)
81002115:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002118:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100211b:	89 50 08             	mov    %edx,0x8(%eax)
8100211e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002121:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002124:	89 50 08             	mov    %edx,0x8(%eax)
81002127:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100212a:	8b 50 08             	mov    0x8(%eax),%edx
8100212d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002130:	89 50 0c             	mov    %edx,0xc(%eax)
81002133:	e9 2f 01 00 00       	jmp    81002267 <_free_r+0x3c5>
81002138:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100213b:	c1 e8 09             	shr    $0x9,%eax
8100213e:	85 c0                	test   %eax,%eax
81002140:	75 08                	jne    8100214a <_free_r+0x2a8>
81002142:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002145:	c1 e8 03             	shr    $0x3,%eax
81002148:	eb 77                	jmp    810021c1 <_free_r+0x31f>
8100214a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100214d:	c1 e8 09             	shr    $0x9,%eax
81002150:	83 f8 04             	cmp    $0x4,%eax
81002153:	77 0b                	ja     81002160 <_free_r+0x2be>
81002155:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002158:	c1 e8 06             	shr    $0x6,%eax
8100215b:	83 c0 38             	add    $0x38,%eax
8100215e:	eb 61                	jmp    810021c1 <_free_r+0x31f>
81002160:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002163:	c1 e8 09             	shr    $0x9,%eax
81002166:	83 f8 14             	cmp    $0x14,%eax
81002169:	77 0b                	ja     81002176 <_free_r+0x2d4>
8100216b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100216e:	c1 e8 09             	shr    $0x9,%eax
81002171:	83 c0 5b             	add    $0x5b,%eax
81002174:	eb 4b                	jmp    810021c1 <_free_r+0x31f>
81002176:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002179:	c1 e8 09             	shr    $0x9,%eax
8100217c:	83 f8 54             	cmp    $0x54,%eax
8100217f:	77 0b                	ja     8100218c <_free_r+0x2ea>
81002181:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002184:	c1 e8 0c             	shr    $0xc,%eax
81002187:	83 c0 6e             	add    $0x6e,%eax
8100218a:	eb 35                	jmp    810021c1 <_free_r+0x31f>
8100218c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100218f:	c1 e8 09             	shr    $0x9,%eax
81002192:	3d 54 01 00 00       	cmp    $0x154,%eax
81002197:	77 0b                	ja     810021a4 <_free_r+0x302>
81002199:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100219c:	c1 e8 0f             	shr    $0xf,%eax
8100219f:	83 c0 77             	add    $0x77,%eax
810021a2:	eb 1d                	jmp    810021c1 <_free_r+0x31f>
810021a4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021a7:	c1 e8 09             	shr    $0x9,%eax
810021aa:	3d 54 05 00 00       	cmp    $0x554,%eax
810021af:	77 0b                	ja     810021bc <_free_r+0x31a>
810021b1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021b4:	c1 e8 12             	shr    $0x12,%eax
810021b7:	83 c0 7c             	add    $0x7c,%eax
810021ba:	eb 05                	jmp    810021c1 <_free_r+0x31f>
810021bc:	b8 7e 00 00 00       	mov    $0x7e,%eax
810021c1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810021c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021c7:	83 c0 01             	add    $0x1,%eax
810021ca:	01 c0                	add    %eax,%eax
810021cc:	c1 e0 02             	shl    $0x2,%eax
810021cf:	05 00 91 00 81       	add    $0x81009100,%eax
810021d4:	83 e8 08             	sub    $0x8,%eax
810021d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810021da:	8b 45 ec             	mov    -0x14(%ebp),%eax
810021dd:	8b 40 08             	mov    0x8(%eax),%eax
810021e0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810021e3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021e6:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810021e9:	75 36                	jne    81002221 <_free_r+0x37f>
810021eb:	b8 00 91 00 81       	mov    $0x81009100,%eax
810021f0:	8b 58 04             	mov    0x4(%eax),%ebx
810021f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021f6:	8d 50 03             	lea    0x3(%eax),%edx
810021f9:	85 c0                	test   %eax,%eax
810021fb:	0f 48 c2             	cmovs  %edx,%eax
810021fe:	c1 f8 02             	sar    $0x2,%eax
81002201:	ba 01 00 00 00       	mov    $0x1,%edx
81002206:	89 c1                	mov    %eax,%ecx
81002208:	d3 e2                	shl    %cl,%edx
8100220a:	89 d0                	mov    %edx,%eax
8100220c:	ba 00 91 00 81       	mov    $0x81009100,%edx
81002211:	09 d8                	or     %ebx,%eax
81002213:	89 42 04             	mov    %eax,0x4(%edx)
81002216:	eb 28                	jmp    81002240 <_free_r+0x39e>
81002218:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100221b:	8b 40 08             	mov    0x8(%eax),%eax
8100221e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002221:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002224:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002227:	74 0e                	je     81002237 <_free_r+0x395>
81002229:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100222c:	8b 40 04             	mov    0x4(%eax),%eax
8100222f:	83 e0 fc             	and    $0xfffffffc,%eax
81002232:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002235:	72 e1                	jb     81002218 <_free_r+0x376>
81002237:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100223a:	8b 40 0c             	mov    0xc(%eax),%eax
8100223d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002240:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002243:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002246:	89 50 0c             	mov    %edx,0xc(%eax)
81002249:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100224c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100224f:	89 50 08             	mov    %edx,0x8(%eax)
81002252:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002255:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002258:	89 50 08             	mov    %edx,0x8(%eax)
8100225b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100225e:	8b 50 08             	mov    0x8(%eax),%edx
81002261:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002264:	89 50 0c             	mov    %edx,0xc(%eax)
81002267:	83 ec 0c             	sub    $0xc,%esp
8100226a:	ff 75 08             	push   0x8(%ebp)
8100226d:	e8 c9 29 00 00       	call   81004c3b <__malloc_unlock>
81002272:	83 c4 10             	add    $0x10,%esp
81002275:	eb 01                	jmp    81002278 <_free_r+0x3d6>
81002277:	90                   	nop
81002278:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100227b:	c9                   	leave  
8100227c:	c3                   	ret    

8100227d <_malloc_trim_r>:
8100227d:	55                   	push   %ebp
8100227e:	89 e5                	mov    %esp,%ebp
81002280:	83 ec 28             	sub    $0x28,%esp
81002283:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
8100228a:	83 ec 0c             	sub    $0xc,%esp
8100228d:	ff 75 08             	push   0x8(%ebp)
81002290:	e8 a0 29 00 00       	call   81004c35 <__malloc_lock>
81002295:	83 c4 10             	add    $0x10,%esp
81002298:	b8 00 91 00 81       	mov    $0x81009100,%eax
8100229d:	8b 40 08             	mov    0x8(%eax),%eax
810022a0:	8b 40 04             	mov    0x4(%eax),%eax
810022a3:	83 e0 fc             	and    $0xfffffffc,%eax
810022a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810022a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810022ac:	2b 45 0c             	sub    0xc(%ebp),%eax
810022af:	89 c2                	mov    %eax,%edx
810022b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022b4:	01 d0                	add    %edx,%eax
810022b6:	83 e8 11             	sub    $0x11,%eax
810022b9:	ba 00 00 00 00       	mov    $0x0,%edx
810022be:	f7 75 f4             	divl   -0xc(%ebp)
810022c1:	83 e8 01             	sub    $0x1,%eax
810022c4:	0f af 45 f4          	imul   -0xc(%ebp),%eax
810022c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810022cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022ce:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810022d1:	7d 18                	jge    810022eb <_malloc_trim_r+0x6e>
810022d3:	83 ec 0c             	sub    $0xc,%esp
810022d6:	ff 75 08             	push   0x8(%ebp)
810022d9:	e8 5d 29 00 00       	call   81004c3b <__malloc_unlock>
810022de:	83 c4 10             	add    $0x10,%esp
810022e1:	b8 00 00 00 00       	mov    $0x0,%eax
810022e6:	e9 f1 00 00 00       	jmp    810023dc <_malloc_trim_r+0x15f>
810022eb:	83 ec 08             	sub    $0x8,%esp
810022ee:	6a 00                	push   $0x0
810022f0:	ff 75 08             	push   0x8(%ebp)
810022f3:	e8 51 43 00 00       	call   81006649 <_sbrk_r>
810022f8:	83 c4 10             	add    $0x10,%esp
810022fb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810022fe:	b8 00 91 00 81       	mov    $0x81009100,%eax
81002303:	8b 50 08             	mov    0x8(%eax),%edx
81002306:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002309:	01 d0                	add    %edx,%eax
8100230b:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8100230e:	74 18                	je     81002328 <_malloc_trim_r+0xab>
81002310:	83 ec 0c             	sub    $0xc,%esp
81002313:	ff 75 08             	push   0x8(%ebp)
81002316:	e8 20 29 00 00       	call   81004c3b <__malloc_unlock>
8100231b:	83 c4 10             	add    $0x10,%esp
8100231e:	b8 00 00 00 00       	mov    $0x0,%eax
81002323:	e9 b4 00 00 00       	jmp    810023dc <_malloc_trim_r+0x15f>
81002328:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100232b:	f7 d8                	neg    %eax
8100232d:	83 ec 08             	sub    $0x8,%esp
81002330:	50                   	push   %eax
81002331:	ff 75 08             	push   0x8(%ebp)
81002334:	e8 10 43 00 00       	call   81006649 <_sbrk_r>
81002339:	83 c4 10             	add    $0x10,%esp
8100233c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100233f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002343:	75 61                	jne    810023a6 <_malloc_trim_r+0x129>
81002345:	83 ec 08             	sub    $0x8,%esp
81002348:	6a 00                	push   $0x0
8100234a:	ff 75 08             	push   0x8(%ebp)
8100234d:	e8 f7 42 00 00       	call   81006649 <_sbrk_r>
81002352:	83 c4 10             	add    $0x10,%esp
81002355:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002358:	b8 00 91 00 81       	mov    $0x81009100,%eax
8100235d:	8b 50 08             	mov    0x8(%eax),%edx
81002360:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002363:	29 d0                	sub    %edx,%eax
81002365:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002368:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
8100236c:	7e 23                	jle    81002391 <_malloc_trim_r+0x114>
8100236e:	8b 15 0c 95 00 81    	mov    0x8100950c,%edx
81002374:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002377:	29 d0                	sub    %edx,%eax
81002379:	a3 00 9c 00 81       	mov    %eax,0x81009c00
8100237e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002381:	83 c8 01             	or     $0x1,%eax
81002384:	89 c2                	mov    %eax,%edx
81002386:	b8 00 91 00 81       	mov    $0x81009100,%eax
8100238b:	8b 40 08             	mov    0x8(%eax),%eax
8100238e:	89 50 04             	mov    %edx,0x4(%eax)
81002391:	83 ec 0c             	sub    $0xc,%esp
81002394:	ff 75 08             	push   0x8(%ebp)
81002397:	e8 9f 28 00 00       	call   81004c3b <__malloc_unlock>
8100239c:	83 c4 10             	add    $0x10,%esp
8100239f:	b8 00 00 00 00       	mov    $0x0,%eax
810023a4:	eb 36                	jmp    810023dc <_malloc_trim_r+0x15f>
810023a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810023a9:	2b 45 ec             	sub    -0x14(%ebp),%eax
810023ac:	83 c8 01             	or     $0x1,%eax
810023af:	89 c2                	mov    %eax,%edx
810023b1:	b8 00 91 00 81       	mov    $0x81009100,%eax
810023b6:	8b 40 08             	mov    0x8(%eax),%eax
810023b9:	89 50 04             	mov    %edx,0x4(%eax)
810023bc:	a1 00 9c 00 81       	mov    0x81009c00,%eax
810023c1:	2b 45 ec             	sub    -0x14(%ebp),%eax
810023c4:	a3 00 9c 00 81       	mov    %eax,0x81009c00
810023c9:	83 ec 0c             	sub    $0xc,%esp
810023cc:	ff 75 08             	push   0x8(%ebp)
810023cf:	e8 67 28 00 00       	call   81004c3b <__malloc_unlock>
810023d4:	83 c4 10             	add    $0x10,%esp
810023d7:	b8 01 00 00 00       	mov    $0x1,%eax
810023dc:	c9                   	leave  
810023dd:	c3                   	ret    

810023de <_fseek_r>:
810023de:	55                   	push   %ebp
810023df:	89 e5                	mov    %esp,%ebp
810023e1:	83 ec 08             	sub    $0x8,%esp
810023e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810023e7:	ff 75 14             	push   0x14(%ebp)
810023ea:	ff 75 10             	push   0x10(%ebp)
810023ed:	50                   	push   %eax
810023ee:	ff 75 08             	push   0x8(%ebp)
810023f1:	e8 25 00 00 00       	call   8100241b <_fseeko_r>
810023f6:	83 c4 10             	add    $0x10,%esp
810023f9:	c9                   	leave  
810023fa:	c3                   	ret    

810023fb <fseek>:
810023fb:	55                   	push   %ebp
810023fc:	89 e5                	mov    %esp,%ebp
810023fe:	83 ec 08             	sub    $0x8,%esp
81002401:	8b 55 08             	mov    0x8(%ebp),%edx
81002404:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81002409:	ff 75 10             	push   0x10(%ebp)
8100240c:	ff 75 0c             	push   0xc(%ebp)
8100240f:	52                   	push   %edx
81002410:	50                   	push   %eax
81002411:	e8 c8 ff ff ff       	call   810023de <_fseek_r>
81002416:	83 c4 10             	add    $0x10,%esp
81002419:	c9                   	leave  
8100241a:	c3                   	ret    

8100241b <_fseeko_r>:
8100241b:	55                   	push   %ebp
8100241c:	89 e5                	mov    %esp,%ebp
8100241e:	56                   	push   %esi
8100241f:	53                   	push   %ebx
81002420:	83 ec 60             	sub    $0x60,%esp
81002423:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002426:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100242d:	8b 45 08             	mov    0x8(%ebp),%eax
81002430:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002433:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002437:	74 18                	je     81002451 <_fseeko_r+0x36>
81002439:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100243c:	8b 40 38             	mov    0x38(%eax),%eax
8100243f:	85 c0                	test   %eax,%eax
81002441:	75 0e                	jne    81002451 <_fseeko_r+0x36>
81002443:	83 ec 0c             	sub    $0xc,%esp
81002446:	ff 75 e4             	push   -0x1c(%ebp)
81002449:	e8 9f f4 ff ff       	call   810018ed <__sinit>
8100244e:	83 c4 10             	add    $0x10,%esp
81002451:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002455:	98                   	cwtl   
81002456:	25 00 01 00 00       	and    $0x100,%eax
8100245b:	85 c0                	test   %eax,%eax
8100245d:	74 1b                	je     8100247a <_fseeko_r+0x5f>
8100245f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002463:	98                   	cwtl   
81002464:	83 e0 08             	and    $0x8,%eax
81002467:	85 c0                	test   %eax,%eax
81002469:	74 0f                	je     8100247a <_fseeko_r+0x5f>
8100246b:	83 ec 08             	sub    $0x8,%esp
8100246e:	53                   	push   %ebx
8100246f:	ff 75 08             	push   0x8(%ebp)
81002472:	e8 89 ee ff ff       	call   81001300 <_fflush_r>
81002477:	83 c4 10             	add    $0x10,%esp
8100247a:	8b 43 28             	mov    0x28(%ebx),%eax
8100247d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002480:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002484:	75 13                	jne    81002499 <_fseeko_r+0x7e>
81002486:	8b 45 08             	mov    0x8(%ebp),%eax
81002489:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
8100248f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002494:	e9 2c 04 00 00       	jmp    810028c5 <_fseeko_r+0x4aa>
81002499:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
8100249d:	0f 84 bc 00 00 00    	je     8100255f <_fseeko_r+0x144>
810024a3:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
810024a7:	0f 8f bb 00 00 00    	jg     81002568 <_fseeko_r+0x14d>
810024ad:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810024b1:	0f 84 a8 00 00 00    	je     8100255f <_fseeko_r+0x144>
810024b7:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810024bb:	0f 85 a7 00 00 00    	jne    81002568 <_fseeko_r+0x14d>
810024c1:	83 ec 08             	sub    $0x8,%esp
810024c4:	53                   	push   %ebx
810024c5:	ff 75 08             	push   0x8(%ebp)
810024c8:	e8 33 ee ff ff       	call   81001300 <_fflush_r>
810024cd:	83 c4 10             	add    $0x10,%esp
810024d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024d4:	98                   	cwtl   
810024d5:	25 00 10 00 00       	and    $0x1000,%eax
810024da:	85 c0                	test   %eax,%eax
810024dc:	74 08                	je     810024e6 <_fseeko_r+0xcb>
810024de:	8b 43 50             	mov    0x50(%ebx),%eax
810024e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024e4:	eb 26                	jmp    8100250c <_fseeko_r+0xf1>
810024e6:	8b 43 1c             	mov    0x1c(%ebx),%eax
810024e9:	6a 01                	push   $0x1
810024eb:	6a 00                	push   $0x0
810024ed:	50                   	push   %eax
810024ee:	ff 75 08             	push   0x8(%ebp)
810024f1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810024f4:	ff d0                	call   *%eax
810024f6:	83 c4 10             	add    $0x10,%esp
810024f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024fc:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002500:	75 0a                	jne    8100250c <_fseeko_r+0xf1>
81002502:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002507:	e9 b9 03 00 00       	jmp    810028c5 <_fseeko_r+0x4aa>
8100250c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002510:	98                   	cwtl   
81002511:	83 e0 04             	and    $0x4,%eax
81002514:	85 c0                	test   %eax,%eax
81002516:	74 15                	je     8100252d <_fseeko_r+0x112>
81002518:	8b 43 04             	mov    0x4(%ebx),%eax
8100251b:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100251e:	8b 43 30             	mov    0x30(%ebx),%eax
81002521:	85 c0                	test   %eax,%eax
81002523:	74 24                	je     81002549 <_fseeko_r+0x12e>
81002525:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002528:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100252b:	eb 1c                	jmp    81002549 <_fseeko_r+0x12e>
8100252d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002531:	98                   	cwtl   
81002532:	83 e0 08             	and    $0x8,%eax
81002535:	85 c0                	test   %eax,%eax
81002537:	74 10                	je     81002549 <_fseeko_r+0x12e>
81002539:	8b 03                	mov    (%ebx),%eax
8100253b:	85 c0                	test   %eax,%eax
8100253d:	74 0a                	je     81002549 <_fseeko_r+0x12e>
8100253f:	8b 03                	mov    (%ebx),%eax
81002541:	8b 53 10             	mov    0x10(%ebx),%edx
81002544:	29 d0                	sub    %edx,%eax
81002546:	01 45 f0             	add    %eax,-0x10(%ebp)
81002549:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100254c:	01 45 10             	add    %eax,0x10(%ebp)
8100254f:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81002556:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100255d:	eb 1c                	jmp    8100257b <_fseeko_r+0x160>
8100255f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81002566:	eb 13                	jmp    8100257b <_fseeko_r+0x160>
81002568:	8b 45 08             	mov    0x8(%ebp),%eax
8100256b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81002571:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002576:	e9 4a 03 00 00       	jmp    810028c5 <_fseeko_r+0x4aa>
8100257b:	8b 43 10             	mov    0x10(%ebx),%eax
8100257e:	85 c0                	test   %eax,%eax
81002580:	75 0f                	jne    81002591 <_fseeko_r+0x176>
81002582:	83 ec 08             	sub    $0x8,%esp
81002585:	53                   	push   %ebx
81002586:	ff 75 08             	push   0x8(%ebp)
81002589:	e8 e7 17 00 00       	call   81003d75 <__smakebuf_r>
8100258e:	83 c4 10             	add    $0x10,%esp
81002591:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002595:	98                   	cwtl   
81002596:	25 1a 08 00 00       	and    $0x81a,%eax
8100259b:	85 c0                	test   %eax,%eax
8100259d:	0f 85 7d 02 00 00    	jne    81002820 <_fseeko_r+0x405>
810025a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025a7:	98                   	cwtl   
810025a8:	25 00 04 00 00       	and    $0x400,%eax
810025ad:	85 c0                	test   %eax,%eax
810025af:	75 5f                	jne    81002610 <_fseeko_r+0x1f5>
810025b1:	81 7d e0 eb 69 00 81 	cmpl   $0x810069eb,-0x20(%ebp)
810025b8:	75 34                	jne    810025ee <_fseeko_r+0x1d3>
810025ba:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810025be:	66 85 c0             	test   %ax,%ax
810025c1:	78 2b                	js     810025ee <_fseeko_r+0x1d3>
810025c3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810025c7:	98                   	cwtl   
810025c8:	83 ec 04             	sub    $0x4,%esp
810025cb:	8d 55 98             	lea    -0x68(%ebp),%edx
810025ce:	52                   	push   %edx
810025cf:	50                   	push   %eax
810025d0:	ff 75 08             	push   0x8(%ebp)
810025d3:	e8 14 03 00 00       	call   810028ec <_fstat_r>
810025d8:	83 c4 10             	add    $0x10,%esp
810025db:	85 c0                	test   %eax,%eax
810025dd:	75 0f                	jne    810025ee <_fseeko_r+0x1d3>
810025df:	8b 45 9c             	mov    -0x64(%ebp),%eax
810025e2:	25 00 f0 00 00       	and    $0xf000,%eax
810025e7:	3d 00 80 00 00       	cmp    $0x8000,%eax
810025ec:	74 10                	je     810025fe <_fseeko_r+0x1e3>
810025ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025f2:	80 cc 08             	or     $0x8,%ah
810025f5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025f9:	e9 2f 02 00 00       	jmp    8100282d <_fseeko_r+0x412>
810025fe:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81002605:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002609:	80 cc 04             	or     $0x4,%ah
8100260c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002610:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002614:	75 08                	jne    8100261e <_fseeko_r+0x203>
81002616:	8b 45 10             	mov    0x10(%ebp),%eax
81002619:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100261c:	eb 2b                	jmp    81002649 <_fseeko_r+0x22e>
8100261e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002622:	98                   	cwtl   
81002623:	83 ec 04             	sub    $0x4,%esp
81002626:	8d 55 98             	lea    -0x68(%ebp),%edx
81002629:	52                   	push   %edx
8100262a:	50                   	push   %eax
8100262b:	ff 75 08             	push   0x8(%ebp)
8100262e:	e8 b9 02 00 00       	call   810028ec <_fstat_r>
81002633:	83 c4 10             	add    $0x10,%esp
81002636:	85 c0                	test   %eax,%eax
81002638:	0f 85 e5 01 00 00    	jne    81002823 <_fseeko_r+0x408>
8100263e:	8b 55 a8             	mov    -0x58(%ebp),%edx
81002641:	8b 45 10             	mov    0x10(%ebp),%eax
81002644:	01 d0                	add    %edx,%eax
81002646:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002649:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100264d:	75 49                	jne    81002698 <_fseeko_r+0x27d>
8100264f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002653:	98                   	cwtl   
81002654:	25 00 10 00 00       	and    $0x1000,%eax
81002659:	85 c0                	test   %eax,%eax
8100265b:	74 08                	je     81002665 <_fseeko_r+0x24a>
8100265d:	8b 43 50             	mov    0x50(%ebx),%eax
81002660:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002663:	eb 20                	jmp    81002685 <_fseeko_r+0x26a>
81002665:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002668:	6a 01                	push   $0x1
8100266a:	6a 00                	push   $0x0
8100266c:	50                   	push   %eax
8100266d:	ff 75 08             	push   0x8(%ebp)
81002670:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002673:	ff d0                	call   *%eax
81002675:	83 c4 10             	add    $0x10,%esp
81002678:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100267b:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8100267f:	0f 84 a1 01 00 00    	je     81002826 <_fseeko_r+0x40b>
81002685:	8b 43 04             	mov    0x4(%ebx),%eax
81002688:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100268b:	8b 43 30             	mov    0x30(%ebx),%eax
8100268e:	85 c0                	test   %eax,%eax
81002690:	74 06                	je     81002698 <_fseeko_r+0x27d>
81002692:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002695:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002698:	8b 43 30             	mov    0x30(%ebx),%eax
8100269b:	85 c0                	test   %eax,%eax
8100269d:	74 22                	je     810026c1 <_fseeko_r+0x2a6>
8100269f:	8b 43 04             	mov    0x4(%ebx),%eax
810026a2:	01 45 f0             	add    %eax,-0x10(%ebp)
810026a5:	8b 43 38             	mov    0x38(%ebx),%eax
810026a8:	8b 53 10             	mov    0x10(%ebx),%edx
810026ab:	29 d0                	sub    %edx,%eax
810026ad:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810026b3:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026b6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026b9:	8b 43 3c             	mov    0x3c(%ebx),%eax
810026bc:	01 45 ec             	add    %eax,-0x14(%ebp)
810026bf:	eb 19                	jmp    810026da <_fseeko_r+0x2bf>
810026c1:	8b 03                	mov    (%ebx),%eax
810026c3:	8b 53 10             	mov    0x10(%ebx),%edx
810026c6:	29 d0                	sub    %edx,%eax
810026c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810026ce:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026d4:	8b 43 04             	mov    0x4(%ebx),%eax
810026d7:	01 45 ec             	add    %eax,-0x14(%ebp)
810026da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026dd:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810026e0:	7c 7c                	jl     8100275e <_fseeko_r+0x343>
810026e2:	8b 55 f0             	mov    -0x10(%ebp),%edx
810026e5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026e8:	01 c2                	add    %eax,%edx
810026ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026ed:	39 c2                	cmp    %eax,%edx
810026ef:	76 6d                	jbe    8100275e <_fseeko_r+0x343>
810026f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026f4:	2b 45 f0             	sub    -0x10(%ebp),%eax
810026f7:	89 c6                	mov    %eax,%esi
810026f9:	8b 43 10             	mov    0x10(%ebx),%eax
810026fc:	89 f2                	mov    %esi,%edx
810026fe:	01 d0                	add    %edx,%eax
81002700:	89 03                	mov    %eax,(%ebx)
81002702:	89 f2                	mov    %esi,%edx
81002704:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002707:	29 d0                	sub    %edx,%eax
81002709:	89 43 04             	mov    %eax,0x4(%ebx)
8100270c:	8b 43 30             	mov    0x30(%ebx),%eax
8100270f:	85 c0                	test   %eax,%eax
81002711:	74 23                	je     81002736 <_fseeko_r+0x31b>
81002713:	8b 53 30             	mov    0x30(%ebx),%edx
81002716:	8d 43 40             	lea    0x40(%ebx),%eax
81002719:	39 c2                	cmp    %eax,%edx
8100271b:	74 12                	je     8100272f <_fseeko_r+0x314>
8100271d:	8b 43 30             	mov    0x30(%ebx),%eax
81002720:	83 ec 08             	sub    $0x8,%esp
81002723:	50                   	push   %eax
81002724:	ff 75 08             	push   0x8(%ebp)
81002727:	e8 76 f7 ff ff       	call   81001ea2 <_free_r>
8100272c:	83 c4 10             	add    $0x10,%esp
8100272f:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002736:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100273a:	83 e0 df             	and    $0xffffffdf,%eax
8100273d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002741:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002744:	83 ec 04             	sub    $0x4,%esp
81002747:	6a 08                	push   $0x8
81002749:	6a 00                	push   $0x0
8100274b:	50                   	push   %eax
8100274c:	e8 5c 24 00 00       	call   81004bad <memset>
81002751:	83 c4 10             	add    $0x10,%esp
81002754:	b8 00 00 00 00       	mov    $0x0,%eax
81002759:	e9 67 01 00 00       	jmp    810028c5 <_fseeko_r+0x4aa>
8100275e:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002761:	f7 d8                	neg    %eax
81002763:	23 45 f4             	and    -0xc(%ebp),%eax
81002766:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002769:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100276c:	6a 00                	push   $0x0
8100276e:	ff 75 f0             	push   -0x10(%ebp)
81002771:	50                   	push   %eax
81002772:	ff 75 08             	push   0x8(%ebp)
81002775:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002778:	ff d0                	call   *%eax
8100277a:	83 c4 10             	add    $0x10,%esp
8100277d:	83 f8 ff             	cmp    $0xffffffff,%eax
81002780:	0f 84 a3 00 00 00    	je     81002829 <_fseeko_r+0x40e>
81002786:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100278d:	8b 43 10             	mov    0x10(%ebx),%eax
81002790:	89 03                	mov    %eax,(%ebx)
81002792:	8b 43 30             	mov    0x30(%ebx),%eax
81002795:	85 c0                	test   %eax,%eax
81002797:	74 23                	je     810027bc <_fseeko_r+0x3a1>
81002799:	8b 53 30             	mov    0x30(%ebx),%edx
8100279c:	8d 43 40             	lea    0x40(%ebx),%eax
8100279f:	39 c2                	cmp    %eax,%edx
810027a1:	74 12                	je     810027b5 <_fseeko_r+0x39a>
810027a3:	8b 43 30             	mov    0x30(%ebx),%eax
810027a6:	83 ec 08             	sub    $0x8,%esp
810027a9:	50                   	push   %eax
810027aa:	ff 75 08             	push   0x8(%ebp)
810027ad:	e8 f0 f6 ff ff       	call   81001ea2 <_free_r>
810027b2:	83 c4 10             	add    $0x10,%esp
810027b5:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810027bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027c0:	83 e0 df             	and    $0xffffffdf,%eax
810027c3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027ca:	2b 45 f0             	sub    -0x10(%ebp),%eax
810027cd:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027d0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810027d4:	74 2d                	je     81002803 <_fseeko_r+0x3e8>
810027d6:	83 ec 08             	sub    $0x8,%esp
810027d9:	53                   	push   %ebx
810027da:	ff 75 08             	push   0x8(%ebp)
810027dd:	e8 e6 3b 00 00       	call   810063c8 <__srefill_r>
810027e2:	83 c4 10             	add    $0x10,%esp
810027e5:	85 c0                	test   %eax,%eax
810027e7:	75 43                	jne    8100282c <_fseeko_r+0x411>
810027e9:	8b 43 04             	mov    0x4(%ebx),%eax
810027ec:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810027ef:	77 3b                	ja     8100282c <_fseeko_r+0x411>
810027f1:	8b 13                	mov    (%ebx),%edx
810027f3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810027f6:	01 d0                	add    %edx,%eax
810027f8:	89 03                	mov    %eax,(%ebx)
810027fa:	8b 43 04             	mov    0x4(%ebx),%eax
810027fd:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002800:	89 43 04             	mov    %eax,0x4(%ebx)
81002803:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002806:	83 ec 04             	sub    $0x4,%esp
81002809:	6a 08                	push   $0x8
8100280b:	6a 00                	push   $0x0
8100280d:	50                   	push   %eax
8100280e:	e8 9a 23 00 00       	call   81004bad <memset>
81002813:	83 c4 10             	add    $0x10,%esp
81002816:	b8 00 00 00 00       	mov    $0x0,%eax
8100281b:	e9 a5 00 00 00       	jmp    810028c5 <_fseeko_r+0x4aa>
81002820:	90                   	nop
81002821:	eb 0a                	jmp    8100282d <_fseeko_r+0x412>
81002823:	90                   	nop
81002824:	eb 07                	jmp    8100282d <_fseeko_r+0x412>
81002826:	90                   	nop
81002827:	eb 04                	jmp    8100282d <_fseeko_r+0x412>
81002829:	90                   	nop
8100282a:	eb 01                	jmp    8100282d <_fseeko_r+0x412>
8100282c:	90                   	nop
8100282d:	83 ec 08             	sub    $0x8,%esp
81002830:	53                   	push   %ebx
81002831:	ff 75 08             	push   0x8(%ebp)
81002834:	e8 c7 ea ff ff       	call   81001300 <_fflush_r>
81002839:	83 c4 10             	add    $0x10,%esp
8100283c:	85 c0                	test   %eax,%eax
8100283e:	75 1a                	jne    8100285a <_fseeko_r+0x43f>
81002840:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002843:	ff 75 14             	push   0x14(%ebp)
81002846:	ff 75 10             	push   0x10(%ebp)
81002849:	50                   	push   %eax
8100284a:	ff 75 08             	push   0x8(%ebp)
8100284d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002850:	ff d0                	call   *%eax
81002852:	83 c4 10             	add    $0x10,%esp
81002855:	83 f8 ff             	cmp    $0xffffffff,%eax
81002858:	75 07                	jne    81002861 <_fseeko_r+0x446>
8100285a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100285f:	eb 64                	jmp    810028c5 <_fseeko_r+0x4aa>
81002861:	8b 43 30             	mov    0x30(%ebx),%eax
81002864:	85 c0                	test   %eax,%eax
81002866:	74 23                	je     8100288b <_fseeko_r+0x470>
81002868:	8b 53 30             	mov    0x30(%ebx),%edx
8100286b:	8d 43 40             	lea    0x40(%ebx),%eax
8100286e:	39 c2                	cmp    %eax,%edx
81002870:	74 12                	je     81002884 <_fseeko_r+0x469>
81002872:	8b 43 30             	mov    0x30(%ebx),%eax
81002875:	83 ec 08             	sub    $0x8,%esp
81002878:	50                   	push   %eax
81002879:	ff 75 08             	push   0x8(%ebp)
8100287c:	e8 21 f6 ff ff       	call   81001ea2 <_free_r>
81002881:	83 c4 10             	add    $0x10,%esp
81002884:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100288b:	8b 43 10             	mov    0x10(%ebx),%eax
8100288e:	89 03                	mov    %eax,(%ebx)
81002890:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002897:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100289b:	83 e0 df             	and    $0xffffffdf,%eax
8100289e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810028a2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028a6:	80 e4 f7             	and    $0xf7,%ah
810028a9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810028ad:	8d 43 5c             	lea    0x5c(%ebx),%eax
810028b0:	83 ec 04             	sub    $0x4,%esp
810028b3:	6a 08                	push   $0x8
810028b5:	6a 00                	push   $0x0
810028b7:	50                   	push   %eax
810028b8:	e8 f0 22 00 00       	call   81004bad <memset>
810028bd:	83 c4 10             	add    $0x10,%esp
810028c0:	b8 00 00 00 00       	mov    $0x0,%eax
810028c5:	8d 65 f8             	lea    -0x8(%ebp),%esp
810028c8:	5b                   	pop    %ebx
810028c9:	5e                   	pop    %esi
810028ca:	5d                   	pop    %ebp
810028cb:	c3                   	ret    

810028cc <fseeko>:
810028cc:	55                   	push   %ebp
810028cd:	89 e5                	mov    %esp,%ebp
810028cf:	83 ec 08             	sub    $0x8,%esp
810028d2:	8b 55 08             	mov    0x8(%ebp),%edx
810028d5:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810028da:	ff 75 10             	push   0x10(%ebp)
810028dd:	ff 75 0c             	push   0xc(%ebp)
810028e0:	52                   	push   %edx
810028e1:	50                   	push   %eax
810028e2:	e8 34 fb ff ff       	call   8100241b <_fseeko_r>
810028e7:	83 c4 10             	add    $0x10,%esp
810028ea:	c9                   	leave  
810028eb:	c3                   	ret    

810028ec <_fstat_r>:
810028ec:	55                   	push   %ebp
810028ed:	89 e5                	mov    %esp,%ebp
810028ef:	83 ec 18             	sub    $0x18,%esp
810028f2:	c7 05 2c 9c 00 81 00 	movl   $0x0,0x81009c2c
810028f9:	00 00 00 
810028fc:	83 ec 08             	sub    $0x8,%esp
810028ff:	ff 75 10             	push   0x10(%ebp)
81002902:	ff 75 0c             	push   0xc(%ebp)
81002905:	e8 77 e4 ff ff       	call   81000d81 <fstat>
8100290a:	83 c4 10             	add    $0x10,%esp
8100290d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002910:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002914:	75 14                	jne    8100292a <_fstat_r+0x3e>
81002916:	a1 2c 9c 00 81       	mov    0x81009c2c,%eax
8100291b:	85 c0                	test   %eax,%eax
8100291d:	74 0b                	je     8100292a <_fstat_r+0x3e>
8100291f:	8b 15 2c 9c 00 81    	mov    0x81009c2c,%edx
81002925:	8b 45 08             	mov    0x8(%ebp),%eax
81002928:	89 10                	mov    %edx,(%eax)
8100292a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100292d:	c9                   	leave  
8100292e:	c3                   	ret    

8100292f <__sfvwrite_r>:
8100292f:	55                   	push   %ebp
81002930:	89 e5                	mov    %esp,%ebp
81002932:	57                   	push   %edi
81002933:	56                   	push   %esi
81002934:	53                   	push   %ebx
81002935:	83 ec 3c             	sub    $0x3c,%esp
81002938:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100293b:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81002942:	8b 45 10             	mov    0x10(%ebp),%eax
81002945:	8b 78 08             	mov    0x8(%eax),%edi
81002948:	85 ff                	test   %edi,%edi
8100294a:	75 0a                	jne    81002956 <__sfvwrite_r+0x27>
8100294c:	b8 00 00 00 00       	mov    $0x0,%eax
81002951:	e9 6f 04 00 00       	jmp    81002dc5 <__sfvwrite_r+0x496>
81002956:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100295a:	98                   	cwtl   
8100295b:	83 e0 08             	and    $0x8,%eax
8100295e:	85 c0                	test   %eax,%eax
81002960:	74 07                	je     81002969 <__sfvwrite_r+0x3a>
81002962:	8b 43 10             	mov    0x10(%ebx),%eax
81002965:	85 c0                	test   %eax,%eax
81002967:	75 1d                	jne    81002986 <__sfvwrite_r+0x57>
81002969:	83 ec 08             	sub    $0x8,%esp
8100296c:	53                   	push   %ebx
8100296d:	ff 75 08             	push   0x8(%ebp)
81002970:	e8 4b 48 00 00       	call   810071c0 <__swsetup_r>
81002975:	83 c4 10             	add    $0x10,%esp
81002978:	85 c0                	test   %eax,%eax
8100297a:	74 0a                	je     81002986 <__sfvwrite_r+0x57>
8100297c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002981:	e9 3f 04 00 00       	jmp    81002dc5 <__sfvwrite_r+0x496>
81002986:	8b 45 10             	mov    0x10(%ebp),%eax
81002989:	8b 00                	mov    (%eax),%eax
8100298b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100298e:	bf 00 00 00 00       	mov    $0x0,%edi
81002993:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002997:	98                   	cwtl   
81002998:	83 e0 02             	and    $0x2,%eax
8100299b:	85 c0                	test   %eax,%eax
8100299d:	74 68                	je     81002a07 <__sfvwrite_r+0xd8>
8100299f:	eb 11                	jmp    810029b2 <__sfvwrite_r+0x83>
810029a1:	8b 45 c0             	mov    -0x40(%ebp),%eax
810029a4:	8b 08                	mov    (%eax),%ecx
810029a6:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810029a9:	8b 78 04             	mov    0x4(%eax),%edi
810029ac:	83 c0 08             	add    $0x8,%eax
810029af:	89 45 c0             	mov    %eax,-0x40(%ebp)
810029b2:	85 ff                	test   %edi,%edi
810029b4:	74 eb                	je     810029a1 <__sfvwrite_r+0x72>
810029b6:	8b 4b 24             	mov    0x24(%ebx),%ecx
810029b9:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810029be:	39 c7                	cmp    %eax,%edi
810029c0:	0f 46 c7             	cmovbe %edi,%eax
810029c3:	89 c2                	mov    %eax,%edx
810029c5:	8b 43 1c             	mov    0x1c(%ebx),%eax
810029c8:	52                   	push   %edx
810029c9:	ff 75 c4             	push   -0x3c(%ebp)
810029cc:	50                   	push   %eax
810029cd:	ff 75 08             	push   0x8(%ebp)
810029d0:	ff d1                	call   *%ecx
810029d2:	83 c4 10             	add    $0x10,%esp
810029d5:	89 c6                	mov    %eax,%esi
810029d7:	85 f6                	test   %esi,%esi
810029d9:	0f 8e cf 03 00 00    	jle    81002dae <__sfvwrite_r+0x47f>
810029df:	89 f0                	mov    %esi,%eax
810029e1:	01 45 c4             	add    %eax,-0x3c(%ebp)
810029e4:	89 f0                	mov    %esi,%eax
810029e6:	29 c7                	sub    %eax,%edi
810029e8:	8b 45 10             	mov    0x10(%ebp),%eax
810029eb:	8b 40 08             	mov    0x8(%eax),%eax
810029ee:	89 f2                	mov    %esi,%edx
810029f0:	29 d0                	sub    %edx,%eax
810029f2:	8b 4d 10             	mov    0x10(%ebp),%ecx
810029f5:	89 41 08             	mov    %eax,0x8(%ecx)
810029f8:	8b 45 10             	mov    0x10(%ebp),%eax
810029fb:	8b 40 08             	mov    0x8(%eax),%eax
810029fe:	85 c0                	test   %eax,%eax
81002a00:	75 b0                	jne    810029b2 <__sfvwrite_r+0x83>
81002a02:	e9 a0 03 00 00       	jmp    81002da7 <__sfvwrite_r+0x478>
81002a07:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a0b:	98                   	cwtl   
81002a0c:	83 e0 01             	and    $0x1,%eax
81002a0f:	85 c0                	test   %eax,%eax
81002a11:	0f 85 44 02 00 00    	jne    81002c5b <__sfvwrite_r+0x32c>
81002a17:	eb 11                	jmp    81002a2a <__sfvwrite_r+0xfb>
81002a19:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002a1c:	8b 08                	mov    (%eax),%ecx
81002a1e:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002a21:	8b 78 04             	mov    0x4(%eax),%edi
81002a24:	83 c0 08             	add    $0x8,%eax
81002a27:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002a2a:	85 ff                	test   %edi,%edi
81002a2c:	74 eb                	je     81002a19 <__sfvwrite_r+0xea>
81002a2e:	8b 73 08             	mov    0x8(%ebx),%esi
81002a31:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a35:	98                   	cwtl   
81002a36:	25 00 02 00 00       	and    $0x200,%eax
81002a3b:	85 c0                	test   %eax,%eax
81002a3d:	0f 84 4f 01 00 00    	je     81002b92 <__sfvwrite_r+0x263>
81002a43:	89 f0                	mov    %esi,%eax
81002a45:	39 c7                	cmp    %eax,%edi
81002a47:	0f 82 12 01 00 00    	jb     81002b5f <__sfvwrite_r+0x230>
81002a4d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a51:	98                   	cwtl   
81002a52:	25 80 04 00 00       	and    $0x480,%eax
81002a57:	85 c0                	test   %eax,%eax
81002a59:	0f 84 00 01 00 00    	je     81002b5f <__sfvwrite_r+0x230>
81002a5f:	8b 03                	mov    (%ebx),%eax
81002a61:	8b 53 10             	mov    0x10(%ebx),%edx
81002a64:	29 d0                	sub    %edx,%eax
81002a66:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002a69:	8b 53 14             	mov    0x14(%ebx),%edx
81002a6c:	89 d0                	mov    %edx,%eax
81002a6e:	01 c0                	add    %eax,%eax
81002a70:	01 d0                	add    %edx,%eax
81002a72:	89 c2                	mov    %eax,%edx
81002a74:	c1 ea 1f             	shr    $0x1f,%edx
81002a77:	01 d0                	add    %edx,%eax
81002a79:	d1 f8                	sar    %eax
81002a7b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a7e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a81:	01 f8                	add    %edi,%eax
81002a83:	8d 50 01             	lea    0x1(%eax),%edx
81002a86:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a89:	39 c2                	cmp    %eax,%edx
81002a8b:	76 0b                	jbe    81002a98 <__sfvwrite_r+0x169>
81002a8d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a90:	01 f8                	add    %edi,%eax
81002a92:	83 c0 01             	add    $0x1,%eax
81002a95:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a98:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a9c:	98                   	cwtl   
81002a9d:	25 00 04 00 00       	and    $0x400,%eax
81002aa2:	85 c0                	test   %eax,%eax
81002aa4:	74 4f                	je     81002af5 <__sfvwrite_r+0x1c6>
81002aa6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002aa9:	83 ec 08             	sub    $0x8,%esp
81002aac:	50                   	push   %eax
81002aad:	ff 75 08             	push   0x8(%ebp)
81002ab0:	e8 0c 17 00 00       	call   810041c1 <_malloc_r>
81002ab5:	83 c4 10             	add    $0x10,%esp
81002ab8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002abb:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002abf:	75 0e                	jne    81002acf <__sfvwrite_r+0x1a0>
81002ac1:	8b 45 08             	mov    0x8(%ebp),%eax
81002ac4:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002aca:	e9 e6 02 00 00       	jmp    81002db5 <__sfvwrite_r+0x486>
81002acf:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002ad2:	8b 43 10             	mov    0x10(%ebx),%eax
81002ad5:	83 ec 04             	sub    $0x4,%esp
81002ad8:	52                   	push   %edx
81002ad9:	50                   	push   %eax
81002ada:	ff 75 dc             	push   -0x24(%ebp)
81002add:	e8 f6 1f 00 00       	call   81004ad8 <memcpy>
81002ae2:	83 c4 10             	add    $0x10,%esp
81002ae5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ae9:	66 25 7f fb          	and    $0xfb7f,%ax
81002aed:	0c 80                	or     $0x80,%al
81002aef:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002af3:	eb 49                	jmp    81002b3e <__sfvwrite_r+0x20f>
81002af5:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002af8:	8b 43 10             	mov    0x10(%ebx),%eax
81002afb:	83 ec 04             	sub    $0x4,%esp
81002afe:	52                   	push   %edx
81002aff:	50                   	push   %eax
81002b00:	ff 75 08             	push   0x8(%ebp)
81002b03:	e8 22 2e 00 00       	call   8100592a <_realloc_r>
81002b08:	83 c4 10             	add    $0x10,%esp
81002b0b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b0e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002b12:	75 2a                	jne    81002b3e <__sfvwrite_r+0x20f>
81002b14:	8b 43 10             	mov    0x10(%ebx),%eax
81002b17:	83 ec 08             	sub    $0x8,%esp
81002b1a:	50                   	push   %eax
81002b1b:	ff 75 08             	push   0x8(%ebp)
81002b1e:	e8 7f f3 ff ff       	call   81001ea2 <_free_r>
81002b23:	83 c4 10             	add    $0x10,%esp
81002b26:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b2a:	24 7f                	and    $0x7f,%al
81002b2c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b30:	8b 45 08             	mov    0x8(%ebp),%eax
81002b33:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002b39:	e9 77 02 00 00       	jmp    81002db5 <__sfvwrite_r+0x486>
81002b3e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b41:	89 43 10             	mov    %eax,0x10(%ebx)
81002b44:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002b47:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b4a:	01 d0                	add    %edx,%eax
81002b4c:	89 03                	mov    %eax,(%ebx)
81002b4e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b51:	89 43 14             	mov    %eax,0x14(%ebx)
81002b54:	89 fe                	mov    %edi,%esi
81002b56:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b59:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002b5c:	89 43 08             	mov    %eax,0x8(%ebx)
81002b5f:	89 f0                	mov    %esi,%eax
81002b61:	39 c7                	cmp    %eax,%edi
81002b63:	73 02                	jae    81002b67 <__sfvwrite_r+0x238>
81002b65:	89 fe                	mov    %edi,%esi
81002b67:	89 f2                	mov    %esi,%edx
81002b69:	8b 03                	mov    (%ebx),%eax
81002b6b:	83 ec 04             	sub    $0x4,%esp
81002b6e:	52                   	push   %edx
81002b6f:	ff 75 c4             	push   -0x3c(%ebp)
81002b72:	50                   	push   %eax
81002b73:	e8 a8 1f 00 00       	call   81004b20 <memmove>
81002b78:	83 c4 10             	add    $0x10,%esp
81002b7b:	8b 43 08             	mov    0x8(%ebx),%eax
81002b7e:	29 f0                	sub    %esi,%eax
81002b80:	89 43 08             	mov    %eax,0x8(%ebx)
81002b83:	8b 03                	mov    (%ebx),%eax
81002b85:	89 f2                	mov    %esi,%edx
81002b87:	01 d0                	add    %edx,%eax
81002b89:	89 03                	mov    %eax,(%ebx)
81002b8b:	89 fe                	mov    %edi,%esi
81002b8d:	e9 9d 00 00 00       	jmp    81002c2f <__sfvwrite_r+0x300>
81002b92:	8b 13                	mov    (%ebx),%edx
81002b94:	8b 43 10             	mov    0x10(%ebx),%eax
81002b97:	39 c2                	cmp    %eax,%edx
81002b99:	77 07                	ja     81002ba2 <__sfvwrite_r+0x273>
81002b9b:	8b 43 14             	mov    0x14(%ebx),%eax
81002b9e:	39 c7                	cmp    %eax,%edi
81002ba0:	73 4c                	jae    81002bee <__sfvwrite_r+0x2bf>
81002ba2:	89 f0                	mov    %esi,%eax
81002ba4:	39 c7                	cmp    %eax,%edi
81002ba6:	0f 46 c7             	cmovbe %edi,%eax
81002ba9:	89 c6                	mov    %eax,%esi
81002bab:	89 f2                	mov    %esi,%edx
81002bad:	8b 03                	mov    (%ebx),%eax
81002baf:	83 ec 04             	sub    $0x4,%esp
81002bb2:	52                   	push   %edx
81002bb3:	ff 75 c4             	push   -0x3c(%ebp)
81002bb6:	50                   	push   %eax
81002bb7:	e8 64 1f 00 00       	call   81004b20 <memmove>
81002bbc:	83 c4 10             	add    $0x10,%esp
81002bbf:	8b 43 08             	mov    0x8(%ebx),%eax
81002bc2:	29 f0                	sub    %esi,%eax
81002bc4:	89 43 08             	mov    %eax,0x8(%ebx)
81002bc7:	8b 03                	mov    (%ebx),%eax
81002bc9:	89 f2                	mov    %esi,%edx
81002bcb:	01 d0                	add    %edx,%eax
81002bcd:	89 03                	mov    %eax,(%ebx)
81002bcf:	8b 43 08             	mov    0x8(%ebx),%eax
81002bd2:	85 c0                	test   %eax,%eax
81002bd4:	75 58                	jne    81002c2e <__sfvwrite_r+0x2ff>
81002bd6:	83 ec 08             	sub    $0x8,%esp
81002bd9:	53                   	push   %ebx
81002bda:	ff 75 08             	push   0x8(%ebp)
81002bdd:	e8 1e e7 ff ff       	call   81001300 <_fflush_r>
81002be2:	83 c4 10             	add    $0x10,%esp
81002be5:	85 c0                	test   %eax,%eax
81002be7:	74 45                	je     81002c2e <__sfvwrite_r+0x2ff>
81002be9:	e9 c7 01 00 00       	jmp    81002db5 <__sfvwrite_r+0x486>
81002bee:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81002bf4:	77 04                	ja     81002bfa <__sfvwrite_r+0x2cb>
81002bf6:	89 f8                	mov    %edi,%eax
81002bf8:	eb 05                	jmp    81002bff <__sfvwrite_r+0x2d0>
81002bfa:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002bff:	8b 4b 14             	mov    0x14(%ebx),%ecx
81002c02:	99                   	cltd   
81002c03:	f7 f9                	idiv   %ecx
81002c05:	89 c2                	mov    %eax,%edx
81002c07:	8b 43 14             	mov    0x14(%ebx),%eax
81002c0a:	89 d6                	mov    %edx,%esi
81002c0c:	0f af f0             	imul   %eax,%esi
81002c0f:	8b 53 24             	mov    0x24(%ebx),%edx
81002c12:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002c15:	56                   	push   %esi
81002c16:	ff 75 c4             	push   -0x3c(%ebp)
81002c19:	50                   	push   %eax
81002c1a:	ff 75 08             	push   0x8(%ebp)
81002c1d:	ff d2                	call   *%edx
81002c1f:	83 c4 10             	add    $0x10,%esp
81002c22:	89 c6                	mov    %eax,%esi
81002c24:	85 f6                	test   %esi,%esi
81002c26:	0f 8e 85 01 00 00    	jle    81002db1 <__sfvwrite_r+0x482>
81002c2c:	eb 01                	jmp    81002c2f <__sfvwrite_r+0x300>
81002c2e:	90                   	nop
81002c2f:	89 f0                	mov    %esi,%eax
81002c31:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002c34:	89 f0                	mov    %esi,%eax
81002c36:	29 c7                	sub    %eax,%edi
81002c38:	8b 45 10             	mov    0x10(%ebp),%eax
81002c3b:	8b 40 08             	mov    0x8(%eax),%eax
81002c3e:	89 f2                	mov    %esi,%edx
81002c40:	29 d0                	sub    %edx,%eax
81002c42:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002c45:	89 41 08             	mov    %eax,0x8(%ecx)
81002c48:	8b 45 10             	mov    0x10(%ebp),%eax
81002c4b:	8b 40 08             	mov    0x8(%eax),%eax
81002c4e:	85 c0                	test   %eax,%eax
81002c50:	0f 85 d4 fd ff ff    	jne    81002a2a <__sfvwrite_r+0xfb>
81002c56:	e9 4c 01 00 00       	jmp    81002da7 <__sfvwrite_r+0x478>
81002c5b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c62:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002c69:	eb 18                	jmp    81002c83 <__sfvwrite_r+0x354>
81002c6b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c72:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002c75:	8b 08                	mov    (%eax),%ecx
81002c77:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002c7a:	8b 78 04             	mov    0x4(%eax),%edi
81002c7d:	83 c0 08             	add    $0x8,%eax
81002c80:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002c83:	85 ff                	test   %edi,%edi
81002c85:	74 e4                	je     81002c6b <__sfvwrite_r+0x33c>
81002c87:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c8b:	75 32                	jne    81002cbf <__sfvwrite_r+0x390>
81002c8d:	83 ec 04             	sub    $0x4,%esp
81002c90:	57                   	push   %edi
81002c91:	6a 0a                	push   $0xa
81002c93:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81002c96:	56                   	push   %esi
81002c97:	e8 54 1d 00 00       	call   810049f0 <memchr>
81002c9c:	83 c4 10             	add    $0x10,%esp
81002c9f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002ca2:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002ca6:	74 0a                	je     81002cb2 <__sfvwrite_r+0x383>
81002ca8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002cab:	83 c0 01             	add    $0x1,%eax
81002cae:	29 f0                	sub    %esi,%eax
81002cb0:	eb 03                	jmp    81002cb5 <__sfvwrite_r+0x386>
81002cb2:	8d 47 01             	lea    0x1(%edi),%eax
81002cb5:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002cb8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002cbf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002cc2:	39 c7                	cmp    %eax,%edi
81002cc4:	0f 46 c7             	cmovbe %edi,%eax
81002cc7:	89 c1                	mov    %eax,%ecx
81002cc9:	8b 53 08             	mov    0x8(%ebx),%edx
81002ccc:	8b 43 14             	mov    0x14(%ebx),%eax
81002ccf:	8d 34 02             	lea    (%edx,%eax,1),%esi
81002cd2:	8b 13                	mov    (%ebx),%edx
81002cd4:	8b 43 10             	mov    0x10(%ebx),%eax
81002cd7:	39 c2                	cmp    %eax,%edx
81002cd9:	76 38                	jbe    81002d13 <__sfvwrite_r+0x3e4>
81002cdb:	39 f1                	cmp    %esi,%ecx
81002cdd:	7e 34                	jle    81002d13 <__sfvwrite_r+0x3e4>
81002cdf:	89 f2                	mov    %esi,%edx
81002ce1:	8b 03                	mov    (%ebx),%eax
81002ce3:	83 ec 04             	sub    $0x4,%esp
81002ce6:	52                   	push   %edx
81002ce7:	ff 75 c4             	push   -0x3c(%ebp)
81002cea:	50                   	push   %eax
81002ceb:	e8 30 1e 00 00       	call   81004b20 <memmove>
81002cf0:	83 c4 10             	add    $0x10,%esp
81002cf3:	8b 03                	mov    (%ebx),%eax
81002cf5:	89 f2                	mov    %esi,%edx
81002cf7:	01 d0                	add    %edx,%eax
81002cf9:	89 03                	mov    %eax,(%ebx)
81002cfb:	83 ec 08             	sub    $0x8,%esp
81002cfe:	53                   	push   %ebx
81002cff:	ff 75 08             	push   0x8(%ebp)
81002d02:	e8 f9 e5 ff ff       	call   81001300 <_fflush_r>
81002d07:	83 c4 10             	add    $0x10,%esp
81002d0a:	85 c0                	test   %eax,%eax
81002d0c:	74 4f                	je     81002d5d <__sfvwrite_r+0x42e>
81002d0e:	e9 a2 00 00 00       	jmp    81002db5 <__sfvwrite_r+0x486>
81002d13:	8b 73 14             	mov    0x14(%ebx),%esi
81002d16:	89 c8                	mov    %ecx,%eax
81002d18:	39 c6                	cmp    %eax,%esi
81002d1a:	7f 1b                	jg     81002d37 <__sfvwrite_r+0x408>
81002d1c:	8b 53 24             	mov    0x24(%ebx),%edx
81002d1f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002d22:	56                   	push   %esi
81002d23:	ff 75 c4             	push   -0x3c(%ebp)
81002d26:	50                   	push   %eax
81002d27:	ff 75 08             	push   0x8(%ebp)
81002d2a:	ff d2                	call   *%edx
81002d2c:	83 c4 10             	add    $0x10,%esp
81002d2f:	89 c6                	mov    %eax,%esi
81002d31:	85 f6                	test   %esi,%esi
81002d33:	7f 28                	jg     81002d5d <__sfvwrite_r+0x42e>
81002d35:	eb 7e                	jmp    81002db5 <__sfvwrite_r+0x486>
81002d37:	89 ce                	mov    %ecx,%esi
81002d39:	89 f2                	mov    %esi,%edx
81002d3b:	8b 03                	mov    (%ebx),%eax
81002d3d:	83 ec 04             	sub    $0x4,%esp
81002d40:	52                   	push   %edx
81002d41:	ff 75 c4             	push   -0x3c(%ebp)
81002d44:	50                   	push   %eax
81002d45:	e8 d6 1d 00 00       	call   81004b20 <memmove>
81002d4a:	83 c4 10             	add    $0x10,%esp
81002d4d:	8b 43 08             	mov    0x8(%ebx),%eax
81002d50:	29 f0                	sub    %esi,%eax
81002d52:	89 43 08             	mov    %eax,0x8(%ebx)
81002d55:	8b 03                	mov    (%ebx),%eax
81002d57:	89 f2                	mov    %esi,%edx
81002d59:	01 d0                	add    %edx,%eax
81002d5b:	89 03                	mov    %eax,(%ebx)
81002d5d:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002d60:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002d64:	75 1a                	jne    81002d80 <__sfvwrite_r+0x451>
81002d66:	83 ec 08             	sub    $0x8,%esp
81002d69:	53                   	push   %ebx
81002d6a:	ff 75 08             	push   0x8(%ebp)
81002d6d:	e8 8e e5 ff ff       	call   81001300 <_fflush_r>
81002d72:	83 c4 10             	add    $0x10,%esp
81002d75:	85 c0                	test   %eax,%eax
81002d77:	75 3b                	jne    81002db4 <__sfvwrite_r+0x485>
81002d79:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002d80:	89 f0                	mov    %esi,%eax
81002d82:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002d85:	89 f0                	mov    %esi,%eax
81002d87:	29 c7                	sub    %eax,%edi
81002d89:	8b 45 10             	mov    0x10(%ebp),%eax
81002d8c:	8b 40 08             	mov    0x8(%eax),%eax
81002d8f:	89 f2                	mov    %esi,%edx
81002d91:	29 d0                	sub    %edx,%eax
81002d93:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002d96:	89 41 08             	mov    %eax,0x8(%ecx)
81002d99:	8b 45 10             	mov    0x10(%ebp),%eax
81002d9c:	8b 40 08             	mov    0x8(%eax),%eax
81002d9f:	85 c0                	test   %eax,%eax
81002da1:	0f 85 dc fe ff ff    	jne    81002c83 <__sfvwrite_r+0x354>
81002da7:	b8 00 00 00 00       	mov    $0x0,%eax
81002dac:	eb 17                	jmp    81002dc5 <__sfvwrite_r+0x496>
81002dae:	90                   	nop
81002daf:	eb 04                	jmp    81002db5 <__sfvwrite_r+0x486>
81002db1:	90                   	nop
81002db2:	eb 01                	jmp    81002db5 <__sfvwrite_r+0x486>
81002db4:	90                   	nop
81002db5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002db9:	83 c8 40             	or     $0x40,%eax
81002dbc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002dc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002dc5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002dc8:	5b                   	pop    %ebx
81002dc9:	5e                   	pop    %esi
81002dca:	5f                   	pop    %edi
81002dcb:	5d                   	pop    %ebp
81002dcc:	c3                   	ret    

81002dcd <_fwalk>:
81002dcd:	55                   	push   %ebp
81002dce:	89 e5                	mov    %esp,%ebp
81002dd0:	57                   	push   %edi
81002dd1:	56                   	push   %esi
81002dd2:	53                   	push   %ebx
81002dd3:	83 ec 1c             	sub    $0x1c,%esp
81002dd6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002ddd:	8b 45 08             	mov    0x8(%ebp),%eax
81002de0:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002de6:	eb 3e                	jmp    81002e26 <_fwalk+0x59>
81002de8:	8b 5e 08             	mov    0x8(%esi),%ebx
81002deb:	8b 7e 04             	mov    0x4(%esi),%edi
81002dee:	eb 2d                	jmp    81002e1d <_fwalk+0x50>
81002df0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002df4:	66 85 c0             	test   %ax,%ax
81002df7:	74 21                	je     81002e1a <_fwalk+0x4d>
81002df9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dfd:	66 83 f8 01          	cmp    $0x1,%ax
81002e01:	74 17                	je     81002e1a <_fwalk+0x4d>
81002e03:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002e07:	66 83 f8 ff          	cmp    $0xffff,%ax
81002e0b:	74 0d                	je     81002e1a <_fwalk+0x4d>
81002e0d:	83 ec 0c             	sub    $0xc,%esp
81002e10:	53                   	push   %ebx
81002e11:	ff 55 0c             	call   *0xc(%ebp)
81002e14:	83 c4 10             	add    $0x10,%esp
81002e17:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002e1a:	83 c3 68             	add    $0x68,%ebx
81002e1d:	83 ef 01             	sub    $0x1,%edi
81002e20:	85 ff                	test   %edi,%edi
81002e22:	79 cc                	jns    81002df0 <_fwalk+0x23>
81002e24:	8b 36                	mov    (%esi),%esi
81002e26:	85 f6                	test   %esi,%esi
81002e28:	75 be                	jne    81002de8 <_fwalk+0x1b>
81002e2a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e2d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e30:	5b                   	pop    %ebx
81002e31:	5e                   	pop    %esi
81002e32:	5f                   	pop    %edi
81002e33:	5d                   	pop    %ebp
81002e34:	c3                   	ret    

81002e35 <_fwalk_reent>:
81002e35:	55                   	push   %ebp
81002e36:	89 e5                	mov    %esp,%ebp
81002e38:	57                   	push   %edi
81002e39:	56                   	push   %esi
81002e3a:	53                   	push   %ebx
81002e3b:	83 ec 1c             	sub    $0x1c,%esp
81002e3e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002e45:	8b 45 08             	mov    0x8(%ebp),%eax
81002e48:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002e4e:	eb 41                	jmp    81002e91 <_fwalk_reent+0x5c>
81002e50:	8b 5e 08             	mov    0x8(%esi),%ebx
81002e53:	8b 7e 04             	mov    0x4(%esi),%edi
81002e56:	eb 30                	jmp    81002e88 <_fwalk_reent+0x53>
81002e58:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e5c:	66 85 c0             	test   %ax,%ax
81002e5f:	74 24                	je     81002e85 <_fwalk_reent+0x50>
81002e61:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e65:	66 83 f8 01          	cmp    $0x1,%ax
81002e69:	74 1a                	je     81002e85 <_fwalk_reent+0x50>
81002e6b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002e6f:	66 83 f8 ff          	cmp    $0xffff,%ax
81002e73:	74 10                	je     81002e85 <_fwalk_reent+0x50>
81002e75:	83 ec 08             	sub    $0x8,%esp
81002e78:	53                   	push   %ebx
81002e79:	ff 75 08             	push   0x8(%ebp)
81002e7c:	ff 55 0c             	call   *0xc(%ebp)
81002e7f:	83 c4 10             	add    $0x10,%esp
81002e82:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002e85:	83 c3 68             	add    $0x68,%ebx
81002e88:	83 ef 01             	sub    $0x1,%edi
81002e8b:	85 ff                	test   %edi,%edi
81002e8d:	79 c9                	jns    81002e58 <_fwalk_reent+0x23>
81002e8f:	8b 36                	mov    (%esi),%esi
81002e91:	85 f6                	test   %esi,%esi
81002e93:	75 bb                	jne    81002e50 <_fwalk_reent+0x1b>
81002e95:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e98:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e9b:	5b                   	pop    %ebx
81002e9c:	5e                   	pop    %esi
81002e9d:	5f                   	pop    %edi
81002e9e:	5d                   	pop    %ebp
81002e9f:	c3                   	ret    

81002ea0 <_fwrite_r>:
81002ea0:	55                   	push   %ebp
81002ea1:	89 e5                	mov    %esp,%ebp
81002ea3:	83 ec 28             	sub    $0x28,%esp
81002ea6:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ea9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002eac:	8b 45 14             	mov    0x14(%ebp),%eax
81002eaf:	0f af 45 10          	imul   0x10(%ebp),%eax
81002eb3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002eb6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eb9:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002ebc:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ebf:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002ec2:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002ec5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002ec8:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002ecf:	8b 45 08             	mov    0x8(%ebp),%eax
81002ed2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002ed5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002ed9:	74 18                	je     81002ef3 <_fwrite_r+0x53>
81002edb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ede:	8b 40 38             	mov    0x38(%eax),%eax
81002ee1:	85 c0                	test   %eax,%eax
81002ee3:	75 0e                	jne    81002ef3 <_fwrite_r+0x53>
81002ee5:	83 ec 0c             	sub    $0xc,%esp
81002ee8:	ff 75 f0             	push   -0x10(%ebp)
81002eeb:	e8 fd e9 ff ff       	call   810018ed <__sinit>
81002ef0:	83 c4 10             	add    $0x10,%esp
81002ef3:	8b 45 18             	mov    0x18(%ebp),%eax
81002ef6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002efa:	98                   	cwtl   
81002efb:	25 00 20 00 00       	and    $0x2000,%eax
81002f00:	85 c0                	test   %eax,%eax
81002f02:	75 24                	jne    81002f28 <_fwrite_r+0x88>
81002f04:	8b 45 18             	mov    0x18(%ebp),%eax
81002f07:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002f0b:	80 cc 20             	or     $0x20,%ah
81002f0e:	89 c2                	mov    %eax,%edx
81002f10:	8b 45 18             	mov    0x18(%ebp),%eax
81002f13:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002f17:	8b 45 18             	mov    0x18(%ebp),%eax
81002f1a:	8b 40 64             	mov    0x64(%eax),%eax
81002f1d:	80 e4 df             	and    $0xdf,%ah
81002f20:	89 c2                	mov    %eax,%edx
81002f22:	8b 45 18             	mov    0x18(%ebp),%eax
81002f25:	89 50 64             	mov    %edx,0x64(%eax)
81002f28:	83 ec 04             	sub    $0x4,%esp
81002f2b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002f2e:	50                   	push   %eax
81002f2f:	ff 75 18             	push   0x18(%ebp)
81002f32:	ff 75 08             	push   0x8(%ebp)
81002f35:	e8 f5 f9 ff ff       	call   8100292f <__sfvwrite_r>
81002f3a:	83 c4 10             	add    $0x10,%esp
81002f3d:	85 c0                	test   %eax,%eax
81002f3f:	75 05                	jne    81002f46 <_fwrite_r+0xa6>
81002f41:	8b 45 14             	mov    0x14(%ebp),%eax
81002f44:	eb 10                	jmp    81002f56 <_fwrite_r+0xb6>
81002f46:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002f49:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f4c:	29 d0                	sub    %edx,%eax
81002f4e:	ba 00 00 00 00       	mov    $0x0,%edx
81002f53:	f7 75 10             	divl   0x10(%ebp)
81002f56:	c9                   	leave  
81002f57:	c3                   	ret    

81002f58 <fwrite>:
81002f58:	55                   	push   %ebp
81002f59:	89 e5                	mov    %esp,%ebp
81002f5b:	83 ec 08             	sub    $0x8,%esp
81002f5e:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81002f63:	83 ec 0c             	sub    $0xc,%esp
81002f66:	ff 75 14             	push   0x14(%ebp)
81002f69:	ff 75 10             	push   0x10(%ebp)
81002f6c:	ff 75 0c             	push   0xc(%ebp)
81002f6f:	ff 75 08             	push   0x8(%ebp)
81002f72:	50                   	push   %eax
81002f73:	e8 28 ff ff ff       	call   81002ea0 <_fwrite_r>
81002f78:	83 c4 20             	add    $0x20,%esp
81002f7b:	c9                   	leave  
81002f7c:	c3                   	ret    

81002f7d <reverse_argv_elements>:
81002f7d:	55                   	push   %ebp
81002f7e:	89 e5                	mov    %esp,%ebp
81002f80:	83 ec 10             	sub    $0x10,%esp
81002f83:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002f8a:	eb 5e                	jmp    81002fea <reverse_argv_elements+0x6d>
81002f8c:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002f8f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f96:	8b 45 08             	mov    0x8(%ebp),%eax
81002f99:	01 d0                	add    %edx,%eax
81002f9b:	8b 00                	mov    (%eax),%eax
81002f9d:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002fa0:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fa3:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002fa6:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002fab:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002fb2:	8b 45 08             	mov    0x8(%ebp),%eax
81002fb5:	01 d0                	add    %edx,%eax
81002fb7:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002fba:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002fc1:	8b 55 08             	mov    0x8(%ebp),%edx
81002fc4:	01 ca                	add    %ecx,%edx
81002fc6:	8b 00                	mov    (%eax),%eax
81002fc8:	89 02                	mov    %eax,(%edx)
81002fca:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fcd:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002fd0:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002fd5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002fdc:	8b 45 08             	mov    0x8(%ebp),%eax
81002fdf:	01 c2                	add    %eax,%edx
81002fe1:	8b 45 f8             	mov    -0x8(%ebp),%eax
81002fe4:	89 02                	mov    %eax,(%edx)
81002fe6:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002fea:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fed:	d1 f8                	sar    %eax
81002fef:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81002ff2:	7c 98                	jl     81002f8c <reverse_argv_elements+0xf>
81002ff4:	90                   	nop
81002ff5:	90                   	nop
81002ff6:	c9                   	leave  
81002ff7:	c3                   	ret    

81002ff8 <permute>:
81002ff8:	55                   	push   %ebp
81002ff9:	89 e5                	mov    %esp,%ebp
81002ffb:	ff 75 0c             	push   0xc(%ebp)
81002ffe:	ff 75 08             	push   0x8(%ebp)
81003001:	e8 77 ff ff ff       	call   81002f7d <reverse_argv_elements>
81003006:	83 c4 08             	add    $0x8,%esp
81003009:	8b 55 0c             	mov    0xc(%ebp),%edx
8100300c:	8b 45 10             	mov    0x10(%ebp),%eax
8100300f:	01 d0                	add    %edx,%eax
81003011:	50                   	push   %eax
81003012:	ff 75 08             	push   0x8(%ebp)
81003015:	e8 63 ff ff ff       	call   81002f7d <reverse_argv_elements>
8100301a:	83 c4 08             	add    $0x8,%esp
8100301d:	ff 75 10             	push   0x10(%ebp)
81003020:	ff 75 08             	push   0x8(%ebp)
81003023:	e8 55 ff ff ff       	call   81002f7d <reverse_argv_elements>
81003028:	83 c4 08             	add    $0x8,%esp
8100302b:	90                   	nop
8100302c:	c9                   	leave  
8100302d:	c3                   	ret    

8100302e <is_option>:
8100302e:	55                   	push   %ebp
8100302f:	89 e5                	mov    %esp,%ebp
81003031:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81003035:	74 1a                	je     81003051 <is_option+0x23>
81003037:	8b 45 08             	mov    0x8(%ebp),%eax
8100303a:	0f b6 00             	movzbl (%eax),%eax
8100303d:	3c 2d                	cmp    $0x2d,%al
8100303f:	74 10                	je     81003051 <is_option+0x23>
81003041:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003045:	74 11                	je     81003058 <is_option+0x2a>
81003047:	8b 45 08             	mov    0x8(%ebp),%eax
8100304a:	0f b6 00             	movzbl (%eax),%eax
8100304d:	3c 2b                	cmp    $0x2b,%al
8100304f:	75 07                	jne    81003058 <is_option+0x2a>
81003051:	b8 01 00 00 00       	mov    $0x1,%eax
81003056:	eb 05                	jmp    8100305d <is_option+0x2f>
81003058:	b8 00 00 00 00       	mov    $0x0,%eax
8100305d:	5d                   	pop    %ebp
8100305e:	c3                   	ret    

8100305f <read_globals>:
8100305f:	55                   	push   %ebp
81003060:	89 e5                	mov    %esp,%ebp
81003062:	8b 15 c8 9b 00 81    	mov    0x81009bc8,%edx
81003068:	8b 45 08             	mov    0x8(%ebp),%eax
8100306b:	89 10                	mov    %edx,(%eax)
8100306d:	8b 15 cc 9b 00 81    	mov    0x81009bcc,%edx
81003073:	8b 45 08             	mov    0x8(%ebp),%eax
81003076:	89 50 04             	mov    %edx,0x4(%eax)
81003079:	8b 15 a4 8c 00 81    	mov    0x81008ca4,%edx
8100307f:	8b 45 08             	mov    0x8(%ebp),%eax
81003082:	89 50 08             	mov    %edx,0x8(%eax)
81003085:	8b 15 a8 8c 00 81    	mov    0x81008ca8,%edx
8100308b:	8b 45 08             	mov    0x8(%ebp),%eax
8100308e:	89 50 0c             	mov    %edx,0xc(%eax)
81003091:	8b 15 d0 9b 00 81    	mov    0x81009bd0,%edx
81003097:	8b 45 08             	mov    0x8(%ebp),%eax
8100309a:	89 50 10             	mov    %edx,0x10(%eax)
8100309d:	8b 15 d4 9b 00 81    	mov    0x81009bd4,%edx
810030a3:	8b 45 08             	mov    0x8(%ebp),%eax
810030a6:	89 50 14             	mov    %edx,0x14(%eax)
810030a9:	8b 15 d8 9b 00 81    	mov    0x81009bd8,%edx
810030af:	8b 45 08             	mov    0x8(%ebp),%eax
810030b2:	89 50 18             	mov    %edx,0x18(%eax)
810030b5:	90                   	nop
810030b6:	5d                   	pop    %ebp
810030b7:	c3                   	ret    

810030b8 <write_globals>:
810030b8:	55                   	push   %ebp
810030b9:	89 e5                	mov    %esp,%ebp
810030bb:	8b 45 08             	mov    0x8(%ebp),%eax
810030be:	8b 00                	mov    (%eax),%eax
810030c0:	a3 c8 9b 00 81       	mov    %eax,0x81009bc8
810030c5:	8b 45 08             	mov    0x8(%ebp),%eax
810030c8:	8b 40 04             	mov    0x4(%eax),%eax
810030cb:	a3 cc 9b 00 81       	mov    %eax,0x81009bcc
810030d0:	8b 45 08             	mov    0x8(%ebp),%eax
810030d3:	8b 40 08             	mov    0x8(%eax),%eax
810030d6:	a3 a4 8c 00 81       	mov    %eax,0x81008ca4
810030db:	8b 45 08             	mov    0x8(%ebp),%eax
810030de:	8b 40 0c             	mov    0xc(%eax),%eax
810030e1:	a3 a8 8c 00 81       	mov    %eax,0x81008ca8
810030e6:	8b 45 08             	mov    0x8(%ebp),%eax
810030e9:	8b 40 10             	mov    0x10(%eax),%eax
810030ec:	a3 d0 9b 00 81       	mov    %eax,0x81009bd0
810030f1:	8b 45 08             	mov    0x8(%ebp),%eax
810030f4:	8b 40 14             	mov    0x14(%eax),%eax
810030f7:	a3 d4 9b 00 81       	mov    %eax,0x81009bd4
810030fc:	8b 45 08             	mov    0x8(%ebp),%eax
810030ff:	8b 40 18             	mov    0x18(%eax),%eax
81003102:	a3 d8 9b 00 81       	mov    %eax,0x81009bd8
81003107:	90                   	nop
81003108:	5d                   	pop    %ebp
81003109:	c3                   	ret    

8100310a <getopt_internal>:
8100310a:	55                   	push   %ebp
8100310b:	89 e5                	mov    %esp,%ebp
8100310d:	53                   	push   %ebx
8100310e:	83 ec 34             	sub    $0x34,%esp
81003111:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003118:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100311f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003126:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100312d:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81003134:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
8100313b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81003142:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003149:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81003150:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81003154:	74 35                	je     8100318b <getopt_internal+0x81>
81003156:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100315a:	74 2f                	je     8100318b <getopt_internal+0x81>
8100315c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003160:	75 06                	jne    81003168 <getopt_internal+0x5e>
81003162:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81003166:	74 23                	je     8100318b <getopt_internal+0x81>
81003168:	8b 45 20             	mov    0x20(%ebp),%eax
8100316b:	8b 40 04             	mov    0x4(%eax),%eax
8100316e:	39 45 08             	cmp    %eax,0x8(%ebp)
81003171:	7e 18                	jle    8100318b <getopt_internal+0x81>
81003173:	8b 45 20             	mov    0x20(%ebp),%eax
81003176:	8b 40 04             	mov    0x4(%eax),%eax
81003179:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003180:	8b 45 0c             	mov    0xc(%ebp),%eax
81003183:	01 d0                	add    %edx,%eax
81003185:	8b 00                	mov    (%eax),%eax
81003187:	85 c0                	test   %eax,%eax
81003189:	75 0a                	jne    81003195 <getopt_internal+0x8b>
8100318b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003190:	e9 85 0a 00 00       	jmp    81003c1a <getopt_internal+0xb10>
81003195:	8b 45 20             	mov    0x20(%ebp),%eax
81003198:	8b 40 04             	mov    0x4(%eax),%eax
8100319b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810031a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810031a5:	01 d0                	add    %edx,%eax
810031a7:	8b 00                	mov    (%eax),%eax
810031a9:	83 ec 08             	sub    $0x8,%esp
810031ac:	68 9c 88 00 81       	push   $0x8100889c
810031b1:	50                   	push   %eax
810031b2:	e8 a5 39 00 00       	call   81006b5c <strcmp>
810031b7:	83 c4 10             	add    $0x10,%esp
810031ba:	85 c0                	test   %eax,%eax
810031bc:	75 19                	jne    810031d7 <getopt_internal+0xcd>
810031be:	8b 45 20             	mov    0x20(%ebp),%eax
810031c1:	8b 40 04             	mov    0x4(%eax),%eax
810031c4:	8d 50 01             	lea    0x1(%eax),%edx
810031c7:	8b 45 20             	mov    0x20(%ebp),%eax
810031ca:	89 50 04             	mov    %edx,0x4(%eax)
810031cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810031d2:	e9 43 0a 00 00       	jmp    81003c1a <getopt_internal+0xb10>
810031d7:	8b 45 20             	mov    0x20(%ebp),%eax
810031da:	8b 40 04             	mov    0x4(%eax),%eax
810031dd:	85 c0                	test   %eax,%eax
810031df:	75 28                	jne    81003209 <getopt_internal+0xff>
810031e1:	8b 45 20             	mov    0x20(%ebp),%eax
810031e4:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810031eb:	8b 45 20             	mov    0x20(%ebp),%eax
810031ee:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810031f5:	8b 45 20             	mov    0x20(%ebp),%eax
810031f8:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810031ff:	8b 45 20             	mov    0x20(%ebp),%eax
81003202:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81003209:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100320d:	74 33                	je     81003242 <getopt_internal+0x138>
8100320f:	8b 45 10             	mov    0x10(%ebp),%eax
81003212:	0f b6 00             	movzbl (%eax),%eax
81003215:	3c 2d                	cmp    $0x2d,%al
81003217:	74 0a                	je     81003223 <getopt_internal+0x119>
81003219:	8b 45 10             	mov    0x10(%ebp),%eax
8100321c:	0f b6 00             	movzbl (%eax),%eax
8100321f:	3c 2b                	cmp    $0x2b,%al
81003221:	75 1f                	jne    81003242 <getopt_internal+0x138>
81003223:	8b 45 10             	mov    0x10(%ebp),%eax
81003226:	0f b6 00             	movzbl (%eax),%eax
81003229:	3c 2d                	cmp    $0x2d,%al
8100322b:	75 07                	jne    81003234 <getopt_internal+0x12a>
8100322d:	b8 01 00 00 00       	mov    $0x1,%eax
81003232:	eb 05                	jmp    81003239 <getopt_internal+0x12f>
81003234:	b8 02 00 00 00       	mov    $0x2,%eax
81003239:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100323c:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003240:	eb 23                	jmp    81003265 <getopt_internal+0x15b>
81003242:	83 ec 0c             	sub    $0xc,%esp
81003245:	68 9f 88 00 81       	push   $0x8100889f
8100324a:	e8 4e 45 00 00       	call   8100779d <getenv>
8100324f:	83 c4 10             	add    $0x10,%esp
81003252:	85 c0                	test   %eax,%eax
81003254:	74 07                	je     8100325d <getopt_internal+0x153>
81003256:	b8 02 00 00 00       	mov    $0x2,%eax
8100325b:	eb 05                	jmp    81003262 <getopt_internal+0x158>
8100325d:	b8 00 00 00 00       	mov    $0x0,%eax
81003262:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003265:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003269:	74 15                	je     81003280 <getopt_internal+0x176>
8100326b:	8b 45 10             	mov    0x10(%ebp),%eax
8100326e:	0f b6 00             	movzbl (%eax),%eax
81003271:	3c 3a                	cmp    $0x3a,%al
81003273:	75 0b                	jne    81003280 <getopt_internal+0x176>
81003275:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003279:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81003280:	8b 45 20             	mov    0x20(%ebp),%eax
81003283:	8b 40 10             	mov    0x10(%eax),%eax
81003286:	83 f8 01             	cmp    $0x1,%eax
81003289:	0f 85 a2 01 00 00    	jne    81003431 <getopt_internal+0x327>
8100328f:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81003293:	0f 84 02 01 00 00    	je     8100339b <getopt_internal+0x291>
81003299:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
8100329d:	0f 84 56 01 00 00    	je     810033f9 <getopt_internal+0x2ef>
810032a3:	8b 45 20             	mov    0x20(%ebp),%eax
810032a6:	8b 50 04             	mov    0x4(%eax),%edx
810032a9:	8b 45 20             	mov    0x20(%ebp),%eax
810032ac:	89 50 14             	mov    %edx,0x14(%eax)
810032af:	8b 45 20             	mov    0x20(%ebp),%eax
810032b2:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810032b9:	eb 1e                	jmp    810032d9 <getopt_internal+0x1cf>
810032bb:	8b 45 20             	mov    0x20(%ebp),%eax
810032be:	8b 40 04             	mov    0x4(%eax),%eax
810032c1:	8d 50 01             	lea    0x1(%eax),%edx
810032c4:	8b 45 20             	mov    0x20(%ebp),%eax
810032c7:	89 50 04             	mov    %edx,0x4(%eax)
810032ca:	8b 45 20             	mov    0x20(%ebp),%eax
810032cd:	8b 40 18             	mov    0x18(%eax),%eax
810032d0:	8d 50 01             	lea    0x1(%eax),%edx
810032d3:	8b 45 20             	mov    0x20(%ebp),%eax
810032d6:	89 50 18             	mov    %edx,0x18(%eax)
810032d9:	8b 45 20             	mov    0x20(%ebp),%eax
810032dc:	8b 40 04             	mov    0x4(%eax),%eax
810032df:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810032e9:	01 d0                	add    %edx,%eax
810032eb:	8b 00                	mov    (%eax),%eax
810032ed:	83 ec 08             	sub    $0x8,%esp
810032f0:	ff 75 1c             	push   0x1c(%ebp)
810032f3:	50                   	push   %eax
810032f4:	e8 35 fd ff ff       	call   8100302e <is_option>
810032f9:	83 c4 10             	add    $0x10,%esp
810032fc:	85 c0                	test   %eax,%eax
810032fe:	74 bb                	je     810032bb <getopt_internal+0x1b1>
81003300:	8b 45 20             	mov    0x20(%ebp),%eax
81003303:	8b 40 04             	mov    0x4(%eax),%eax
81003306:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100330d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003310:	01 d0                	add    %edx,%eax
81003312:	8b 00                	mov    (%eax),%eax
81003314:	85 c0                	test   %eax,%eax
81003316:	75 16                	jne    8100332e <getopt_internal+0x224>
81003318:	8b 45 20             	mov    0x20(%ebp),%eax
8100331b:	8b 50 14             	mov    0x14(%eax),%edx
8100331e:	8b 45 20             	mov    0x20(%ebp),%eax
81003321:	89 50 04             	mov    %edx,0x4(%eax)
81003324:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003329:	e9 ec 08 00 00       	jmp    81003c1a <getopt_internal+0xb10>
8100332e:	8b 45 20             	mov    0x20(%ebp),%eax
81003331:	8b 40 04             	mov    0x4(%eax),%eax
81003334:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100333b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100333e:	01 d0                	add    %edx,%eax
81003340:	8b 00                	mov    (%eax),%eax
81003342:	83 ec 08             	sub    $0x8,%esp
81003345:	68 9c 88 00 81       	push   $0x8100889c
8100334a:	50                   	push   %eax
8100334b:	e8 0c 38 00 00       	call   81006b5c <strcmp>
81003350:	83 c4 10             	add    $0x10,%esp
81003353:	85 c0                	test   %eax,%eax
81003355:	0f 85 cf 00 00 00    	jne    8100342a <getopt_internal+0x320>
8100335b:	8b 45 20             	mov    0x20(%ebp),%eax
8100335e:	8b 40 18             	mov    0x18(%eax),%eax
81003361:	8b 55 20             	mov    0x20(%ebp),%edx
81003364:	8b 52 14             	mov    0x14(%edx),%edx
81003367:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
8100336e:	8b 55 0c             	mov    0xc(%ebp),%edx
81003371:	01 ca                	add    %ecx,%edx
81003373:	83 ec 04             	sub    $0x4,%esp
81003376:	6a 01                	push   $0x1
81003378:	50                   	push   %eax
81003379:	52                   	push   %edx
8100337a:	e8 79 fc ff ff       	call   81002ff8 <permute>
8100337f:	83 c4 10             	add    $0x10,%esp
81003382:	8b 45 20             	mov    0x20(%ebp),%eax
81003385:	8b 40 14             	mov    0x14(%eax),%eax
81003388:	8d 50 01             	lea    0x1(%eax),%edx
8100338b:	8b 45 20             	mov    0x20(%ebp),%eax
8100338e:	89 50 04             	mov    %edx,0x4(%eax)
81003391:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003396:	e9 7f 08 00 00       	jmp    81003c1a <getopt_internal+0xb10>
8100339b:	8b 45 20             	mov    0x20(%ebp),%eax
8100339e:	8b 40 04             	mov    0x4(%eax),%eax
810033a1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810033ab:	01 d0                	add    %edx,%eax
810033ad:	8b 00                	mov    (%eax),%eax
810033af:	83 ec 08             	sub    $0x8,%esp
810033b2:	ff 75 1c             	push   0x1c(%ebp)
810033b5:	50                   	push   %eax
810033b6:	e8 73 fc ff ff       	call   8100302e <is_option>
810033bb:	83 c4 10             	add    $0x10,%esp
810033be:	85 c0                	test   %eax,%eax
810033c0:	75 6b                	jne    8100342d <getopt_internal+0x323>
810033c2:	8b 45 20             	mov    0x20(%ebp),%eax
810033c5:	8b 40 04             	mov    0x4(%eax),%eax
810033c8:	8d 48 01             	lea    0x1(%eax),%ecx
810033cb:	8b 55 20             	mov    0x20(%ebp),%edx
810033ce:	89 4a 04             	mov    %ecx,0x4(%edx)
810033d1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810033db:	01 d0                	add    %edx,%eax
810033dd:	8b 10                	mov    (%eax),%edx
810033df:	8b 45 20             	mov    0x20(%ebp),%eax
810033e2:	89 10                	mov    %edx,(%eax)
810033e4:	8b 45 20             	mov    0x20(%ebp),%eax
810033e7:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
810033ee:	8b 45 20             	mov    0x20(%ebp),%eax
810033f1:	8b 40 0c             	mov    0xc(%eax),%eax
810033f4:	e9 21 08 00 00       	jmp    81003c1a <getopt_internal+0xb10>
810033f9:	8b 45 20             	mov    0x20(%ebp),%eax
810033fc:	8b 40 04             	mov    0x4(%eax),%eax
810033ff:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003406:	8b 45 0c             	mov    0xc(%ebp),%eax
81003409:	01 d0                	add    %edx,%eax
8100340b:	8b 00                	mov    (%eax),%eax
8100340d:	83 ec 08             	sub    $0x8,%esp
81003410:	ff 75 1c             	push   0x1c(%ebp)
81003413:	50                   	push   %eax
81003414:	e8 15 fc ff ff       	call   8100302e <is_option>
81003419:	83 c4 10             	add    $0x10,%esp
8100341c:	85 c0                	test   %eax,%eax
8100341e:	75 10                	jne    81003430 <getopt_internal+0x326>
81003420:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003425:	e9 f0 07 00 00       	jmp    81003c1a <getopt_internal+0xb10>
8100342a:	90                   	nop
8100342b:	eb 04                	jmp    81003431 <getopt_internal+0x327>
8100342d:	90                   	nop
8100342e:	eb 01                	jmp    81003431 <getopt_internal+0x327>
81003430:	90                   	nop
81003431:	8b 45 20             	mov    0x20(%ebp),%eax
81003434:	8b 40 04             	mov    0x4(%eax),%eax
81003437:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100343e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003441:	01 d0                	add    %edx,%eax
81003443:	8b 00                	mov    (%eax),%eax
81003445:	85 c0                	test   %eax,%eax
81003447:	75 0a                	jne    81003453 <getopt_internal+0x349>
81003449:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100344e:	e9 c7 07 00 00       	jmp    81003c1a <getopt_internal+0xb10>
81003453:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81003457:	0f 84 15 03 00 00    	je     81003772 <getopt_internal+0x668>
8100345d:	8b 45 20             	mov    0x20(%ebp),%eax
81003460:	8b 40 04             	mov    0x4(%eax),%eax
81003463:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100346a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100346d:	01 d0                	add    %edx,%eax
8100346f:	8b 00                	mov    (%eax),%eax
81003471:	83 ec 04             	sub    $0x4,%esp
81003474:	6a 02                	push   $0x2
81003476:	68 9c 88 00 81       	push   $0x8100889c
8100347b:	50                   	push   %eax
8100347c:	e8 04 16 00 00       	call   81004a85 <memcmp>
81003481:	83 c4 10             	add    $0x10,%esp
81003484:	85 c0                	test   %eax,%eax
81003486:	74 29                	je     810034b1 <getopt_internal+0x3a7>
81003488:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
8100348c:	0f 84 e0 02 00 00    	je     81003772 <getopt_internal+0x668>
81003492:	8b 45 20             	mov    0x20(%ebp),%eax
81003495:	8b 40 04             	mov    0x4(%eax),%eax
81003498:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100349f:	8b 45 0c             	mov    0xc(%ebp),%eax
810034a2:	01 d0                	add    %edx,%eax
810034a4:	8b 00                	mov    (%eax),%eax
810034a6:	0f b6 00             	movzbl (%eax),%eax
810034a9:	3c 2b                	cmp    $0x2b,%al
810034ab:	0f 85 c1 02 00 00    	jne    81003772 <getopt_internal+0x668>
810034b1:	8b 45 20             	mov    0x20(%ebp),%eax
810034b4:	8b 40 10             	mov    0x10(%eax),%eax
810034b7:	83 f8 01             	cmp    $0x1,%eax
810034ba:	0f 85 b2 02 00 00    	jne    81003772 <getopt_internal+0x668>
810034c0:	8b 45 20             	mov    0x20(%ebp),%eax
810034c3:	8b 40 04             	mov    0x4(%eax),%eax
810034c6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810034d0:	01 d0                	add    %edx,%eax
810034d2:	8b 00                	mov    (%eax),%eax
810034d4:	83 ec 04             	sub    $0x4,%esp
810034d7:	6a 02                	push   $0x2
810034d9:	68 9c 88 00 81       	push   $0x8100889c
810034de:	50                   	push   %eax
810034df:	e8 a1 15 00 00       	call   81004a85 <memcmp>
810034e4:	83 c4 10             	add    $0x10,%esp
810034e7:	85 c0                	test   %eax,%eax
810034e9:	75 0a                	jne    810034f5 <getopt_internal+0x3eb>
810034eb:	8b 45 20             	mov    0x20(%ebp),%eax
810034ee:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
810034f5:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810034fc:	8b 45 20             	mov    0x20(%ebp),%eax
810034ff:	8b 40 04             	mov    0x4(%eax),%eax
81003502:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003509:	8b 45 0c             	mov    0xc(%ebp),%eax
8100350c:	01 d0                	add    %edx,%eax
8100350e:	8b 10                	mov    (%eax),%edx
81003510:	8b 45 20             	mov    0x20(%ebp),%eax
81003513:	8b 40 10             	mov    0x10(%eax),%eax
81003516:	01 d0                	add    %edx,%eax
81003518:	83 ec 08             	sub    $0x8,%esp
8100351b:	6a 3d                	push   $0x3d
8100351d:	50                   	push   %eax
8100351e:	e8 3d 35 00 00       	call   81006a60 <strchr>
81003523:	83 c4 10             	add    $0x10,%esp
81003526:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003529:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100352d:	75 4a                	jne    81003579 <getopt_internal+0x46f>
8100352f:	8b 45 20             	mov    0x20(%ebp),%eax
81003532:	8b 40 04             	mov    0x4(%eax),%eax
81003535:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100353c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100353f:	01 d0                	add    %edx,%eax
81003541:	8b 00                	mov    (%eax),%eax
81003543:	83 ec 0c             	sub    $0xc,%esp
81003546:	50                   	push   %eax
81003547:	e8 c4 36 00 00       	call   81006c10 <strlen>
8100354c:	83 c4 10             	add    $0x10,%esp
8100354f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003552:	8b 45 20             	mov    0x20(%ebp),%eax
81003555:	8b 40 04             	mov    0x4(%eax),%eax
81003558:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100355f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003562:	01 d0                	add    %edx,%eax
81003564:	8b 10                	mov    (%eax),%edx
81003566:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003569:	01 d0                	add    %edx,%eax
8100356b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100356e:	8b 45 20             	mov    0x20(%ebp),%eax
81003571:	8b 40 10             	mov    0x10(%eax),%eax
81003574:	29 45 ec             	sub    %eax,-0x14(%ebp)
81003577:	eb 28                	jmp    810035a1 <getopt_internal+0x497>
81003579:	8b 45 20             	mov    0x20(%ebp),%eax
8100357c:	8b 40 04             	mov    0x4(%eax),%eax
8100357f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003586:	8b 45 0c             	mov    0xc(%ebp),%eax
81003589:	01 d0                	add    %edx,%eax
8100358b:	8b 08                	mov    (%eax),%ecx
8100358d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003590:	29 c8                	sub    %ecx,%eax
81003592:	89 c2                	mov    %eax,%edx
81003594:	8b 45 20             	mov    0x20(%ebp),%eax
81003597:	8b 48 10             	mov    0x10(%eax),%ecx
8100359a:	89 d0                	mov    %edx,%eax
8100359c:	29 c8                	sub    %ecx,%eax
8100359e:	89 45 ec             	mov    %eax,-0x14(%ebp)
810035a1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810035a8:	e9 95 01 00 00       	jmp    81003742 <getopt_internal+0x638>
810035ad:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035b0:	c1 e0 04             	shl    $0x4,%eax
810035b3:	89 c2                	mov    %eax,%edx
810035b5:	8b 45 14             	mov    0x14(%ebp),%eax
810035b8:	01 d0                	add    %edx,%eax
810035ba:	8b 00                	mov    (%eax),%eax
810035bc:	8b 55 20             	mov    0x20(%ebp),%edx
810035bf:	8b 52 04             	mov    0x4(%edx),%edx
810035c2:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810035c9:	8b 55 0c             	mov    0xc(%ebp),%edx
810035cc:	01 ca                	add    %ecx,%edx
810035ce:	8b 0a                	mov    (%edx),%ecx
810035d0:	8b 55 20             	mov    0x20(%ebp),%edx
810035d3:	8b 52 10             	mov    0x10(%edx),%edx
810035d6:	01 ca                	add    %ecx,%edx
810035d8:	83 ec 04             	sub    $0x4,%esp
810035db:	ff 75 ec             	push   -0x14(%ebp)
810035de:	50                   	push   %eax
810035df:	52                   	push   %edx
810035e0:	e8 a0 14 00 00       	call   81004a85 <memcmp>
810035e5:	83 c4 10             	add    $0x10,%esp
810035e8:	85 c0                	test   %eax,%eax
810035ea:	0f 85 4e 01 00 00    	jne    8100373e <getopt_internal+0x634>
810035f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035f3:	c1 e0 04             	shl    $0x4,%eax
810035f6:	89 c2                	mov    %eax,%edx
810035f8:	8b 45 14             	mov    0x14(%ebp),%eax
810035fb:	01 d0                	add    %edx,%eax
810035fd:	8b 00                	mov    (%eax),%eax
810035ff:	83 ec 0c             	sub    $0xc,%esp
81003602:	50                   	push   %eax
81003603:	e8 08 36 00 00       	call   81006c10 <strlen>
81003608:	83 c4 10             	add    $0x10,%esp
8100360b:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100360e:	75 0b                	jne    8100361b <getopt_internal+0x511>
81003610:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003613:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003616:	e9 3e 01 00 00       	jmp    81003759 <getopt_internal+0x64f>
8100361b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100361f:	79 0b                	jns    8100362c <getopt_internal+0x522>
81003621:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003624:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003627:	e9 12 01 00 00       	jmp    8100373e <getopt_internal+0x634>
8100362c:	8b 45 20             	mov    0x20(%ebp),%eax
8100362f:	8b 40 08             	mov    0x8(%eax),%eax
81003632:	85 c0                	test   %eax,%eax
81003634:	0f 84 ef 00 00 00    	je     81003729 <getopt_internal+0x61f>
8100363a:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100363f:	8b 50 0c             	mov    0xc(%eax),%edx
81003642:	8b 45 0c             	mov    0xc(%ebp),%eax
81003645:	8b 00                	mov    (%eax),%eax
81003647:	83 ec 08             	sub    $0x8,%esp
8100364a:	52                   	push   %edx
8100364b:	50                   	push   %eax
8100364c:	e8 98 e5 ff ff       	call   81001be9 <fputs>
81003651:	83 c4 10             	add    $0x10,%esp
81003654:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003659:	8b 40 0c             	mov    0xc(%eax),%eax
8100365c:	83 ec 08             	sub    $0x8,%esp
8100365f:	50                   	push   %eax
81003660:	68 af 88 00 81       	push   $0x810088af
81003665:	e8 7f e5 ff ff       	call   81001be9 <fputs>
8100366a:	83 c4 10             	add    $0x10,%esp
8100366d:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003672:	8b 50 0c             	mov    0xc(%eax),%edx
81003675:	8b 45 20             	mov    0x20(%ebp),%eax
81003678:	8b 40 04             	mov    0x4(%eax),%eax
8100367b:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003682:	8b 45 0c             	mov    0xc(%ebp),%eax
81003685:	01 c8                	add    %ecx,%eax
81003687:	8b 00                	mov    (%eax),%eax
81003689:	83 ec 08             	sub    $0x8,%esp
8100368c:	52                   	push   %edx
8100368d:	50                   	push   %eax
8100368e:	e8 56 e5 ff ff       	call   81001be9 <fputs>
81003693:	83 c4 10             	add    $0x10,%esp
81003696:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100369b:	8b 40 0c             	mov    0xc(%eax),%eax
8100369e:	83 ec 08             	sub    $0x8,%esp
810036a1:	50                   	push   %eax
810036a2:	68 ba 88 00 81       	push   $0x810088ba
810036a7:	e8 3d e5 ff ff       	call   81001be9 <fputs>
810036ac:	83 c4 10             	add    $0x10,%esp
810036af:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810036b4:	8b 50 0c             	mov    0xc(%eax),%edx
810036b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810036ba:	c1 e0 04             	shl    $0x4,%eax
810036bd:	89 c1                	mov    %eax,%ecx
810036bf:	8b 45 14             	mov    0x14(%ebp),%eax
810036c2:	01 c8                	add    %ecx,%eax
810036c4:	8b 00                	mov    (%eax),%eax
810036c6:	83 ec 08             	sub    $0x8,%esp
810036c9:	52                   	push   %edx
810036ca:	50                   	push   %eax
810036cb:	e8 19 e5 ff ff       	call   81001be9 <fputs>
810036d0:	83 c4 10             	add    $0x10,%esp
810036d3:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810036d8:	8b 40 0c             	mov    0xc(%eax),%eax
810036db:	83 ec 08             	sub    $0x8,%esp
810036de:	50                   	push   %eax
810036df:	68 d7 88 00 81       	push   $0x810088d7
810036e4:	e8 00 e5 ff ff       	call   81001be9 <fputs>
810036e9:	83 c4 10             	add    $0x10,%esp
810036ec:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810036f1:	8b 50 0c             	mov    0xc(%eax),%edx
810036f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036f7:	c1 e0 04             	shl    $0x4,%eax
810036fa:	89 c1                	mov    %eax,%ecx
810036fc:	8b 45 14             	mov    0x14(%ebp),%eax
810036ff:	01 c8                	add    %ecx,%eax
81003701:	8b 00                	mov    (%eax),%eax
81003703:	83 ec 08             	sub    $0x8,%esp
81003706:	52                   	push   %edx
81003707:	50                   	push   %eax
81003708:	e8 dc e4 ff ff       	call   81001be9 <fputs>
8100370d:	83 c4 10             	add    $0x10,%esp
81003710:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003715:	8b 40 0c             	mov    0xc(%eax),%eax
81003718:	83 ec 08             	sub    $0x8,%esp
8100371b:	50                   	push   %eax
8100371c:	68 e0 88 00 81       	push   $0x810088e0
81003721:	e8 c3 e4 ff ff       	call   81001be9 <fputs>
81003726:	83 c4 10             	add    $0x10,%esp
81003729:	8b 45 20             	mov    0x20(%ebp),%eax
8100372c:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003733:	8b 45 20             	mov    0x20(%ebp),%eax
81003736:	8b 40 0c             	mov    0xc(%eax),%eax
81003739:	e9 dc 04 00 00       	jmp    81003c1a <getopt_internal+0xb10>
8100373e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003742:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003745:	c1 e0 04             	shl    $0x4,%eax
81003748:	89 c2                	mov    %eax,%edx
8100374a:	8b 45 14             	mov    0x14(%ebp),%eax
8100374d:	01 d0                	add    %edx,%eax
8100374f:	8b 00                	mov    (%eax),%eax
81003751:	85 c0                	test   %eax,%eax
81003753:	0f 85 54 fe ff ff    	jne    810035ad <getopt_internal+0x4a3>
81003759:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100375d:	78 13                	js     81003772 <getopt_internal+0x668>
8100375f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003762:	c1 e0 04             	shl    $0x4,%eax
81003765:	89 c2                	mov    %eax,%edx
81003767:	8b 45 14             	mov    0x14(%ebp),%eax
8100376a:	01 d0                	add    %edx,%eax
8100376c:	8b 40 04             	mov    0x4(%eax),%eax
8100376f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003772:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003776:	0f 89 9a 01 00 00    	jns    81003916 <getopt_internal+0x80c>
8100377c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003780:	0f 84 90 01 00 00    	je     81003916 <getopt_internal+0x80c>
81003786:	8b 45 20             	mov    0x20(%ebp),%eax
81003789:	8b 40 04             	mov    0x4(%eax),%eax
8100378c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003793:	8b 45 0c             	mov    0xc(%ebp),%eax
81003796:	01 d0                	add    %edx,%eax
81003798:	8b 10                	mov    (%eax),%edx
8100379a:	8b 45 20             	mov    0x20(%ebp),%eax
8100379d:	8b 40 10             	mov    0x10(%eax),%eax
810037a0:	01 d0                	add    %edx,%eax
810037a2:	0f b6 00             	movzbl (%eax),%eax
810037a5:	0f be c0             	movsbl %al,%eax
810037a8:	83 ec 08             	sub    $0x8,%esp
810037ab:	50                   	push   %eax
810037ac:	ff 75 10             	push   0x10(%ebp)
810037af:	e8 ac 32 00 00       	call   81006a60 <strchr>
810037b4:	83 c4 10             	add    $0x10,%esp
810037b7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810037ba:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810037be:	0f 85 f1 00 00 00    	jne    810038b5 <getopt_internal+0x7ab>
810037c4:	8b 45 20             	mov    0x20(%ebp),%eax
810037c7:	8b 40 08             	mov    0x8(%eax),%eax
810037ca:	85 c0                	test   %eax,%eax
810037cc:	0f 84 83 00 00 00    	je     81003855 <getopt_internal+0x74b>
810037d2:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810037d7:	8b 50 0c             	mov    0xc(%eax),%edx
810037da:	8b 45 0c             	mov    0xc(%ebp),%eax
810037dd:	8b 00                	mov    (%eax),%eax
810037df:	83 ec 08             	sub    $0x8,%esp
810037e2:	52                   	push   %edx
810037e3:	50                   	push   %eax
810037e4:	e8 00 e4 ff ff       	call   81001be9 <fputs>
810037e9:	83 c4 10             	add    $0x10,%esp
810037ec:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810037f1:	8b 40 0c             	mov    0xc(%eax),%eax
810037f4:	83 ec 08             	sub    $0x8,%esp
810037f7:	50                   	push   %eax
810037f8:	68 e4 88 00 81       	push   $0x810088e4
810037fd:	e8 e7 e3 ff ff       	call   81001be9 <fputs>
81003802:	83 c4 10             	add    $0x10,%esp
81003805:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100380a:	8b 50 0c             	mov    0xc(%eax),%edx
8100380d:	8b 45 20             	mov    0x20(%ebp),%eax
81003810:	8b 40 04             	mov    0x4(%eax),%eax
81003813:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8100381a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100381d:	01 c8                	add    %ecx,%eax
8100381f:	8b 08                	mov    (%eax),%ecx
81003821:	8b 45 20             	mov    0x20(%ebp),%eax
81003824:	8b 40 10             	mov    0x10(%eax),%eax
81003827:	01 c8                	add    %ecx,%eax
81003829:	0f b6 00             	movzbl (%eax),%eax
8100382c:	0f be c0             	movsbl %al,%eax
8100382f:	83 ec 08             	sub    $0x8,%esp
81003832:	52                   	push   %edx
81003833:	50                   	push   %eax
81003834:	e8 41 3d 00 00       	call   8100757a <fputc>
81003839:	83 c4 10             	add    $0x10,%esp
8100383c:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003841:	8b 40 0c             	mov    0xc(%eax),%eax
81003844:	83 ec 08             	sub    $0x8,%esp
81003847:	50                   	push   %eax
81003848:	68 fb 88 00 81       	push   $0x810088fb
8100384d:	e8 97 e3 ff ff       	call   81001be9 <fputs>
81003852:	83 c4 10             	add    $0x10,%esp
81003855:	8b 45 20             	mov    0x20(%ebp),%eax
81003858:	8b 40 10             	mov    0x10(%eax),%eax
8100385b:	8d 50 01             	lea    0x1(%eax),%edx
8100385e:	8b 45 20             	mov    0x20(%ebp),%eax
81003861:	89 50 10             	mov    %edx,0x10(%eax)
81003864:	8b 45 20             	mov    0x20(%ebp),%eax
81003867:	8b 40 04             	mov    0x4(%eax),%eax
8100386a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003871:	8b 45 0c             	mov    0xc(%ebp),%eax
81003874:	01 d0                	add    %edx,%eax
81003876:	8b 10                	mov    (%eax),%edx
81003878:	8b 45 20             	mov    0x20(%ebp),%eax
8100387b:	8b 40 10             	mov    0x10(%eax),%eax
8100387e:	01 d0                	add    %edx,%eax
81003880:	0f b6 00             	movzbl (%eax),%eax
81003883:	84 c0                	test   %al,%al
81003885:	75 19                	jne    810038a0 <getopt_internal+0x796>
81003887:	8b 45 20             	mov    0x20(%ebp),%eax
8100388a:	8b 40 04             	mov    0x4(%eax),%eax
8100388d:	8d 50 01             	lea    0x1(%eax),%edx
81003890:	8b 45 20             	mov    0x20(%ebp),%eax
81003893:	89 50 04             	mov    %edx,0x4(%eax)
81003896:	8b 45 20             	mov    0x20(%ebp),%eax
81003899:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810038a0:	8b 45 20             	mov    0x20(%ebp),%eax
810038a3:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810038aa:	8b 45 20             	mov    0x20(%ebp),%eax
810038ad:	8b 40 0c             	mov    0xc(%eax),%eax
810038b0:	e9 65 03 00 00       	jmp    81003c1a <getopt_internal+0xb10>
810038b5:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038b8:	83 c0 01             	add    $0x1,%eax
810038bb:	0f b6 00             	movzbl (%eax),%eax
810038be:	3c 3a                	cmp    $0x3a,%al
810038c0:	75 1b                	jne    810038dd <getopt_internal+0x7d3>
810038c2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038c5:	83 c0 02             	add    $0x2,%eax
810038c8:	0f b6 00             	movzbl (%eax),%eax
810038cb:	3c 3a                	cmp    $0x3a,%al
810038cd:	75 07                	jne    810038d6 <getopt_internal+0x7cc>
810038cf:	b8 02 00 00 00       	mov    $0x2,%eax
810038d4:	eb 0c                	jmp    810038e2 <getopt_internal+0x7d8>
810038d6:	b8 01 00 00 00       	mov    $0x1,%eax
810038db:	eb 05                	jmp    810038e2 <getopt_internal+0x7d8>
810038dd:	b8 00 00 00 00       	mov    $0x0,%eax
810038e2:	89 45 e0             	mov    %eax,-0x20(%ebp)
810038e5:	8b 45 20             	mov    0x20(%ebp),%eax
810038e8:	8b 40 04             	mov    0x4(%eax),%eax
810038eb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810038f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810038f5:	01 d0                	add    %edx,%eax
810038f7:	8b 10                	mov    (%eax),%edx
810038f9:	8b 45 20             	mov    0x20(%ebp),%eax
810038fc:	8b 40 10             	mov    0x10(%eax),%eax
810038ff:	83 c0 01             	add    $0x1,%eax
81003902:	01 d0                	add    %edx,%eax
81003904:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003907:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100390a:	0f b6 00             	movzbl (%eax),%eax
8100390d:	0f be d0             	movsbl %al,%edx
81003910:	8b 45 20             	mov    0x20(%ebp),%eax
81003913:	89 50 0c             	mov    %edx,0xc(%eax)
81003916:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100391d:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81003921:	74 40                	je     81003963 <getopt_internal+0x859>
81003923:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81003927:	0f 85 b0 01 00 00    	jne    81003add <getopt_internal+0x9d3>
8100392d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003930:	0f b6 00             	movzbl (%eax),%eax
81003933:	3c 3d                	cmp    $0x3d,%al
81003935:	75 04                	jne    8100393b <getopt_internal+0x831>
81003937:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8100393b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100393e:	0f b6 00             	movzbl (%eax),%eax
81003941:	84 c0                	test   %al,%al
81003943:	74 05                	je     8100394a <getopt_internal+0x840>
81003945:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003948:	eb 05                	jmp    8100394f <getopt_internal+0x845>
8100394a:	b8 00 00 00 00       	mov    $0x0,%eax
8100394f:	8b 55 20             	mov    0x20(%ebp),%edx
81003952:	89 02                	mov    %eax,(%edx)
81003954:	8b 45 20             	mov    0x20(%ebp),%eax
81003957:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100395e:	e9 d2 01 00 00       	jmp    81003b35 <getopt_internal+0xa2b>
81003963:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003966:	0f b6 00             	movzbl (%eax),%eax
81003969:	3c 3d                	cmp    $0x3d,%al
8100396b:	75 04                	jne    81003971 <getopt_internal+0x867>
8100396d:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003971:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003974:	0f b6 00             	movzbl (%eax),%eax
81003977:	84 c0                	test   %al,%al
81003979:	74 17                	je     81003992 <getopt_internal+0x888>
8100397b:	8b 45 20             	mov    0x20(%ebp),%eax
8100397e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003981:	89 10                	mov    %edx,(%eax)
81003983:	8b 45 20             	mov    0x20(%ebp),%eax
81003986:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100398d:	e9 a3 01 00 00       	jmp    81003b35 <getopt_internal+0xa2b>
81003992:	8b 45 20             	mov    0x20(%ebp),%eax
81003995:	8b 40 04             	mov    0x4(%eax),%eax
81003998:	83 c0 01             	add    $0x1,%eax
8100399b:	39 45 08             	cmp    %eax,0x8(%ebp)
8100399e:	0f 8f 0a 01 00 00    	jg     81003aae <getopt_internal+0x9a4>
810039a4:	8b 45 20             	mov    0x20(%ebp),%eax
810039a7:	8b 40 08             	mov    0x8(%eax),%eax
810039aa:	85 c0                	test   %eax,%eax
810039ac:	0f 84 d3 00 00 00    	je     81003a85 <getopt_internal+0x97b>
810039b2:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810039b7:	8b 50 0c             	mov    0xc(%eax),%edx
810039ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810039bd:	8b 00                	mov    (%eax),%eax
810039bf:	83 ec 08             	sub    $0x8,%esp
810039c2:	52                   	push   %edx
810039c3:	50                   	push   %eax
810039c4:	e8 20 e2 ff ff       	call   81001be9 <fputs>
810039c9:	83 c4 10             	add    $0x10,%esp
810039cc:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810039d1:	8b 40 0c             	mov    0xc(%eax),%eax
810039d4:	83 ec 08             	sub    $0x8,%esp
810039d7:	50                   	push   %eax
810039d8:	68 00 89 00 81       	push   $0x81008900
810039dd:	e8 07 e2 ff ff       	call   81001be9 <fputs>
810039e2:	83 c4 10             	add    $0x10,%esp
810039e5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810039e9:	78 54                	js     81003a3f <getopt_internal+0x935>
810039eb:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810039f0:	8b 40 0c             	mov    0xc(%eax),%eax
810039f3:	83 ec 08             	sub    $0x8,%esp
810039f6:	50                   	push   %eax
810039f7:	6a 2d                	push   $0x2d
810039f9:	e8 7c 3b 00 00       	call   8100757a <fputc>
810039fe:	83 c4 10             	add    $0x10,%esp
81003a01:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003a06:	8b 50 0c             	mov    0xc(%eax),%edx
81003a09:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003a0c:	c1 e0 04             	shl    $0x4,%eax
81003a0f:	89 c1                	mov    %eax,%ecx
81003a11:	8b 45 14             	mov    0x14(%ebp),%eax
81003a14:	01 c8                	add    %ecx,%eax
81003a16:	8b 00                	mov    (%eax),%eax
81003a18:	83 ec 08             	sub    $0x8,%esp
81003a1b:	52                   	push   %edx
81003a1c:	50                   	push   %eax
81003a1d:	e8 c7 e1 ff ff       	call   81001be9 <fputs>
81003a22:	83 c4 10             	add    $0x10,%esp
81003a25:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a29:	74 07                	je     81003a32 <getopt_internal+0x928>
81003a2b:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003a30:	eb 05                	jmp    81003a37 <getopt_internal+0x92d>
81003a32:	ba 3f 00 00 00       	mov    $0x3f,%edx
81003a37:	8b 45 20             	mov    0x20(%ebp),%eax
81003a3a:	89 50 0c             	mov    %edx,0xc(%eax)
81003a3d:	eb 2d                	jmp    81003a6c <getopt_internal+0x962>
81003a3f:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003a44:	8b 50 0c             	mov    0xc(%eax),%edx
81003a47:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a4a:	0f b6 00             	movzbl (%eax),%eax
81003a4d:	0f be c0             	movsbl %al,%eax
81003a50:	83 ec 08             	sub    $0x8,%esp
81003a53:	52                   	push   %edx
81003a54:	50                   	push   %eax
81003a55:	e8 20 3b 00 00       	call   8100757a <fputc>
81003a5a:	83 c4 10             	add    $0x10,%esp
81003a5d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a60:	0f b6 00             	movzbl (%eax),%eax
81003a63:	0f be d0             	movsbl %al,%edx
81003a66:	8b 45 20             	mov    0x20(%ebp),%eax
81003a69:	89 50 0c             	mov    %edx,0xc(%eax)
81003a6c:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003a71:	8b 40 0c             	mov    0xc(%eax),%eax
81003a74:	83 ec 08             	sub    $0x8,%esp
81003a77:	50                   	push   %eax
81003a78:	68 fb 88 00 81       	push   $0x810088fb
81003a7d:	e8 67 e1 ff ff       	call   81001be9 <fputs>
81003a82:	83 c4 10             	add    $0x10,%esp
81003a85:	8b 45 20             	mov    0x20(%ebp),%eax
81003a88:	8b 40 04             	mov    0x4(%eax),%eax
81003a8b:	8d 50 01             	lea    0x1(%eax),%edx
81003a8e:	8b 45 20             	mov    0x20(%ebp),%eax
81003a91:	89 50 04             	mov    %edx,0x4(%eax)
81003a94:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a98:	74 0a                	je     81003aa4 <getopt_internal+0x99a>
81003a9a:	b8 3a 00 00 00       	mov    $0x3a,%eax
81003a9f:	e9 76 01 00 00       	jmp    81003c1a <getopt_internal+0xb10>
81003aa4:	b8 3f 00 00 00       	mov    $0x3f,%eax
81003aa9:	e9 6c 01 00 00       	jmp    81003c1a <getopt_internal+0xb10>
81003aae:	8b 45 20             	mov    0x20(%ebp),%eax
81003ab1:	8b 40 04             	mov    0x4(%eax),%eax
81003ab4:	83 c0 01             	add    $0x1,%eax
81003ab7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003abe:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ac1:	01 d0                	add    %edx,%eax
81003ac3:	8b 10                	mov    (%eax),%edx
81003ac5:	8b 45 20             	mov    0x20(%ebp),%eax
81003ac8:	89 10                	mov    %edx,(%eax)
81003aca:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003ad1:	8b 45 20             	mov    0x20(%ebp),%eax
81003ad4:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003adb:	eb 58                	jmp    81003b35 <getopt_internal+0xa2b>
81003add:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003ae1:	79 3e                	jns    81003b21 <getopt_internal+0xa17>
81003ae3:	8b 45 20             	mov    0x20(%ebp),%eax
81003ae6:	8b 40 10             	mov    0x10(%eax),%eax
81003ae9:	8d 50 01             	lea    0x1(%eax),%edx
81003aec:	8b 45 20             	mov    0x20(%ebp),%eax
81003aef:	89 50 10             	mov    %edx,0x10(%eax)
81003af2:	8b 45 20             	mov    0x20(%ebp),%eax
81003af5:	8b 40 04             	mov    0x4(%eax),%eax
81003af8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003aff:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b02:	01 d0                	add    %edx,%eax
81003b04:	8b 10                	mov    (%eax),%edx
81003b06:	8b 45 20             	mov    0x20(%ebp),%eax
81003b09:	8b 40 10             	mov    0x10(%eax),%eax
81003b0c:	01 d0                	add    %edx,%eax
81003b0e:	0f b6 00             	movzbl (%eax),%eax
81003b11:	84 c0                	test   %al,%al
81003b13:	75 16                	jne    81003b2b <getopt_internal+0xa21>
81003b15:	8b 45 20             	mov    0x20(%ebp),%eax
81003b18:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003b1f:	eb 0a                	jmp    81003b2b <getopt_internal+0xa21>
81003b21:	8b 45 20             	mov    0x20(%ebp),%eax
81003b24:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003b2b:	8b 45 20             	mov    0x20(%ebp),%eax
81003b2e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003b34:	90                   	nop
81003b35:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b39:	75 57                	jne    81003b92 <getopt_internal+0xa88>
81003b3b:	8b 45 20             	mov    0x20(%ebp),%eax
81003b3e:	8b 40 10             	mov    0x10(%eax),%eax
81003b41:	83 f8 01             	cmp    $0x1,%eax
81003b44:	75 4c                	jne    81003b92 <getopt_internal+0xa88>
81003b46:	8b 45 20             	mov    0x20(%ebp),%eax
81003b49:	8b 40 18             	mov    0x18(%eax),%eax
81003b4c:	85 c0                	test   %eax,%eax
81003b4e:	74 42                	je     81003b92 <getopt_internal+0xa88>
81003b50:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b53:	8d 48 01             	lea    0x1(%eax),%ecx
81003b56:	8b 45 20             	mov    0x20(%ebp),%eax
81003b59:	8b 40 18             	mov    0x18(%eax),%eax
81003b5c:	8b 55 20             	mov    0x20(%ebp),%edx
81003b5f:	8b 52 14             	mov    0x14(%edx),%edx
81003b62:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003b69:	8b 55 0c             	mov    0xc(%ebp),%edx
81003b6c:	01 da                	add    %ebx,%edx
81003b6e:	83 ec 04             	sub    $0x4,%esp
81003b71:	51                   	push   %ecx
81003b72:	50                   	push   %eax
81003b73:	52                   	push   %edx
81003b74:	e8 7f f4 ff ff       	call   81002ff8 <permute>
81003b79:	83 c4 10             	add    $0x10,%esp
81003b7c:	8b 45 20             	mov    0x20(%ebp),%eax
81003b7f:	8b 40 14             	mov    0x14(%eax),%eax
81003b82:	8d 50 01             	lea    0x1(%eax),%edx
81003b85:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b88:	01 c2                	add    %eax,%edx
81003b8a:	8b 45 20             	mov    0x20(%ebp),%eax
81003b8d:	89 50 04             	mov    %edx,0x4(%eax)
81003b90:	eb 1f                	jmp    81003bb1 <getopt_internal+0xaa7>
81003b92:	8b 45 20             	mov    0x20(%ebp),%eax
81003b95:	8b 40 10             	mov    0x10(%eax),%eax
81003b98:	83 f8 01             	cmp    $0x1,%eax
81003b9b:	75 14                	jne    81003bb1 <getopt_internal+0xaa7>
81003b9d:	8b 45 20             	mov    0x20(%ebp),%eax
81003ba0:	8b 40 04             	mov    0x4(%eax),%eax
81003ba3:	8d 50 01             	lea    0x1(%eax),%edx
81003ba6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ba9:	01 c2                	add    %eax,%edx
81003bab:	8b 45 20             	mov    0x20(%ebp),%eax
81003bae:	89 50 04             	mov    %edx,0x4(%eax)
81003bb1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003bb5:	78 5d                	js     81003c14 <getopt_internal+0xb0a>
81003bb7:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003bbb:	74 08                	je     81003bc5 <getopt_internal+0xabb>
81003bbd:	8b 45 18             	mov    0x18(%ebp),%eax
81003bc0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003bc3:	89 10                	mov    %edx,(%eax)
81003bc5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bc8:	c1 e0 04             	shl    $0x4,%eax
81003bcb:	89 c2                	mov    %eax,%edx
81003bcd:	8b 45 14             	mov    0x14(%ebp),%eax
81003bd0:	01 d0                	add    %edx,%eax
81003bd2:	8b 40 08             	mov    0x8(%eax),%eax
81003bd5:	85 c0                	test   %eax,%eax
81003bd7:	74 29                	je     81003c02 <getopt_internal+0xaf8>
81003bd9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bdc:	c1 e0 04             	shl    $0x4,%eax
81003bdf:	89 c2                	mov    %eax,%edx
81003be1:	8b 45 14             	mov    0x14(%ebp),%eax
81003be4:	01 c2                	add    %eax,%edx
81003be6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003be9:	c1 e0 04             	shl    $0x4,%eax
81003bec:	89 c1                	mov    %eax,%ecx
81003bee:	8b 45 14             	mov    0x14(%ebp),%eax
81003bf1:	01 c8                	add    %ecx,%eax
81003bf3:	8b 40 08             	mov    0x8(%eax),%eax
81003bf6:	8b 52 0c             	mov    0xc(%edx),%edx
81003bf9:	89 10                	mov    %edx,(%eax)
81003bfb:	b8 00 00 00 00       	mov    $0x0,%eax
81003c00:	eb 18                	jmp    81003c1a <getopt_internal+0xb10>
81003c02:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003c05:	c1 e0 04             	shl    $0x4,%eax
81003c08:	89 c2                	mov    %eax,%edx
81003c0a:	8b 45 14             	mov    0x14(%ebp),%eax
81003c0d:	01 d0                	add    %edx,%eax
81003c0f:	8b 40 0c             	mov    0xc(%eax),%eax
81003c12:	eb 06                	jmp    81003c1a <getopt_internal+0xb10>
81003c14:	8b 45 20             	mov    0x20(%ebp),%eax
81003c17:	8b 40 0c             	mov    0xc(%eax),%eax
81003c1a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003c1d:	c9                   	leave  
81003c1e:	c3                   	ret    

81003c1f <getopt>:
81003c1f:	55                   	push   %ebp
81003c20:	89 e5                	mov    %esp,%ebp
81003c22:	83 ec 28             	sub    $0x28,%esp
81003c25:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c28:	50                   	push   %eax
81003c29:	e8 31 f4 ff ff       	call   8100305f <read_globals>
81003c2e:	83 c4 04             	add    $0x4,%esp
81003c31:	83 ec 04             	sub    $0x4,%esp
81003c34:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c37:	50                   	push   %eax
81003c38:	6a 00                	push   $0x0
81003c3a:	6a 00                	push   $0x0
81003c3c:	6a 00                	push   $0x0
81003c3e:	ff 75 10             	push   0x10(%ebp)
81003c41:	ff 75 0c             	push   0xc(%ebp)
81003c44:	ff 75 08             	push   0x8(%ebp)
81003c47:	e8 be f4 ff ff       	call   8100310a <getopt_internal>
81003c4c:	83 c4 20             	add    $0x20,%esp
81003c4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c52:	83 ec 0c             	sub    $0xc,%esp
81003c55:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c58:	50                   	push   %eax
81003c59:	e8 5a f4 ff ff       	call   810030b8 <write_globals>
81003c5e:	83 c4 10             	add    $0x10,%esp
81003c61:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c64:	c9                   	leave  
81003c65:	c3                   	ret    

81003c66 <getopt_long>:
81003c66:	55                   	push   %ebp
81003c67:	89 e5                	mov    %esp,%ebp
81003c69:	83 ec 28             	sub    $0x28,%esp
81003c6c:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c6f:	50                   	push   %eax
81003c70:	e8 ea f3 ff ff       	call   8100305f <read_globals>
81003c75:	83 c4 04             	add    $0x4,%esp
81003c78:	83 ec 04             	sub    $0x4,%esp
81003c7b:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c7e:	50                   	push   %eax
81003c7f:	6a 00                	push   $0x0
81003c81:	ff 75 18             	push   0x18(%ebp)
81003c84:	ff 75 14             	push   0x14(%ebp)
81003c87:	ff 75 10             	push   0x10(%ebp)
81003c8a:	ff 75 0c             	push   0xc(%ebp)
81003c8d:	ff 75 08             	push   0x8(%ebp)
81003c90:	e8 75 f4 ff ff       	call   8100310a <getopt_internal>
81003c95:	83 c4 20             	add    $0x20,%esp
81003c98:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c9b:	83 ec 0c             	sub    $0xc,%esp
81003c9e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003ca1:	50                   	push   %eax
81003ca2:	e8 11 f4 ff ff       	call   810030b8 <write_globals>
81003ca7:	83 c4 10             	add    $0x10,%esp
81003caa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cad:	c9                   	leave  
81003cae:	c3                   	ret    

81003caf <getopt_long_only>:
81003caf:	55                   	push   %ebp
81003cb0:	89 e5                	mov    %esp,%ebp
81003cb2:	83 ec 28             	sub    $0x28,%esp
81003cb5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003cb8:	50                   	push   %eax
81003cb9:	e8 a1 f3 ff ff       	call   8100305f <read_globals>
81003cbe:	83 c4 04             	add    $0x4,%esp
81003cc1:	83 ec 04             	sub    $0x4,%esp
81003cc4:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003cc7:	50                   	push   %eax
81003cc8:	6a 01                	push   $0x1
81003cca:	ff 75 18             	push   0x18(%ebp)
81003ccd:	ff 75 14             	push   0x14(%ebp)
81003cd0:	ff 75 10             	push   0x10(%ebp)
81003cd3:	ff 75 0c             	push   0xc(%ebp)
81003cd6:	ff 75 08             	push   0x8(%ebp)
81003cd9:	e8 2c f4 ff ff       	call   8100310a <getopt_internal>
81003cde:	83 c4 20             	add    $0x20,%esp
81003ce1:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ce4:	83 ec 0c             	sub    $0xc,%esp
81003ce7:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003cea:	50                   	push   %eax
81003ceb:	e8 c8 f3 ff ff       	call   810030b8 <write_globals>
81003cf0:	83 c4 10             	add    $0x10,%esp
81003cf3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cf6:	c9                   	leave  
81003cf7:	c3                   	ret    

81003cf8 <__getopt_r>:
81003cf8:	55                   	push   %ebp
81003cf9:	89 e5                	mov    %esp,%ebp
81003cfb:	83 ec 08             	sub    $0x8,%esp
81003cfe:	83 ec 04             	sub    $0x4,%esp
81003d01:	ff 75 14             	push   0x14(%ebp)
81003d04:	6a 00                	push   $0x0
81003d06:	6a 00                	push   $0x0
81003d08:	6a 00                	push   $0x0
81003d0a:	ff 75 10             	push   0x10(%ebp)
81003d0d:	ff 75 0c             	push   0xc(%ebp)
81003d10:	ff 75 08             	push   0x8(%ebp)
81003d13:	e8 f2 f3 ff ff       	call   8100310a <getopt_internal>
81003d18:	83 c4 20             	add    $0x20,%esp
81003d1b:	c9                   	leave  
81003d1c:	c3                   	ret    

81003d1d <__getopt_long_r>:
81003d1d:	55                   	push   %ebp
81003d1e:	89 e5                	mov    %esp,%ebp
81003d20:	83 ec 08             	sub    $0x8,%esp
81003d23:	83 ec 04             	sub    $0x4,%esp
81003d26:	ff 75 1c             	push   0x1c(%ebp)
81003d29:	6a 00                	push   $0x0
81003d2b:	ff 75 18             	push   0x18(%ebp)
81003d2e:	ff 75 14             	push   0x14(%ebp)
81003d31:	ff 75 10             	push   0x10(%ebp)
81003d34:	ff 75 0c             	push   0xc(%ebp)
81003d37:	ff 75 08             	push   0x8(%ebp)
81003d3a:	e8 cb f3 ff ff       	call   8100310a <getopt_internal>
81003d3f:	83 c4 20             	add    $0x20,%esp
81003d42:	c9                   	leave  
81003d43:	c3                   	ret    

81003d44 <__getopt_long_only_r>:
81003d44:	55                   	push   %ebp
81003d45:	89 e5                	mov    %esp,%ebp
81003d47:	83 ec 08             	sub    $0x8,%esp
81003d4a:	83 ec 04             	sub    $0x4,%esp
81003d4d:	ff 75 1c             	push   0x1c(%ebp)
81003d50:	6a 01                	push   $0x1
81003d52:	ff 75 18             	push   0x18(%ebp)
81003d55:	ff 75 14             	push   0x14(%ebp)
81003d58:	ff 75 10             	push   0x10(%ebp)
81003d5b:	ff 75 0c             	push   0xc(%ebp)
81003d5e:	ff 75 08             	push   0x8(%ebp)
81003d61:	e8 a4 f3 ff ff       	call   8100310a <getopt_internal>
81003d66:	83 c4 20             	add    $0x20,%esp
81003d69:	c9                   	leave  
81003d6a:	c3                   	ret    

81003d6b <__getreent>:
81003d6b:	55                   	push   %ebp
81003d6c:	89 e5                	mov    %esp,%ebp
81003d6e:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003d73:	5d                   	pop    %ebp
81003d74:	c3                   	ret    

81003d75 <__smakebuf_r>:
81003d75:	55                   	push   %ebp
81003d76:	89 e5                	mov    %esp,%ebp
81003d78:	56                   	push   %esi
81003d79:	53                   	push   %ebx
81003d7a:	83 ec 10             	sub    $0x10,%esp
81003d7d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003d80:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d84:	98                   	cwtl   
81003d85:	83 e0 02             	and    $0x2,%eax
81003d88:	85 c0                	test   %eax,%eax
81003d8a:	74 16                	je     81003da2 <__smakebuf_r+0x2d>
81003d8c:	8d 43 43             	lea    0x43(%ebx),%eax
81003d8f:	89 03                	mov    %eax,(%ebx)
81003d91:	8b 03                	mov    (%ebx),%eax
81003d93:	89 43 10             	mov    %eax,0x10(%ebx)
81003d96:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003d9d:	e9 b9 00 00 00       	jmp    81003e5b <__smakebuf_r+0xe6>
81003da2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003da5:	50                   	push   %eax
81003da6:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003da9:	50                   	push   %eax
81003daa:	53                   	push   %ebx
81003dab:	ff 75 08             	push   0x8(%ebp)
81003dae:	e8 af 00 00 00       	call   81003e62 <__swhatbuf_r>
81003db3:	83 c4 10             	add    $0x10,%esp
81003db6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003db9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003dbc:	83 ec 08             	sub    $0x8,%esp
81003dbf:	50                   	push   %eax
81003dc0:	ff 75 08             	push   0x8(%ebp)
81003dc3:	e8 f9 03 00 00       	call   810041c1 <_malloc_r>
81003dc8:	83 c4 10             	add    $0x10,%esp
81003dcb:	89 c6                	mov    %eax,%esi
81003dcd:	85 f6                	test   %esi,%esi
81003dcf:	75 2f                	jne    81003e00 <__smakebuf_r+0x8b>
81003dd1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003dd5:	98                   	cwtl   
81003dd6:	25 00 02 00 00       	and    $0x200,%eax
81003ddb:	85 c0                	test   %eax,%eax
81003ddd:	75 7c                	jne    81003e5b <__smakebuf_r+0xe6>
81003ddf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003de3:	83 e0 fc             	and    $0xfffffffc,%eax
81003de6:	83 c8 02             	or     $0x2,%eax
81003de9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003ded:	8d 43 43             	lea    0x43(%ebx),%eax
81003df0:	89 03                	mov    %eax,(%ebx)
81003df2:	8b 03                	mov    (%ebx),%eax
81003df4:	89 43 10             	mov    %eax,0x10(%ebx)
81003df7:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003dfe:	eb 5b                	jmp    81003e5b <__smakebuf_r+0xe6>
81003e00:	8b 45 08             	mov    0x8(%ebp),%eax
81003e03:	c7 40 3c b2 18 00 81 	movl   $0x810018b2,0x3c(%eax)
81003e0a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003e0e:	0c 80                	or     $0x80,%al
81003e10:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e14:	89 33                	mov    %esi,(%ebx)
81003e16:	8b 03                	mov    (%ebx),%eax
81003e18:	89 43 10             	mov    %eax,0x10(%ebx)
81003e1b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e1e:	89 43 14             	mov    %eax,0x14(%ebx)
81003e21:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e24:	85 c0                	test   %eax,%eax
81003e26:	74 26                	je     81003e4e <__smakebuf_r+0xd9>
81003e28:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003e2c:	98                   	cwtl   
81003e2d:	83 ec 08             	sub    $0x8,%esp
81003e30:	50                   	push   %eax
81003e31:	ff 75 08             	push   0x8(%ebp)
81003e34:	e8 8e 3a 00 00       	call   810078c7 <_isatty_r>
81003e39:	83 c4 10             	add    $0x10,%esp
81003e3c:	85 c0                	test   %eax,%eax
81003e3e:	74 0e                	je     81003e4e <__smakebuf_r+0xd9>
81003e40:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003e44:	83 e0 fc             	and    $0xfffffffc,%eax
81003e47:	83 c8 01             	or     $0x1,%eax
81003e4a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e4e:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003e52:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e55:	09 d0                	or     %edx,%eax
81003e57:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e5b:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003e5e:	5b                   	pop    %ebx
81003e5f:	5e                   	pop    %esi
81003e60:	5d                   	pop    %ebp
81003e61:	c3                   	ret    

81003e62 <__swhatbuf_r>:
81003e62:	55                   	push   %ebp
81003e63:	89 e5                	mov    %esp,%ebp
81003e65:	83 ec 58             	sub    $0x58,%esp
81003e68:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003e6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e72:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e76:	66 85 c0             	test   %ax,%ax
81003e79:	78 1f                	js     81003e9a <__swhatbuf_r+0x38>
81003e7b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e7e:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e82:	98                   	cwtl   
81003e83:	83 ec 04             	sub    $0x4,%esp
81003e86:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003e89:	52                   	push   %edx
81003e8a:	50                   	push   %eax
81003e8b:	ff 75 08             	push   0x8(%ebp)
81003e8e:	e8 59 ea ff ff       	call   810028ec <_fstat_r>
81003e93:	83 c4 10             	add    $0x10,%esp
81003e96:	85 c0                	test   %eax,%eax
81003e98:	79 35                	jns    81003ecf <__swhatbuf_r+0x6d>
81003e9a:	8b 45 14             	mov    0x14(%ebp),%eax
81003e9d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003ea3:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ea6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003eaa:	98                   	cwtl   
81003eab:	25 80 00 00 00       	and    $0x80,%eax
81003eb0:	85 c0                	test   %eax,%eax
81003eb2:	74 0b                	je     81003ebf <__swhatbuf_r+0x5d>
81003eb4:	8b 45 10             	mov    0x10(%ebp),%eax
81003eb7:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003ebd:	eb 09                	jmp    81003ec8 <__swhatbuf_r+0x66>
81003ebf:	8b 45 10             	mov    0x10(%ebp),%eax
81003ec2:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003ec8:	b8 00 00 00 00       	mov    $0x0,%eax
81003ecd:	eb 24                	jmp    81003ef3 <__swhatbuf_r+0x91>
81003ecf:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003ed2:	25 00 f0 00 00       	and    $0xf000,%eax
81003ed7:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003edc:	0f 94 c0             	sete   %al
81003edf:	0f b6 d0             	movzbl %al,%edx
81003ee2:	8b 45 14             	mov    0x14(%ebp),%eax
81003ee5:	89 10                	mov    %edx,(%eax)
81003ee7:	8b 45 10             	mov    0x10(%ebp),%eax
81003eea:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003ef0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ef3:	c9                   	leave  
81003ef4:	c3                   	ret    

81003ef5 <malloc>:
81003ef5:	55                   	push   %ebp
81003ef6:	89 e5                	mov    %esp,%ebp
81003ef8:	83 ec 08             	sub    $0x8,%esp
81003efb:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003f00:	83 ec 08             	sub    $0x8,%esp
81003f03:	ff 75 08             	push   0x8(%ebp)
81003f06:	50                   	push   %eax
81003f07:	e8 b5 02 00 00       	call   810041c1 <_malloc_r>
81003f0c:	83 c4 10             	add    $0x10,%esp
81003f0f:	c9                   	leave  
81003f10:	c3                   	ret    

81003f11 <free>:
81003f11:	55                   	push   %ebp
81003f12:	89 e5                	mov    %esp,%ebp
81003f14:	83 ec 08             	sub    $0x8,%esp
81003f17:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81003f1c:	83 ec 08             	sub    $0x8,%esp
81003f1f:	ff 75 08             	push   0x8(%ebp)
81003f22:	50                   	push   %eax
81003f23:	e8 7a df ff ff       	call   81001ea2 <_free_r>
81003f28:	83 c4 10             	add    $0x10,%esp
81003f2b:	90                   	nop
81003f2c:	c9                   	leave  
81003f2d:	c3                   	ret    

81003f2e <malloc_extend_top>:
81003f2e:	55                   	push   %ebp
81003f2f:	89 e5                	mov    %esp,%ebp
81003f31:	83 ec 38             	sub    $0x38,%esp
81003f34:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003f3b:	b8 00 91 00 81       	mov    $0x81009100,%eax
81003f40:	8b 40 08             	mov    0x8(%eax),%eax
81003f43:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003f46:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003f49:	8b 40 04             	mov    0x4(%eax),%eax
81003f4c:	83 e0 fc             	and    $0xfffffffc,%eax
81003f4f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f52:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003f55:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f58:	01 d0                	add    %edx,%eax
81003f5a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f5d:	8b 15 e0 9b 00 81    	mov    0x81009be0,%edx
81003f63:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f66:	01 d0                	add    %edx,%eax
81003f68:	83 c0 10             	add    $0x10,%eax
81003f6b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f6e:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003f75:	a1 0c 95 00 81       	mov    0x8100950c,%eax
81003f7a:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f7d:	74 15                	je     81003f94 <malloc_extend_top+0x66>
81003f7f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f82:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f85:	01 d0                	add    %edx,%eax
81003f87:	8d 50 ff             	lea    -0x1(%eax),%edx
81003f8a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f8d:	f7 d8                	neg    %eax
81003f8f:	21 d0                	and    %edx,%eax
81003f91:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f94:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f97:	83 ec 08             	sub    $0x8,%esp
81003f9a:	50                   	push   %eax
81003f9b:	ff 75 08             	push   0x8(%ebp)
81003f9e:	e8 a6 26 00 00       	call   81006649 <_sbrk_r>
81003fa3:	83 c4 10             	add    $0x10,%esp
81003fa6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003fa9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003fad:	0f 84 0b 02 00 00    	je     810041be <malloc_extend_top+0x290>
81003fb3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fb6:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003fb9:	73 0e                	jae    81003fc9 <malloc_extend_top+0x9b>
81003fbb:	b8 00 91 00 81       	mov    $0x81009100,%eax
81003fc0:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003fc3:	0f 85 f5 01 00 00    	jne    810041be <malloc_extend_top+0x290>
81003fc9:	a1 00 9c 00 81       	mov    0x81009c00,%eax
81003fce:	89 c2                	mov    %eax,%edx
81003fd0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003fd3:	01 d0                	add    %edx,%eax
81003fd5:	a3 00 9c 00 81       	mov    %eax,0x81009c00
81003fda:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fdd:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003fe0:	75 30                	jne    81004012 <malloc_extend_top+0xe4>
81003fe2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003fe5:	8d 50 ff             	lea    -0x1(%eax),%edx
81003fe8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003feb:	21 d0                	and    %edx,%eax
81003fed:	85 c0                	test   %eax,%eax
81003fef:	75 21                	jne    81004012 <malloc_extend_top+0xe4>
81003ff1:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003ff4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ff7:	01 d0                	add    %edx,%eax
81003ff9:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003ffc:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004001:	8b 40 08             	mov    0x8(%eax),%eax
81004004:	8b 55 d0             	mov    -0x30(%ebp),%edx
81004007:	83 ca 01             	or     $0x1,%edx
8100400a:	89 50 04             	mov    %edx,0x4(%eax)
8100400d:	e9 76 01 00 00       	jmp    81004188 <malloc_extend_top+0x25a>
81004012:	a1 0c 95 00 81       	mov    0x8100950c,%eax
81004017:	83 f8 ff             	cmp    $0xffffffff,%eax
8100401a:	75 0a                	jne    81004026 <malloc_extend_top+0xf8>
8100401c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100401f:	a3 0c 95 00 81       	mov    %eax,0x8100950c
81004024:	eb 13                	jmp    81004039 <malloc_extend_top+0x10b>
81004026:	8b 15 00 9c 00 81    	mov    0x81009c00,%edx
8100402c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100402f:	2b 45 d8             	sub    -0x28(%ebp),%eax
81004032:	01 d0                	add    %edx,%eax
81004034:	a3 00 9c 00 81       	mov    %eax,0x81009c00
81004039:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100403c:	83 c0 08             	add    $0x8,%eax
8100403f:	83 e0 07             	and    $0x7,%eax
81004042:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004045:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81004049:	74 13                	je     8100405e <malloc_extend_top+0x130>
8100404b:	b8 08 00 00 00       	mov    $0x8,%eax
81004050:	2b 45 cc             	sub    -0x34(%ebp),%eax
81004053:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004056:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004059:	01 45 f4             	add    %eax,-0xc(%ebp)
8100405c:	eb 07                	jmp    81004065 <malloc_extend_top+0x137>
8100405e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004065:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004068:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100406b:	01 d0                	add    %edx,%eax
8100406d:	89 c2                	mov    %eax,%edx
8100406f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004072:	83 e8 01             	sub    $0x1,%eax
81004075:	21 c2                	and    %eax,%edx
81004077:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100407a:	29 d0                	sub    %edx,%eax
8100407c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100407f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004082:	83 e8 01             	sub    $0x1,%eax
81004085:	21 45 f0             	and    %eax,-0x10(%ebp)
81004088:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100408b:	83 ec 08             	sub    $0x8,%esp
8100408e:	50                   	push   %eax
8100408f:	ff 75 08             	push   0x8(%ebp)
81004092:	e8 b2 25 00 00       	call   81006649 <_sbrk_r>
81004097:	83 c4 10             	add    $0x10,%esp
8100409a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100409d:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810040a1:	75 28                	jne    810040cb <malloc_extend_top+0x19d>
810040a3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810040aa:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810040b1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810040b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810040b7:	01 d0                	add    %edx,%eax
810040b9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810040bc:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810040c0:	74 09                	je     810040cb <malloc_extend_top+0x19d>
810040c2:	8b 45 cc             	mov    -0x34(%ebp),%eax
810040c5:	83 e8 08             	sub    $0x8,%eax
810040c8:	01 45 ec             	add    %eax,-0x14(%ebp)
810040cb:	a1 00 9c 00 81       	mov    0x81009c00,%eax
810040d0:	89 c2                	mov    %eax,%edx
810040d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040d5:	01 d0                	add    %edx,%eax
810040d7:	a3 00 9c 00 81       	mov    %eax,0x81009c00
810040dc:	ba 00 91 00 81       	mov    $0x81009100,%edx
810040e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040e4:	89 42 08             	mov    %eax,0x8(%edx)
810040e7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040ea:	2b 45 f4             	sub    -0xc(%ebp),%eax
810040ed:	89 c2                	mov    %eax,%edx
810040ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040f2:	01 d0                	add    %edx,%eax
810040f4:	89 45 d0             	mov    %eax,-0x30(%ebp)
810040f7:	b8 00 91 00 81       	mov    $0x81009100,%eax
810040fc:	8b 40 08             	mov    0x8(%eax),%eax
810040ff:	8b 55 d0             	mov    -0x30(%ebp),%edx
81004102:	83 ca 01             	or     $0x1,%edx
81004105:	89 50 04             	mov    %edx,0x4(%eax)
81004108:	b8 00 91 00 81       	mov    $0x81009100,%eax
8100410d:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81004110:	74 76                	je     81004188 <malloc_extend_top+0x25a>
81004112:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81004116:	77 14                	ja     8100412c <malloc_extend_top+0x1fe>
81004118:	b8 00 91 00 81       	mov    $0x81009100,%eax
8100411d:	8b 40 08             	mov    0x8(%eax),%eax
81004120:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81004127:	e9 93 00 00 00       	jmp    810041bf <malloc_extend_top+0x291>
8100412c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100412f:	83 e8 0c             	sub    $0xc,%eax
81004132:	83 e0 f8             	and    $0xfffffff8,%eax
81004135:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004138:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100413b:	8b 40 04             	mov    0x4(%eax),%eax
8100413e:	83 e0 01             	and    $0x1,%eax
81004141:	0b 45 dc             	or     -0x24(%ebp),%eax
81004144:	89 c2                	mov    %eax,%edx
81004146:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004149:	89 50 04             	mov    %edx,0x4(%eax)
8100414c:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100414f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004152:	01 d0                	add    %edx,%eax
81004154:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100415b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100415e:	8d 50 04             	lea    0x4(%eax),%edx
81004161:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004164:	01 d0                	add    %edx,%eax
81004166:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100416d:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81004171:	76 15                	jbe    81004188 <malloc_extend_top+0x25a>
81004173:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004176:	83 c0 08             	add    $0x8,%eax
81004179:	83 ec 08             	sub    $0x8,%esp
8100417c:	50                   	push   %eax
8100417d:	ff 75 08             	push   0x8(%ebp)
81004180:	e8 1d dd ff ff       	call   81001ea2 <_free_r>
81004185:	83 c4 10             	add    $0x10,%esp
81004188:	a1 00 9c 00 81       	mov    0x81009c00,%eax
8100418d:	89 c2                	mov    %eax,%edx
8100418f:	a1 e4 9b 00 81       	mov    0x81009be4,%eax
81004194:	39 c2                	cmp    %eax,%edx
81004196:	76 0a                	jbe    810041a2 <malloc_extend_top+0x274>
81004198:	a1 00 9c 00 81       	mov    0x81009c00,%eax
8100419d:	a3 e4 9b 00 81       	mov    %eax,0x81009be4
810041a2:	a1 00 9c 00 81       	mov    0x81009c00,%eax
810041a7:	89 c2                	mov    %eax,%edx
810041a9:	a1 e8 9b 00 81       	mov    0x81009be8,%eax
810041ae:	39 c2                	cmp    %eax,%edx
810041b0:	76 0d                	jbe    810041bf <malloc_extend_top+0x291>
810041b2:	a1 00 9c 00 81       	mov    0x81009c00,%eax
810041b7:	a3 e8 9b 00 81       	mov    %eax,0x81009be8
810041bc:	eb 01                	jmp    810041bf <malloc_extend_top+0x291>
810041be:	90                   	nop
810041bf:	c9                   	leave  
810041c0:	c3                   	ret    

810041c1 <_malloc_r>:
810041c1:	55                   	push   %ebp
810041c2:	89 e5                	mov    %esp,%ebp
810041c4:	53                   	push   %ebx
810041c5:	83 ec 44             	sub    $0x44,%esp
810041c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810041cb:	83 c0 0b             	add    $0xb,%eax
810041ce:	83 f8 16             	cmp    $0x16,%eax
810041d1:	76 0b                	jbe    810041de <_malloc_r+0x1d>
810041d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810041d6:	83 c0 0b             	add    $0xb,%eax
810041d9:	83 e0 f8             	and    $0xfffffff8,%eax
810041dc:	eb 05                	jmp    810041e3 <_malloc_r+0x22>
810041de:	b8 10 00 00 00       	mov    $0x10,%eax
810041e3:	89 45 d0             	mov    %eax,-0x30(%ebp)
810041e6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041e9:	85 c0                	test   %eax,%eax
810041eb:	78 08                	js     810041f5 <_malloc_r+0x34>
810041ed:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041f0:	3b 45 0c             	cmp    0xc(%ebp),%eax
810041f3:	73 13                	jae    81004208 <_malloc_r+0x47>
810041f5:	8b 45 08             	mov    0x8(%ebp),%eax
810041f8:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810041fe:	b8 00 00 00 00       	mov    $0x0,%eax
81004203:	e9 d6 07 00 00       	jmp    810049de <_malloc_r+0x81d>
81004208:	83 ec 0c             	sub    $0xc,%esp
8100420b:	ff 75 08             	push   0x8(%ebp)
8100420e:	e8 22 0a 00 00       	call   81004c35 <__malloc_lock>
81004213:	83 c4 10             	add    $0x10,%esp
81004216:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100421d:	0f 87 b0 00 00 00    	ja     810042d3 <_malloc_r+0x112>
81004223:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004226:	c1 e8 03             	shr    $0x3,%eax
81004229:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100422c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100422f:	83 c0 01             	add    $0x1,%eax
81004232:	01 c0                	add    %eax,%eax
81004234:	c1 e0 02             	shl    $0x2,%eax
81004237:	05 00 91 00 81       	add    $0x81009100,%eax
8100423c:	83 e8 08             	sub    $0x8,%eax
8100423f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004242:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004245:	8b 40 0c             	mov    0xc(%eax),%eax
81004248:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100424b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100424e:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81004251:	75 0d                	jne    81004260 <_malloc_r+0x9f>
81004253:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81004257:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100425a:	8b 40 0c             	mov    0xc(%eax),%eax
8100425d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004260:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004263:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81004266:	74 62                	je     810042ca <_malloc_r+0x109>
81004268:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100426b:	8b 40 04             	mov    0x4(%eax),%eax
8100426e:	83 e0 fc             	and    $0xfffffffc,%eax
81004271:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004274:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004277:	8b 40 0c             	mov    0xc(%eax),%eax
8100427a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100427d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004280:	8b 40 08             	mov    0x8(%eax),%eax
81004283:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004286:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004289:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100428c:	89 50 0c             	mov    %edx,0xc(%eax)
8100428f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004292:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004295:	89 50 08             	mov    %edx,0x8(%eax)
81004298:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100429b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100429e:	01 d0                	add    %edx,%eax
810042a0:	8b 50 04             	mov    0x4(%eax),%edx
810042a3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810042a6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810042a9:	01 c8                	add    %ecx,%eax
810042ab:	83 ca 01             	or     $0x1,%edx
810042ae:	89 50 04             	mov    %edx,0x4(%eax)
810042b1:	83 ec 0c             	sub    $0xc,%esp
810042b4:	ff 75 08             	push   0x8(%ebp)
810042b7:	e8 7f 09 00 00       	call   81004c3b <__malloc_unlock>
810042bc:	83 c4 10             	add    $0x10,%esp
810042bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042c2:	83 c0 08             	add    $0x8,%eax
810042c5:	e9 14 07 00 00       	jmp    810049de <_malloc_r+0x81d>
810042ca:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810042ce:	e9 46 01 00 00       	jmp    81004419 <_malloc_r+0x258>
810042d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042d6:	c1 e8 09             	shr    $0x9,%eax
810042d9:	85 c0                	test   %eax,%eax
810042db:	75 08                	jne    810042e5 <_malloc_r+0x124>
810042dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042e0:	c1 e8 03             	shr    $0x3,%eax
810042e3:	eb 77                	jmp    8100435c <_malloc_r+0x19b>
810042e5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042e8:	c1 e8 09             	shr    $0x9,%eax
810042eb:	83 f8 04             	cmp    $0x4,%eax
810042ee:	77 0b                	ja     810042fb <_malloc_r+0x13a>
810042f0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042f3:	c1 e8 06             	shr    $0x6,%eax
810042f6:	83 c0 38             	add    $0x38,%eax
810042f9:	eb 61                	jmp    8100435c <_malloc_r+0x19b>
810042fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042fe:	c1 e8 09             	shr    $0x9,%eax
81004301:	83 f8 14             	cmp    $0x14,%eax
81004304:	77 0b                	ja     81004311 <_malloc_r+0x150>
81004306:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004309:	c1 e8 09             	shr    $0x9,%eax
8100430c:	83 c0 5b             	add    $0x5b,%eax
8100430f:	eb 4b                	jmp    8100435c <_malloc_r+0x19b>
81004311:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004314:	c1 e8 09             	shr    $0x9,%eax
81004317:	83 f8 54             	cmp    $0x54,%eax
8100431a:	77 0b                	ja     81004327 <_malloc_r+0x166>
8100431c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100431f:	c1 e8 0c             	shr    $0xc,%eax
81004322:	83 c0 6e             	add    $0x6e,%eax
81004325:	eb 35                	jmp    8100435c <_malloc_r+0x19b>
81004327:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100432a:	c1 e8 09             	shr    $0x9,%eax
8100432d:	3d 54 01 00 00       	cmp    $0x154,%eax
81004332:	77 0b                	ja     8100433f <_malloc_r+0x17e>
81004334:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004337:	c1 e8 0f             	shr    $0xf,%eax
8100433a:	83 c0 77             	add    $0x77,%eax
8100433d:	eb 1d                	jmp    8100435c <_malloc_r+0x19b>
8100433f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004342:	c1 e8 09             	shr    $0x9,%eax
81004345:	3d 54 05 00 00       	cmp    $0x554,%eax
8100434a:	77 0b                	ja     81004357 <_malloc_r+0x196>
8100434c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100434f:	c1 e8 12             	shr    $0x12,%eax
81004352:	83 c0 7c             	add    $0x7c,%eax
81004355:	eb 05                	jmp    8100435c <_malloc_r+0x19b>
81004357:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100435c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100435f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004362:	83 c0 01             	add    $0x1,%eax
81004365:	01 c0                	add    %eax,%eax
81004367:	c1 e0 02             	shl    $0x2,%eax
8100436a:	05 00 91 00 81       	add    $0x81009100,%eax
8100436f:	83 e8 08             	sub    $0x8,%eax
81004372:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004375:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004378:	8b 40 0c             	mov    0xc(%eax),%eax
8100437b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100437e:	e9 86 00 00 00       	jmp    81004409 <_malloc_r+0x248>
81004383:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004386:	8b 40 04             	mov    0x4(%eax),%eax
81004389:	83 e0 fc             	and    $0xfffffffc,%eax
8100438c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100438f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004392:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004395:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004398:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100439c:	7e 06                	jle    810043a4 <_malloc_r+0x1e3>
8100439e:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810043a2:	eb 71                	jmp    81004415 <_malloc_r+0x254>
810043a4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810043a8:	78 56                	js     81004400 <_malloc_r+0x23f>
810043aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043ad:	8b 40 0c             	mov    0xc(%eax),%eax
810043b0:	89 45 d8             	mov    %eax,-0x28(%ebp)
810043b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043b6:	8b 40 08             	mov    0x8(%eax),%eax
810043b9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810043bc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810043bf:	8b 55 d8             	mov    -0x28(%ebp),%edx
810043c2:	89 50 0c             	mov    %edx,0xc(%eax)
810043c5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810043c8:	8b 55 dc             	mov    -0x24(%ebp),%edx
810043cb:	89 50 08             	mov    %edx,0x8(%eax)
810043ce:	8b 55 f4             	mov    -0xc(%ebp),%edx
810043d1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043d4:	01 d0                	add    %edx,%eax
810043d6:	8b 50 04             	mov    0x4(%eax),%edx
810043d9:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810043dc:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043df:	01 c8                	add    %ecx,%eax
810043e1:	83 ca 01             	or     $0x1,%edx
810043e4:	89 50 04             	mov    %edx,0x4(%eax)
810043e7:	83 ec 0c             	sub    $0xc,%esp
810043ea:	ff 75 08             	push   0x8(%ebp)
810043ed:	e8 49 08 00 00       	call   81004c3b <__malloc_unlock>
810043f2:	83 c4 10             	add    $0x10,%esp
810043f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043f8:	83 c0 08             	add    $0x8,%eax
810043fb:	e9 de 05 00 00       	jmp    810049de <_malloc_r+0x81d>
81004400:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004403:	8b 40 0c             	mov    0xc(%eax),%eax
81004406:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004409:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100440c:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100440f:	0f 85 6e ff ff ff    	jne    81004383 <_malloc_r+0x1c2>
81004415:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004419:	b8 08 91 00 81       	mov    $0x81009108,%eax
8100441e:	8b 40 08             	mov    0x8(%eax),%eax
81004421:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004424:	b8 08 91 00 81       	mov    $0x81009108,%eax
81004429:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100442c:	0f 84 9c 02 00 00    	je     810046ce <_malloc_r+0x50d>
81004432:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004435:	8b 40 04             	mov    0x4(%eax),%eax
81004438:	83 e0 fc             	and    $0xfffffffc,%eax
8100443b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100443e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004441:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004444:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004447:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100444b:	7e 7a                	jle    810044c7 <_malloc_r+0x306>
8100444d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004450:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004453:	01 d0                	add    %edx,%eax
81004455:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004458:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100445b:	83 c8 01             	or     $0x1,%eax
8100445e:	89 c2                	mov    %eax,%edx
81004460:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004463:	89 50 04             	mov    %edx,0x4(%eax)
81004466:	b8 08 91 00 81       	mov    $0x81009108,%eax
8100446b:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100446e:	89 50 0c             	mov    %edx,0xc(%eax)
81004471:	ba 08 91 00 81       	mov    $0x81009108,%edx
81004476:	8b 40 0c             	mov    0xc(%eax),%eax
81004479:	89 42 08             	mov    %eax,0x8(%edx)
8100447c:	ba 08 91 00 81       	mov    $0x81009108,%edx
81004481:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004484:	89 50 0c             	mov    %edx,0xc(%eax)
81004487:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100448a:	8b 50 0c             	mov    0xc(%eax),%edx
8100448d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004490:	89 50 08             	mov    %edx,0x8(%eax)
81004493:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004496:	83 c8 01             	or     $0x1,%eax
81004499:	89 c2                	mov    %eax,%edx
8100449b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100449e:	89 50 04             	mov    %edx,0x4(%eax)
810044a1:	8b 55 e8             	mov    -0x18(%ebp),%edx
810044a4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810044a7:	01 c2                	add    %eax,%edx
810044a9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810044ac:	89 02                	mov    %eax,(%edx)
810044ae:	83 ec 0c             	sub    $0xc,%esp
810044b1:	ff 75 08             	push   0x8(%ebp)
810044b4:	e8 82 07 00 00       	call   81004c3b <__malloc_unlock>
810044b9:	83 c4 10             	add    $0x10,%esp
810044bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810044bf:	83 c0 08             	add    $0x8,%eax
810044c2:	e9 17 05 00 00       	jmp    810049de <_malloc_r+0x81d>
810044c7:	b8 08 91 00 81       	mov    $0x81009108,%eax
810044cc:	ba 08 91 00 81       	mov    $0x81009108,%edx
810044d1:	89 50 0c             	mov    %edx,0xc(%eax)
810044d4:	ba 08 91 00 81       	mov    $0x81009108,%edx
810044d9:	8b 40 0c             	mov    0xc(%eax),%eax
810044dc:	89 42 08             	mov    %eax,0x8(%edx)
810044df:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810044e3:	78 32                	js     81004517 <_malloc_r+0x356>
810044e5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810044e8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044eb:	01 d0                	add    %edx,%eax
810044ed:	8b 50 04             	mov    0x4(%eax),%edx
810044f0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810044f3:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044f6:	01 c8                	add    %ecx,%eax
810044f8:	83 ca 01             	or     $0x1,%edx
810044fb:	89 50 04             	mov    %edx,0x4(%eax)
810044fe:	83 ec 0c             	sub    $0xc,%esp
81004501:	ff 75 08             	push   0x8(%ebp)
81004504:	e8 32 07 00 00       	call   81004c3b <__malloc_unlock>
81004509:	83 c4 10             	add    $0x10,%esp
8100450c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100450f:	83 c0 08             	add    $0x8,%eax
81004512:	e9 c7 04 00 00       	jmp    810049de <_malloc_r+0x81d>
81004517:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100451e:	77 7f                	ja     8100459f <_malloc_r+0x3de>
81004520:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004523:	c1 e8 03             	shr    $0x3,%eax
81004526:	89 45 c8             	mov    %eax,-0x38(%ebp)
81004529:	b8 00 91 00 81       	mov    $0x81009100,%eax
8100452e:	8b 58 04             	mov    0x4(%eax),%ebx
81004531:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004534:	8d 50 03             	lea    0x3(%eax),%edx
81004537:	85 c0                	test   %eax,%eax
81004539:	0f 48 c2             	cmovs  %edx,%eax
8100453c:	c1 f8 02             	sar    $0x2,%eax
8100453f:	ba 01 00 00 00       	mov    $0x1,%edx
81004544:	89 c1                	mov    %eax,%ecx
81004546:	d3 e2                	shl    %cl,%edx
81004548:	89 d0                	mov    %edx,%eax
8100454a:	ba 00 91 00 81       	mov    $0x81009100,%edx
8100454f:	09 d8                	or     %ebx,%eax
81004551:	89 42 04             	mov    %eax,0x4(%edx)
81004554:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004557:	83 c0 01             	add    $0x1,%eax
8100455a:	01 c0                	add    %eax,%eax
8100455c:	c1 e0 02             	shl    $0x2,%eax
8100455f:	05 00 91 00 81       	add    $0x81009100,%eax
81004564:	83 e8 08             	sub    $0x8,%eax
81004567:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100456a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100456d:	8b 40 08             	mov    0x8(%eax),%eax
81004570:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004573:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004576:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004579:	89 50 0c             	mov    %edx,0xc(%eax)
8100457c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100457f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004582:	89 50 08             	mov    %edx,0x8(%eax)
81004585:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004588:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100458b:	89 50 08             	mov    %edx,0x8(%eax)
8100458e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004591:	8b 50 08             	mov    0x8(%eax),%edx
81004594:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004597:	89 50 0c             	mov    %edx,0xc(%eax)
8100459a:	e9 2f 01 00 00       	jmp    810046ce <_malloc_r+0x50d>
8100459f:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045a2:	c1 e8 09             	shr    $0x9,%eax
810045a5:	85 c0                	test   %eax,%eax
810045a7:	75 08                	jne    810045b1 <_malloc_r+0x3f0>
810045a9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045ac:	c1 e8 03             	shr    $0x3,%eax
810045af:	eb 77                	jmp    81004628 <_malloc_r+0x467>
810045b1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045b4:	c1 e8 09             	shr    $0x9,%eax
810045b7:	83 f8 04             	cmp    $0x4,%eax
810045ba:	77 0b                	ja     810045c7 <_malloc_r+0x406>
810045bc:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045bf:	c1 e8 06             	shr    $0x6,%eax
810045c2:	83 c0 38             	add    $0x38,%eax
810045c5:	eb 61                	jmp    81004628 <_malloc_r+0x467>
810045c7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045ca:	c1 e8 09             	shr    $0x9,%eax
810045cd:	83 f8 14             	cmp    $0x14,%eax
810045d0:	77 0b                	ja     810045dd <_malloc_r+0x41c>
810045d2:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045d5:	c1 e8 09             	shr    $0x9,%eax
810045d8:	83 c0 5b             	add    $0x5b,%eax
810045db:	eb 4b                	jmp    81004628 <_malloc_r+0x467>
810045dd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045e0:	c1 e8 09             	shr    $0x9,%eax
810045e3:	83 f8 54             	cmp    $0x54,%eax
810045e6:	77 0b                	ja     810045f3 <_malloc_r+0x432>
810045e8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045eb:	c1 e8 0c             	shr    $0xc,%eax
810045ee:	83 c0 6e             	add    $0x6e,%eax
810045f1:	eb 35                	jmp    81004628 <_malloc_r+0x467>
810045f3:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045f6:	c1 e8 09             	shr    $0x9,%eax
810045f9:	3d 54 01 00 00       	cmp    $0x154,%eax
810045fe:	77 0b                	ja     8100460b <_malloc_r+0x44a>
81004600:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004603:	c1 e8 0f             	shr    $0xf,%eax
81004606:	83 c0 77             	add    $0x77,%eax
81004609:	eb 1d                	jmp    81004628 <_malloc_r+0x467>
8100460b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100460e:	c1 e8 09             	shr    $0x9,%eax
81004611:	3d 54 05 00 00       	cmp    $0x554,%eax
81004616:	77 0b                	ja     81004623 <_malloc_r+0x462>
81004618:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100461b:	c1 e8 12             	shr    $0x12,%eax
8100461e:	83 c0 7c             	add    $0x7c,%eax
81004621:	eb 05                	jmp    81004628 <_malloc_r+0x467>
81004623:	b8 7e 00 00 00       	mov    $0x7e,%eax
81004628:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100462b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100462e:	83 c0 01             	add    $0x1,%eax
81004631:	01 c0                	add    %eax,%eax
81004633:	c1 e0 02             	shl    $0x2,%eax
81004636:	05 00 91 00 81       	add    $0x81009100,%eax
8100463b:	83 e8 08             	sub    $0x8,%eax
8100463e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004641:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004644:	8b 40 08             	mov    0x8(%eax),%eax
81004647:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100464a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100464d:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81004650:	75 36                	jne    81004688 <_malloc_r+0x4c7>
81004652:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004657:	8b 58 04             	mov    0x4(%eax),%ebx
8100465a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100465d:	8d 50 03             	lea    0x3(%eax),%edx
81004660:	85 c0                	test   %eax,%eax
81004662:	0f 48 c2             	cmovs  %edx,%eax
81004665:	c1 f8 02             	sar    $0x2,%eax
81004668:	ba 01 00 00 00       	mov    $0x1,%edx
8100466d:	89 c1                	mov    %eax,%ecx
8100466f:	d3 e2                	shl    %cl,%edx
81004671:	89 d0                	mov    %edx,%eax
81004673:	ba 00 91 00 81       	mov    $0x81009100,%edx
81004678:	09 d8                	or     %ebx,%eax
8100467a:	89 42 04             	mov    %eax,0x4(%edx)
8100467d:	eb 28                	jmp    810046a7 <_malloc_r+0x4e6>
8100467f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004682:	8b 40 08             	mov    0x8(%eax),%eax
81004685:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004688:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100468b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100468e:	74 0e                	je     8100469e <_malloc_r+0x4dd>
81004690:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004693:	8b 40 04             	mov    0x4(%eax),%eax
81004696:	83 e0 fc             	and    $0xfffffffc,%eax
81004699:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100469c:	72 e1                	jb     8100467f <_malloc_r+0x4be>
8100469e:	8b 45 dc             	mov    -0x24(%ebp),%eax
810046a1:	8b 40 0c             	mov    0xc(%eax),%eax
810046a4:	89 45 d8             	mov    %eax,-0x28(%ebp)
810046a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046aa:	8b 55 d8             	mov    -0x28(%ebp),%edx
810046ad:	89 50 0c             	mov    %edx,0xc(%eax)
810046b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046b3:	8b 55 dc             	mov    -0x24(%ebp),%edx
810046b6:	89 50 08             	mov    %edx,0x8(%eax)
810046b9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810046bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810046bf:	89 50 08             	mov    %edx,0x8(%eax)
810046c2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810046c5:	8b 50 08             	mov    0x8(%eax),%edx
810046c8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810046cb:	89 50 0c             	mov    %edx,0xc(%eax)
810046ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
810046d1:	8d 50 03             	lea    0x3(%eax),%edx
810046d4:	85 c0                	test   %eax,%eax
810046d6:	0f 48 c2             	cmovs  %edx,%eax
810046d9:	c1 f8 02             	sar    $0x2,%eax
810046dc:	ba 01 00 00 00       	mov    $0x1,%edx
810046e1:	89 c1                	mov    %eax,%ecx
810046e3:	d3 e2                	shl    %cl,%edx
810046e5:	89 d0                	mov    %edx,%eax
810046e7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810046ea:	b8 00 91 00 81       	mov    $0x81009100,%eax
810046ef:	8b 40 04             	mov    0x4(%eax),%eax
810046f2:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810046f5:	0f 87 13 02 00 00    	ja     8100490e <_malloc_r+0x74d>
810046fb:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004700:	8b 40 04             	mov    0x4(%eax),%eax
81004703:	23 45 e4             	and    -0x1c(%ebp),%eax
81004706:	85 c0                	test   %eax,%eax
81004708:	75 27                	jne    81004731 <_malloc_r+0x570>
8100470a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100470d:	83 e0 fc             	and    $0xfffffffc,%eax
81004710:	83 c0 04             	add    $0x4,%eax
81004713:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004716:	d1 65 e4             	shll   -0x1c(%ebp)
81004719:	eb 07                	jmp    81004722 <_malloc_r+0x561>
8100471b:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100471f:	d1 65 e4             	shll   -0x1c(%ebp)
81004722:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004727:	8b 40 04             	mov    0x4(%eax),%eax
8100472a:	23 45 e4             	and    -0x1c(%ebp),%eax
8100472d:	85 c0                	test   %eax,%eax
8100472f:	74 ea                	je     8100471b <_malloc_r+0x55a>
81004731:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004734:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004737:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100473a:	83 c0 01             	add    $0x1,%eax
8100473d:	01 c0                	add    %eax,%eax
8100473f:	c1 e0 02             	shl    $0x2,%eax
81004742:	05 00 91 00 81       	add    $0x81009100,%eax
81004747:	83 e8 08             	sub    $0x8,%eax
8100474a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100474d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004750:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004753:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004756:	8b 40 0c             	mov    0xc(%eax),%eax
81004759:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100475c:	e9 22 01 00 00       	jmp    81004883 <_malloc_r+0x6c2>
81004761:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004764:	8b 40 04             	mov    0x4(%eax),%eax
81004767:	83 e0 fc             	and    $0xfffffffc,%eax
8100476a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100476d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004770:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004773:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004776:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100477a:	0f 8e 9e 00 00 00    	jle    8100481e <_malloc_r+0x65d>
81004780:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004783:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004786:	01 d0                	add    %edx,%eax
81004788:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100478b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100478e:	83 c8 01             	or     $0x1,%eax
81004791:	89 c2                	mov    %eax,%edx
81004793:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004796:	89 50 04             	mov    %edx,0x4(%eax)
81004799:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100479c:	8b 40 0c             	mov    0xc(%eax),%eax
8100479f:	89 45 d8             	mov    %eax,-0x28(%ebp)
810047a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047a5:	8b 40 08             	mov    0x8(%eax),%eax
810047a8:	89 45 dc             	mov    %eax,-0x24(%ebp)
810047ab:	8b 45 dc             	mov    -0x24(%ebp),%eax
810047ae:	8b 55 d8             	mov    -0x28(%ebp),%edx
810047b1:	89 50 0c             	mov    %edx,0xc(%eax)
810047b4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810047b7:	8b 55 dc             	mov    -0x24(%ebp),%edx
810047ba:	89 50 08             	mov    %edx,0x8(%eax)
810047bd:	b8 08 91 00 81       	mov    $0x81009108,%eax
810047c2:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810047c5:	89 50 0c             	mov    %edx,0xc(%eax)
810047c8:	ba 08 91 00 81       	mov    $0x81009108,%edx
810047cd:	8b 40 0c             	mov    0xc(%eax),%eax
810047d0:	89 42 08             	mov    %eax,0x8(%edx)
810047d3:	ba 08 91 00 81       	mov    $0x81009108,%edx
810047d8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047db:	89 50 0c             	mov    %edx,0xc(%eax)
810047de:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047e1:	8b 50 0c             	mov    0xc(%eax),%edx
810047e4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047e7:	89 50 08             	mov    %edx,0x8(%eax)
810047ea:	8b 45 e8             	mov    -0x18(%ebp),%eax
810047ed:	83 c8 01             	or     $0x1,%eax
810047f0:	89 c2                	mov    %eax,%edx
810047f2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047f5:	89 50 04             	mov    %edx,0x4(%eax)
810047f8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810047fb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047fe:	01 c2                	add    %eax,%edx
81004800:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004803:	89 02                	mov    %eax,(%edx)
81004805:	83 ec 0c             	sub    $0xc,%esp
81004808:	ff 75 08             	push   0x8(%ebp)
8100480b:	e8 2b 04 00 00       	call   81004c3b <__malloc_unlock>
81004810:	83 c4 10             	add    $0x10,%esp
81004813:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004816:	83 c0 08             	add    $0x8,%eax
81004819:	e9 c0 01 00 00       	jmp    810049de <_malloc_r+0x81d>
8100481e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004822:	78 56                	js     8100487a <_malloc_r+0x6b9>
81004824:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004827:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100482a:	01 d0                	add    %edx,%eax
8100482c:	8b 50 04             	mov    0x4(%eax),%edx
8100482f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004832:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004835:	01 c8                	add    %ecx,%eax
81004837:	83 ca 01             	or     $0x1,%edx
8100483a:	89 50 04             	mov    %edx,0x4(%eax)
8100483d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004840:	8b 40 0c             	mov    0xc(%eax),%eax
81004843:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004846:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004849:	8b 40 08             	mov    0x8(%eax),%eax
8100484c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100484f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004852:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004855:	89 50 0c             	mov    %edx,0xc(%eax)
81004858:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100485b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100485e:	89 50 08             	mov    %edx,0x8(%eax)
81004861:	83 ec 0c             	sub    $0xc,%esp
81004864:	ff 75 08             	push   0x8(%ebp)
81004867:	e8 cf 03 00 00       	call   81004c3b <__malloc_unlock>
8100486c:	83 c4 10             	add    $0x10,%esp
8100486f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004872:	83 c0 08             	add    $0x8,%eax
81004875:	e9 64 01 00 00       	jmp    810049de <_malloc_r+0x81d>
8100487a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100487d:	8b 40 0c             	mov    0xc(%eax),%eax
81004880:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004883:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004886:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81004889:	0f 85 d2 fe ff ff    	jne    81004761 <_malloc_r+0x5a0>
8100488f:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81004893:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004897:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100489a:	83 e0 03             	and    $0x3,%eax
8100489d:	85 c0                	test   %eax,%eax
8100489f:	0f 85 ae fe ff ff    	jne    81004753 <_malloc_r+0x592>
810048a5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810048a8:	83 e0 03             	and    $0x3,%eax
810048ab:	85 c0                	test   %eax,%eax
810048ad:	75 19                	jne    810048c8 <_malloc_r+0x707>
810048af:	b8 00 91 00 81       	mov    $0x81009100,%eax
810048b4:	8b 48 04             	mov    0x4(%eax),%ecx
810048b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810048ba:	f7 d0                	not    %eax
810048bc:	ba 00 91 00 81       	mov    $0x81009100,%edx
810048c1:	21 c8                	and    %ecx,%eax
810048c3:	89 42 04             	mov    %eax,0x4(%edx)
810048c6:	eb 13                	jmp    810048db <_malloc_r+0x71a>
810048c8:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810048cc:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810048d0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810048d3:	8b 40 08             	mov    0x8(%eax),%eax
810048d6:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810048d9:	74 ca                	je     810048a5 <_malloc_r+0x6e4>
810048db:	d1 65 e4             	shll   -0x1c(%ebp)
810048de:	b8 00 91 00 81       	mov    $0x81009100,%eax
810048e3:	8b 40 04             	mov    0x4(%eax),%eax
810048e6:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810048e9:	77 23                	ja     8100490e <_malloc_r+0x74d>
810048eb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810048ef:	74 1d                	je     8100490e <_malloc_r+0x74d>
810048f1:	eb 07                	jmp    810048fa <_malloc_r+0x739>
810048f3:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810048f7:	d1 65 e4             	shll   -0x1c(%ebp)
810048fa:	b8 00 91 00 81       	mov    $0x81009100,%eax
810048ff:	8b 40 04             	mov    0x4(%eax),%eax
81004902:	23 45 e4             	and    -0x1c(%ebp),%eax
81004905:	85 c0                	test   %eax,%eax
81004907:	74 ea                	je     810048f3 <_malloc_r+0x732>
81004909:	e9 23 fe ff ff       	jmp    81004731 <_malloc_r+0x570>
8100490e:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004913:	8b 40 08             	mov    0x8(%eax),%eax
81004916:	8b 40 04             	mov    0x4(%eax),%eax
81004919:	83 e0 fc             	and    $0xfffffffc,%eax
8100491c:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100491f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004922:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004927:	8b 40 08             	mov    0x8(%eax),%eax
8100492a:	8b 40 04             	mov    0x4(%eax),%eax
8100492d:	83 e0 fc             	and    $0xfffffffc,%eax
81004930:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004933:	77 06                	ja     8100493b <_malloc_r+0x77a>
81004935:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004939:	7f 53                	jg     8100498e <_malloc_r+0x7cd>
8100493b:	83 ec 08             	sub    $0x8,%esp
8100493e:	ff 75 d0             	push   -0x30(%ebp)
81004941:	ff 75 08             	push   0x8(%ebp)
81004944:	e8 e5 f5 ff ff       	call   81003f2e <malloc_extend_top>
81004949:	83 c4 10             	add    $0x10,%esp
8100494c:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004951:	8b 40 08             	mov    0x8(%eax),%eax
81004954:	8b 40 04             	mov    0x4(%eax),%eax
81004957:	83 e0 fc             	and    $0xfffffffc,%eax
8100495a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100495d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004960:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004965:	8b 40 08             	mov    0x8(%eax),%eax
81004968:	8b 40 04             	mov    0x4(%eax),%eax
8100496b:	83 e0 fc             	and    $0xfffffffc,%eax
8100496e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004971:	77 06                	ja     81004979 <_malloc_r+0x7b8>
81004973:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004977:	7f 15                	jg     8100498e <_malloc_r+0x7cd>
81004979:	83 ec 0c             	sub    $0xc,%esp
8100497c:	ff 75 08             	push   0x8(%ebp)
8100497f:	e8 b7 02 00 00       	call   81004c3b <__malloc_unlock>
81004984:	83 c4 10             	add    $0x10,%esp
81004987:	b8 00 00 00 00       	mov    $0x0,%eax
8100498c:	eb 50                	jmp    810049de <_malloc_r+0x81d>
8100498e:	b8 00 91 00 81       	mov    $0x81009100,%eax
81004993:	8b 40 08             	mov    0x8(%eax),%eax
81004996:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004999:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100499c:	83 c8 01             	or     $0x1,%eax
8100499f:	89 c2                	mov    %eax,%edx
810049a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810049a4:	89 50 04             	mov    %edx,0x4(%eax)
810049a7:	ba 00 91 00 81       	mov    $0x81009100,%edx
810049ac:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810049af:	8b 45 d0             	mov    -0x30(%ebp),%eax
810049b2:	01 c8                	add    %ecx,%eax
810049b4:	89 42 08             	mov    %eax,0x8(%edx)
810049b7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810049ba:	83 c8 01             	or     $0x1,%eax
810049bd:	89 c2                	mov    %eax,%edx
810049bf:	b8 00 91 00 81       	mov    $0x81009100,%eax
810049c4:	8b 40 08             	mov    0x8(%eax),%eax
810049c7:	89 50 04             	mov    %edx,0x4(%eax)
810049ca:	83 ec 0c             	sub    $0xc,%esp
810049cd:	ff 75 08             	push   0x8(%ebp)
810049d0:	e8 66 02 00 00       	call   81004c3b <__malloc_unlock>
810049d5:	83 c4 10             	add    $0x10,%esp
810049d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810049db:	83 c0 08             	add    $0x8,%eax
810049de:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810049e1:	c9                   	leave  
810049e2:	c3                   	ret    
810049e3:	66 90                	xchg   %ax,%ax
810049e5:	66 90                	xchg   %ax,%ax
810049e7:	66 90                	xchg   %ax,%ax
810049e9:	66 90                	xchg   %ax,%ax
810049eb:	66 90                	xchg   %ax,%ax
810049ed:	66 90                	xchg   %ax,%ax
810049ef:	90                   	nop

810049f0 <memchr>:
810049f0:	55                   	push   %ebp
810049f1:	89 e5                	mov    %esp,%ebp
810049f3:	57                   	push   %edi
810049f4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810049f8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810049fb:	8b 7d 08             	mov    0x8(%ebp),%edi
810049fe:	31 d2                	xor    %edx,%edx
81004a00:	85 c9                	test   %ecx,%ecx
81004a02:	74 79                	je     81004a7d <L20>
81004a04:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004a0a:	74 28                	je     81004a34 <L5>
81004a0c:	3a 07                	cmp    (%edi),%al
81004a0e:	74 6a                	je     81004a7a <L15>
81004a10:	47                   	inc    %edi
81004a11:	49                   	dec    %ecx
81004a12:	74 69                	je     81004a7d <L20>
81004a14:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004a1a:	74 18                	je     81004a34 <L5>
81004a1c:	3a 07                	cmp    (%edi),%al
81004a1e:	74 5a                	je     81004a7a <L15>
81004a20:	47                   	inc    %edi
81004a21:	49                   	dec    %ecx
81004a22:	74 59                	je     81004a7d <L20>
81004a24:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004a2a:	74 08                	je     81004a34 <L5>
81004a2c:	3a 07                	cmp    (%edi),%al
81004a2e:	74 4a                	je     81004a7a <L15>
81004a30:	47                   	inc    %edi
81004a31:	49                   	dec    %ecx
81004a32:	74 49                	je     81004a7d <L20>

81004a34 <L5>:
81004a34:	88 c4                	mov    %al,%ah
81004a36:	89 c2                	mov    %eax,%edx
81004a38:	c1 e2 10             	shl    $0x10,%edx
81004a3b:	09 d0                	or     %edx,%eax
81004a3d:	53                   	push   %ebx
81004a3e:	66 90                	xchg   %ax,%ax

81004a40 <L8>:
81004a40:	83 e9 04             	sub    $0x4,%ecx
81004a43:	72 1c                	jb     81004a61 <L9>
81004a45:	8b 17                	mov    (%edi),%edx
81004a47:	83 c7 04             	add    $0x4,%edi
81004a4a:	31 c2                	xor    %eax,%edx
81004a4c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004a52:	f7 d2                	not    %edx
81004a54:	21 d3                	and    %edx,%ebx
81004a56:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81004a5c:	74 e2                	je     81004a40 <L8>
81004a5e:	83 ef 04             	sub    $0x4,%edi

81004a61 <L9>:
81004a61:	5b                   	pop    %ebx
81004a62:	31 d2                	xor    %edx,%edx
81004a64:	83 c1 04             	add    $0x4,%ecx
81004a67:	74 14                	je     81004a7d <L20>
81004a69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004a70 <L10>:
81004a70:	3a 07                	cmp    (%edi),%al
81004a72:	74 06                	je     81004a7a <L15>
81004a74:	47                   	inc    %edi
81004a75:	49                   	dec    %ecx
81004a76:	75 f8                	jne    81004a70 <L10>
81004a78:	31 ff                	xor    %edi,%edi

81004a7a <L15>:
81004a7a:	4a                   	dec    %edx
81004a7b:	21 fa                	and    %edi,%edx

81004a7d <L20>:
81004a7d:	89 d0                	mov    %edx,%eax
81004a7f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004a82:	5f                   	pop    %edi
81004a83:	c9                   	leave  
81004a84:	c3                   	ret    

81004a85 <memcmp>:
81004a85:	55                   	push   %ebp
81004a86:	89 e5                	mov    %esp,%ebp
81004a88:	83 ec 10             	sub    $0x10,%esp
81004a8b:	53                   	push   %ebx
81004a8c:	57                   	push   %edi
81004a8d:	56                   	push   %esi
81004a8e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004a91:	8b 75 0c             	mov    0xc(%ebp),%esi
81004a94:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004a97:	fc                   	cld    
81004a98:	31 c0                	xor    %eax,%eax
81004a9a:	85 c9                	test   %ecx,%ecx
81004a9c:	74 31                	je     81004acf <L4>
81004a9e:	89 f8                	mov    %edi,%eax
81004aa0:	09 f0                	or     %esi,%eax
81004aa2:	a8 03                	test   $0x3,%al
81004aa4:	75 1b                	jne    81004ac1 <BYTECMP>
81004aa6:	89 cb                	mov    %ecx,%ebx
81004aa8:	c1 e9 02             	shr    $0x2,%ecx
81004aab:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
81004aad:	74 0d                	je     81004abc <L5>
81004aaf:	83 ee 04             	sub    $0x4,%esi
81004ab2:	83 ef 04             	sub    $0x4,%edi
81004ab5:	b9 04 00 00 00       	mov    $0x4,%ecx
81004aba:	eb 05                	jmp    81004ac1 <BYTECMP>

81004abc <L5>:
81004abc:	83 e3 03             	and    $0x3,%ebx
81004abf:	89 d9                	mov    %ebx,%ecx

81004ac1 <BYTECMP>:
81004ac1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81004ac3 <L3>:
81004ac3:	31 d2                	xor    %edx,%edx
81004ac5:	8a 56 ff             	mov    -0x1(%esi),%dl
81004ac8:	31 c0                	xor    %eax,%eax
81004aca:	8a 47 ff             	mov    -0x1(%edi),%al
81004acd:	29 d0                	sub    %edx,%eax

81004acf <L4>:
81004acf:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004ad2:	5e                   	pop    %esi
81004ad3:	5f                   	pop    %edi
81004ad4:	5b                   	pop    %ebx
81004ad5:	c9                   	leave  
81004ad6:	c3                   	ret    
81004ad7:	90                   	nop

81004ad8 <memcpy>:
81004ad8:	55                   	push   %ebp
81004ad9:	89 e5                	mov    %esp,%ebp
81004adb:	56                   	push   %esi
81004adc:	57                   	push   %edi
81004add:	53                   	push   %ebx
81004ade:	8b 7d 08             	mov    0x8(%ebp),%edi
81004ae1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004ae4:	8b 75 0c             	mov    0xc(%ebp),%esi
81004ae7:	fc                   	cld    
81004ae8:	83 f9 08             	cmp    $0x8,%ecx
81004aeb:	76 26                	jbe    81004b13 <memcpy+0x3b>
81004aed:	89 fa                	mov    %edi,%edx
81004aef:	89 cb                	mov    %ecx,%ebx
81004af1:	83 e2 03             	and    $0x3,%edx
81004af4:	74 10                	je     81004b06 <memcpy+0x2e>
81004af6:	b9 04 00 00 00       	mov    $0x4,%ecx
81004afb:	29 d1                	sub    %edx,%ecx
81004afd:	83 e1 03             	and    $0x3,%ecx
81004b00:	29 cb                	sub    %ecx,%ebx
81004b02:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b04:	89 d9                	mov    %ebx,%ecx
81004b06:	c1 e9 02             	shr    $0x2,%ecx
81004b09:	8d 76 00             	lea    0x0(%esi),%esi
81004b0c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b0e:	89 d9                	mov    %ebx,%ecx
81004b10:	83 e1 03             	and    $0x3,%ecx
81004b13:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b15:	8b 45 08             	mov    0x8(%ebp),%eax
81004b18:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b1b:	5b                   	pop    %ebx
81004b1c:	5f                   	pop    %edi
81004b1d:	5e                   	pop    %esi
81004b1e:	c9                   	leave  
81004b1f:	c3                   	ret    

81004b20 <memmove>:
81004b20:	55                   	push   %ebp
81004b21:	89 e5                	mov    %esp,%ebp
81004b23:	56                   	push   %esi
81004b24:	57                   	push   %edi
81004b25:	53                   	push   %ebx
81004b26:	8b 7d 08             	mov    0x8(%ebp),%edi
81004b29:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004b2c:	8b 75 0c             	mov    0xc(%ebp),%esi
81004b2f:	fc                   	cld    
81004b30:	39 fe                	cmp    %edi,%esi
81004b32:	73 43                	jae    81004b77 <memmove+0x57>
81004b34:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81004b38:	39 df                	cmp    %ebx,%edi
81004b3a:	77 3b                	ja     81004b77 <memmove+0x57>
81004b3c:	01 ce                	add    %ecx,%esi
81004b3e:	01 cf                	add    %ecx,%edi
81004b40:	fd                   	std    
81004b41:	83 f9 08             	cmp    $0x8,%ecx
81004b44:	76 2b                	jbe    81004b71 <memmove+0x51>
81004b46:	89 fa                	mov    %edi,%edx
81004b48:	89 cb                	mov    %ecx,%ebx
81004b4a:	83 e2 03             	and    $0x3,%edx
81004b4d:	74 0c                	je     81004b5b <memmove+0x3b>
81004b4f:	89 d1                	mov    %edx,%ecx
81004b51:	4e                   	dec    %esi
81004b52:	4f                   	dec    %edi
81004b53:	29 cb                	sub    %ecx,%ebx
81004b55:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b57:	89 d9                	mov    %ebx,%ecx
81004b59:	46                   	inc    %esi
81004b5a:	47                   	inc    %edi
81004b5b:	c1 e9 02             	shr    $0x2,%ecx
81004b5e:	83 ee 04             	sub    $0x4,%esi
81004b61:	83 ef 04             	sub    $0x4,%edi
81004b64:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b66:	83 c6 04             	add    $0x4,%esi
81004b69:	83 c7 04             	add    $0x4,%edi
81004b6c:	89 d9                	mov    %ebx,%ecx
81004b6e:	83 e1 03             	and    $0x3,%ecx
81004b71:	4e                   	dec    %esi
81004b72:	4f                   	dec    %edi
81004b73:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b75:	eb 2a                	jmp    81004ba1 <memmove+0x81>
81004b77:	83 f9 08             	cmp    $0x8,%ecx
81004b7a:	76 23                	jbe    81004b9f <memmove+0x7f>
81004b7c:	89 fa                	mov    %edi,%edx
81004b7e:	89 cb                	mov    %ecx,%ebx
81004b80:	83 e2 03             	and    $0x3,%edx
81004b83:	74 10                	je     81004b95 <memmove+0x75>
81004b85:	b9 04 00 00 00       	mov    $0x4,%ecx
81004b8a:	29 d1                	sub    %edx,%ecx
81004b8c:	83 e1 03             	and    $0x3,%ecx
81004b8f:	29 cb                	sub    %ecx,%ebx
81004b91:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b93:	89 d9                	mov    %ebx,%ecx
81004b95:	c1 e9 02             	shr    $0x2,%ecx
81004b98:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b9a:	89 d9                	mov    %ebx,%ecx
81004b9c:	83 e1 03             	and    $0x3,%ecx
81004b9f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004ba1:	8b 45 08             	mov    0x8(%ebp),%eax
81004ba4:	fc                   	cld    
81004ba5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004ba8:	5b                   	pop    %ebx
81004ba9:	5f                   	pop    %edi
81004baa:	5e                   	pop    %esi
81004bab:	c9                   	leave  
81004bac:	c3                   	ret    

81004bad <memset>:
81004bad:	55                   	push   %ebp
81004bae:	89 e5                	mov    %esp,%ebp
81004bb0:	57                   	push   %edi
81004bb1:	8b 7d 08             	mov    0x8(%ebp),%edi
81004bb4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004bb8:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004bbb:	fc                   	cld    
81004bbc:	83 f9 10             	cmp    $0x10,%ecx
81004bbf:	76 69                	jbe    81004c2a <memset+0x7d>
81004bc1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bc7:	74 4c                	je     81004c15 <memset+0x68>
81004bc9:	88 07                	mov    %al,(%edi)
81004bcb:	47                   	inc    %edi
81004bcc:	49                   	dec    %ecx
81004bcd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bd3:	74 40                	je     81004c15 <memset+0x68>
81004bd5:	88 07                	mov    %al,(%edi)
81004bd7:	47                   	inc    %edi
81004bd8:	49                   	dec    %ecx
81004bd9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bdf:	74 34                	je     81004c15 <memset+0x68>
81004be1:	88 07                	mov    %al,(%edi)
81004be3:	47                   	inc    %edi
81004be4:	49                   	dec    %ecx
81004be5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004beb:	74 28                	je     81004c15 <memset+0x68>
81004bed:	88 07                	mov    %al,(%edi)
81004bef:	47                   	inc    %edi
81004bf0:	49                   	dec    %ecx
81004bf1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bf7:	74 1c                	je     81004c15 <memset+0x68>
81004bf9:	88 07                	mov    %al,(%edi)
81004bfb:	47                   	inc    %edi
81004bfc:	49                   	dec    %ecx
81004bfd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004c03:	74 10                	je     81004c15 <memset+0x68>
81004c05:	88 07                	mov    %al,(%edi)
81004c07:	47                   	inc    %edi
81004c08:	49                   	dec    %ecx
81004c09:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004c0f:	74 04                	je     81004c15 <memset+0x68>
81004c11:	88 07                	mov    %al,(%edi)
81004c13:	47                   	inc    %edi
81004c14:	49                   	dec    %ecx
81004c15:	88 c4                	mov    %al,%ah
81004c17:	89 c2                	mov    %eax,%edx
81004c19:	c1 e2 10             	shl    $0x10,%edx
81004c1c:	09 d0                	or     %edx,%eax
81004c1e:	89 ca                	mov    %ecx,%edx
81004c20:	c1 e9 02             	shr    $0x2,%ecx
81004c23:	83 e2 03             	and    $0x3,%edx
81004c26:	f3 ab                	rep stos %eax,%es:(%edi)
81004c28:	89 d1                	mov    %edx,%ecx
81004c2a:	f3 aa                	rep stos %al,%es:(%edi)
81004c2c:	8b 45 08             	mov    0x8(%ebp),%eax
81004c2f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004c32:	5f                   	pop    %edi
81004c33:	c9                   	leave  
81004c34:	c3                   	ret    

81004c35 <__malloc_lock>:
81004c35:	55                   	push   %ebp
81004c36:	89 e5                	mov    %esp,%ebp
81004c38:	90                   	nop
81004c39:	5d                   	pop    %ebp
81004c3a:	c3                   	ret    

81004c3b <__malloc_unlock>:
81004c3b:	55                   	push   %ebp
81004c3c:	89 e5                	mov    %esp,%ebp
81004c3e:	90                   	nop
81004c3f:	5d                   	pop    %ebp
81004c40:	c3                   	ret    

81004c41 <__sprint_r>:
81004c41:	55                   	push   %ebp
81004c42:	89 e5                	mov    %esp,%ebp
81004c44:	56                   	push   %esi
81004c45:	53                   	push   %ebx
81004c46:	83 ec 10             	sub    $0x10,%esp
81004c49:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004c4c:	be 00 00 00 00       	mov    $0x0,%esi
81004c51:	8b 43 08             	mov    0x8(%ebx),%eax
81004c54:	85 c0                	test   %eax,%eax
81004c56:	75 11                	jne    81004c69 <__sprint_r+0x28>
81004c58:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004c5f:	b8 00 00 00 00       	mov    $0x0,%eax
81004c64:	e9 ad 00 00 00       	jmp    81004d16 <__sprint_r+0xd5>
81004c69:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c6c:	8b 40 64             	mov    0x64(%eax),%eax
81004c6f:	25 00 20 00 00       	and    $0x2000,%eax
81004c74:	85 c0                	test   %eax,%eax
81004c76:	74 7a                	je     81004cf2 <__sprint_r+0xb1>
81004c78:	8b 03                	mov    (%ebx),%eax
81004c7a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c7d:	eb 6a                	jmp    81004ce9 <__sprint_r+0xa8>
81004c7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c82:	8b 00                	mov    (%eax),%eax
81004c84:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c8a:	8b 40 04             	mov    0x4(%eax),%eax
81004c8d:	c1 e8 02             	shr    $0x2,%eax
81004c90:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004c93:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004c9a:	eb 33                	jmp    81004ccf <__sprint_r+0x8e>
81004c9c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c9f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004ca6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004ca9:	01 d0                	add    %edx,%eax
81004cab:	8b 00                	mov    (%eax),%eax
81004cad:	83 ec 04             	sub    $0x4,%esp
81004cb0:	ff 75 0c             	push   0xc(%ebp)
81004cb3:	50                   	push   %eax
81004cb4:	ff 75 08             	push   0x8(%ebp)
81004cb7:	e8 22 2a 00 00       	call   810076de <_fputwc_r>
81004cbc:	83 c4 10             	add    $0x10,%esp
81004cbf:	83 f8 ff             	cmp    $0xffffffff,%eax
81004cc2:	75 07                	jne    81004ccb <__sprint_r+0x8a>
81004cc4:	be ff ff ff ff       	mov    $0xffffffff,%esi
81004cc9:	eb 3b                	jmp    81004d06 <__sprint_r+0xc5>
81004ccb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004ccf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004cd2:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004cd5:	7c c5                	jl     81004c9c <__sprint_r+0x5b>
81004cd7:	8b 43 08             	mov    0x8(%ebx),%eax
81004cda:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004cdd:	c1 e2 02             	shl    $0x2,%edx
81004ce0:	29 d0                	sub    %edx,%eax
81004ce2:	89 43 08             	mov    %eax,0x8(%ebx)
81004ce5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81004ce9:	8b 43 08             	mov    0x8(%ebx),%eax
81004cec:	85 c0                	test   %eax,%eax
81004cee:	75 8f                	jne    81004c7f <__sprint_r+0x3e>
81004cf0:	eb 14                	jmp    81004d06 <__sprint_r+0xc5>
81004cf2:	83 ec 04             	sub    $0x4,%esp
81004cf5:	53                   	push   %ebx
81004cf6:	ff 75 0c             	push   0xc(%ebp)
81004cf9:	ff 75 08             	push   0x8(%ebp)
81004cfc:	e8 2e dc ff ff       	call   8100292f <__sfvwrite_r>
81004d01:	83 c4 10             	add    $0x10,%esp
81004d04:	89 c6                	mov    %eax,%esi
81004d06:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004d0d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004d14:	89 f0                	mov    %esi,%eax
81004d16:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004d19:	5b                   	pop    %ebx
81004d1a:	5e                   	pop    %esi
81004d1b:	5d                   	pop    %ebp
81004d1c:	c3                   	ret    

81004d1d <__sfputc_r>:
81004d1d:	55                   	push   %ebp
81004d1e:	89 e5                	mov    %esp,%ebp
81004d20:	83 ec 08             	sub    $0x8,%esp
81004d23:	8b 45 10             	mov    0x10(%ebp),%eax
81004d26:	8b 40 08             	mov    0x8(%eax),%eax
81004d29:	8d 50 ff             	lea    -0x1(%eax),%edx
81004d2c:	8b 45 10             	mov    0x10(%ebp),%eax
81004d2f:	89 50 08             	mov    %edx,0x8(%eax)
81004d32:	8b 45 10             	mov    0x10(%ebp),%eax
81004d35:	8b 40 08             	mov    0x8(%eax),%eax
81004d38:	85 c0                	test   %eax,%eax
81004d3a:	79 17                	jns    81004d53 <__sfputc_r+0x36>
81004d3c:	8b 45 10             	mov    0x10(%ebp),%eax
81004d3f:	8b 50 08             	mov    0x8(%eax),%edx
81004d42:	8b 45 10             	mov    0x10(%ebp),%eax
81004d45:	8b 40 18             	mov    0x18(%eax),%eax
81004d48:	39 c2                	cmp    %eax,%edx
81004d4a:	7c 21                	jl     81004d6d <__sfputc_r+0x50>
81004d4c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d4f:	3c 0a                	cmp    $0xa,%al
81004d51:	74 1a                	je     81004d6d <__sfputc_r+0x50>
81004d53:	8b 45 10             	mov    0x10(%ebp),%eax
81004d56:	8b 00                	mov    (%eax),%eax
81004d58:	8d 48 01             	lea    0x1(%eax),%ecx
81004d5b:	8b 55 10             	mov    0x10(%ebp),%edx
81004d5e:	89 0a                	mov    %ecx,(%edx)
81004d60:	8b 55 0c             	mov    0xc(%ebp),%edx
81004d63:	88 10                	mov    %dl,(%eax)
81004d65:	0f b6 00             	movzbl (%eax),%eax
81004d68:	0f b6 c0             	movzbl %al,%eax
81004d6b:	eb 14                	jmp    81004d81 <__sfputc_r+0x64>
81004d6d:	83 ec 04             	sub    $0x4,%esp
81004d70:	ff 75 10             	push   0x10(%ebp)
81004d73:	ff 75 0c             	push   0xc(%ebp)
81004d76:	ff 75 08             	push   0x8(%ebp)
81004d79:	e8 c9 22 00 00       	call   81007047 <__swbuf_r>
81004d7e:	83 c4 10             	add    $0x10,%esp
81004d81:	c9                   	leave  
81004d82:	c3                   	ret    

81004d83 <__sfputs_r>:
81004d83:	55                   	push   %ebp
81004d84:	89 e5                	mov    %esp,%ebp
81004d86:	53                   	push   %ebx
81004d87:	83 ec 14             	sub    $0x14,%esp
81004d8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d8d:	8b 40 64             	mov    0x64(%eax),%eax
81004d90:	25 00 20 00 00       	and    $0x2000,%eax
81004d95:	85 c0                	test   %eax,%eax
81004d97:	74 4c                	je     81004de5 <__sfputs_r+0x62>
81004d99:	8b 45 10             	mov    0x10(%ebp),%eax
81004d9c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d9f:	bb 00 00 00 00       	mov    $0x0,%ebx
81004da4:	eb 31                	jmp    81004dd7 <__sfputs_r+0x54>
81004da6:	89 d8                	mov    %ebx,%eax
81004da8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004daf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004db2:	01 d0                	add    %edx,%eax
81004db4:	8b 00                	mov    (%eax),%eax
81004db6:	83 ec 04             	sub    $0x4,%esp
81004db9:	ff 75 0c             	push   0xc(%ebp)
81004dbc:	50                   	push   %eax
81004dbd:	ff 75 08             	push   0x8(%ebp)
81004dc0:	e8 19 29 00 00       	call   810076de <_fputwc_r>
81004dc5:	83 c4 10             	add    $0x10,%esp
81004dc8:	83 f8 ff             	cmp    $0xffffffff,%eax
81004dcb:	75 07                	jne    81004dd4 <__sfputs_r+0x51>
81004dcd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004dd2:	eb 52                	jmp    81004e26 <__sfputs_r+0xa3>
81004dd4:	83 c3 01             	add    $0x1,%ebx
81004dd7:	8b 45 14             	mov    0x14(%ebp),%eax
81004dda:	c1 e8 02             	shr    $0x2,%eax
81004ddd:	89 da                	mov    %ebx,%edx
81004ddf:	39 d0                	cmp    %edx,%eax
81004de1:	77 c3                	ja     81004da6 <__sfputs_r+0x23>
81004de3:	eb 3c                	jmp    81004e21 <__sfputs_r+0x9e>
81004de5:	bb 00 00 00 00       	mov    $0x0,%ebx
81004dea:	eb 2e                	jmp    81004e1a <__sfputs_r+0x97>
81004dec:	89 da                	mov    %ebx,%edx
81004dee:	8b 45 10             	mov    0x10(%ebp),%eax
81004df1:	01 d0                	add    %edx,%eax
81004df3:	0f b6 00             	movzbl (%eax),%eax
81004df6:	0f be c0             	movsbl %al,%eax
81004df9:	83 ec 04             	sub    $0x4,%esp
81004dfc:	ff 75 0c             	push   0xc(%ebp)
81004dff:	50                   	push   %eax
81004e00:	ff 75 08             	push   0x8(%ebp)
81004e03:	e8 15 ff ff ff       	call   81004d1d <__sfputc_r>
81004e08:	83 c4 10             	add    $0x10,%esp
81004e0b:	83 f8 ff             	cmp    $0xffffffff,%eax
81004e0e:	75 07                	jne    81004e17 <__sfputs_r+0x94>
81004e10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004e15:	eb 0f                	jmp    81004e26 <__sfputs_r+0xa3>
81004e17:	83 c3 01             	add    $0x1,%ebx
81004e1a:	89 d8                	mov    %ebx,%eax
81004e1c:	39 45 14             	cmp    %eax,0x14(%ebp)
81004e1f:	77 cb                	ja     81004dec <__sfputs_r+0x69>
81004e21:	b8 00 00 00 00       	mov    $0x0,%eax
81004e26:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004e29:	c9                   	leave  
81004e2a:	c3                   	ret    

81004e2b <vfiprintf>:
81004e2b:	55                   	push   %ebp
81004e2c:	89 e5                	mov    %esp,%ebp
81004e2e:	83 ec 18             	sub    $0x18,%esp
81004e31:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81004e36:	ff 75 10             	push   0x10(%ebp)
81004e39:	ff 75 0c             	push   0xc(%ebp)
81004e3c:	ff 75 08             	push   0x8(%ebp)
81004e3f:	50                   	push   %eax
81004e40:	e8 0b 00 00 00       	call   81004e50 <_vfiprintf_r>
81004e45:	83 c4 10             	add    $0x10,%esp
81004e48:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e4e:	c9                   	leave  
81004e4f:	c3                   	ret    

81004e50 <_vfiprintf_r>:
81004e50:	55                   	push   %ebp
81004e51:	89 e5                	mov    %esp,%ebp
81004e53:	57                   	push   %edi
81004e54:	56                   	push   %esi
81004e55:	53                   	push   %ebx
81004e56:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81004e5c:	c7 45 e4 83 4d 00 81 	movl   $0x81004d83,-0x1c(%ebp)
81004e63:	8b 45 08             	mov    0x8(%ebp),%eax
81004e66:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004e69:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004e6d:	74 18                	je     81004e87 <_vfiprintf_r+0x37>
81004e6f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004e72:	8b 40 38             	mov    0x38(%eax),%eax
81004e75:	85 c0                	test   %eax,%eax
81004e77:	75 0e                	jne    81004e87 <_vfiprintf_r+0x37>
81004e79:	83 ec 0c             	sub    $0xc,%esp
81004e7c:	ff 75 e0             	push   -0x20(%ebp)
81004e7f:	e8 69 ca ff ff       	call   810018ed <__sinit>
81004e84:	83 c4 10             	add    $0x10,%esp
81004e87:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e8a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e8e:	98                   	cwtl   
81004e8f:	83 e0 08             	and    $0x8,%eax
81004e92:	85 c0                	test   %eax,%eax
81004e94:	74 0a                	je     81004ea0 <_vfiprintf_r+0x50>
81004e96:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e99:	8b 40 10             	mov    0x10(%eax),%eax
81004e9c:	85 c0                	test   %eax,%eax
81004e9e:	75 1f                	jne    81004ebf <_vfiprintf_r+0x6f>
81004ea0:	83 ec 08             	sub    $0x8,%esp
81004ea3:	ff 75 0c             	push   0xc(%ebp)
81004ea6:	ff 75 08             	push   0x8(%ebp)
81004ea9:	e8 12 23 00 00       	call   810071c0 <__swsetup_r>
81004eae:	83 c4 10             	add    $0x10,%esp
81004eb1:	85 c0                	test   %eax,%eax
81004eb3:	74 0a                	je     81004ebf <_vfiprintf_r+0x6f>
81004eb5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004eba:	e9 df 02 00 00       	jmp    8100519e <_vfiprintf_r+0x34e>
81004ebf:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004ec2:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81004ec9:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004ecd:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004ed1:	8b 45 14             	mov    0x14(%ebp),%eax
81004ed4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004eda:	89 de                	mov    %ebx,%esi
81004edc:	eb 03                	jmp    81004ee1 <_vfiprintf_r+0x91>
81004ede:	83 c3 01             	add    $0x1,%ebx
81004ee1:	0f b6 03             	movzbl (%ebx),%eax
81004ee4:	84 c0                	test   %al,%al
81004ee6:	74 07                	je     81004eef <_vfiprintf_r+0x9f>
81004ee8:	0f b6 03             	movzbl (%ebx),%eax
81004eeb:	3c 25                	cmp    $0x25,%al
81004eed:	75 ef                	jne    81004ede <_vfiprintf_r+0x8e>
81004eef:	89 d8                	mov    %ebx,%eax
81004ef1:	29 f0                	sub    %esi,%eax
81004ef3:	85 c0                	test   %eax,%eax
81004ef5:	74 2b                	je     81004f22 <_vfiprintf_r+0xd2>
81004ef7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004efd:	50                   	push   %eax
81004efe:	56                   	push   %esi
81004eff:	ff 75 0c             	push   0xc(%ebp)
81004f02:	ff 75 08             	push   0x8(%ebp)
81004f05:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004f08:	ff d0                	call   *%eax
81004f0a:	83 c4 10             	add    $0x10,%esp
81004f0d:	83 f8 ff             	cmp    $0xffffffff,%eax
81004f10:	0f 84 68 02 00 00    	je     8100517e <_vfiprintf_r+0x32e>
81004f16:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004f19:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004f1f:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004f22:	0f b6 03             	movzbl (%ebx),%eax
81004f25:	84 c0                	test   %al,%al
81004f27:	0f 84 54 02 00 00    	je     81005181 <_vfiprintf_r+0x331>
81004f2d:	83 c3 01             	add    $0x1,%ebx
81004f30:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81004f37:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004f3e:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004f45:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81004f4c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004f50:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81004f57:	c7 45 dc 28 89 00 81 	movl   $0x81008928,-0x24(%ebp)
81004f5e:	eb 1b                	jmp    81004f7b <_vfiprintf_r+0x12b>
81004f60:	8b 55 80             	mov    -0x80(%ebp),%edx
81004f63:	89 f0                	mov    %esi,%eax
81004f65:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004f68:	be 01 00 00 00       	mov    $0x1,%esi
81004f6d:	89 c1                	mov    %eax,%ecx
81004f6f:	d3 e6                	shl    %cl,%esi
81004f71:	89 f0                	mov    %esi,%eax
81004f73:	09 d0                	or     %edx,%eax
81004f75:	89 45 80             	mov    %eax,-0x80(%ebp)
81004f78:	83 c3 01             	add    $0x1,%ebx
81004f7b:	0f b6 03             	movzbl (%ebx),%eax
81004f7e:	0f be c0             	movsbl %al,%eax
81004f81:	83 ec 04             	sub    $0x4,%esp
81004f84:	6a 05                	push   $0x5
81004f86:	50                   	push   %eax
81004f87:	ff 75 dc             	push   -0x24(%ebp)
81004f8a:	e8 61 fa ff ff       	call   810049f0 <memchr>
81004f8f:	83 c4 10             	add    $0x10,%esp
81004f92:	89 c6                	mov    %eax,%esi
81004f94:	85 f6                	test   %esi,%esi
81004f96:	75 c8                	jne    81004f60 <_vfiprintf_r+0x110>
81004f98:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f9b:	83 e0 10             	and    $0x10,%eax
81004f9e:	85 c0                	test   %eax,%eax
81004fa0:	74 04                	je     81004fa6 <_vfiprintf_r+0x156>
81004fa2:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004fa6:	8b 45 80             	mov    -0x80(%ebp),%eax
81004fa9:	83 e0 08             	and    $0x8,%eax
81004fac:	85 c0                	test   %eax,%eax
81004fae:	74 04                	je     81004fb4 <_vfiprintf_r+0x164>
81004fb0:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004fb4:	0f b6 03             	movzbl (%ebx),%eax
81004fb7:	3c 2a                	cmp    $0x2a,%al
81004fb9:	75 50                	jne    8100500b <_vfiprintf_r+0x1bb>
81004fbb:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004fc1:	8d 50 04             	lea    0x4(%eax),%edx
81004fc4:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004fca:	8b 00                	mov    (%eax),%eax
81004fcc:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004fcf:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004fd2:	85 c0                	test   %eax,%eax
81004fd4:	79 11                	jns    81004fe7 <_vfiprintf_r+0x197>
81004fd6:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004fd9:	f7 d8                	neg    %eax
81004fdb:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004fde:	8b 45 80             	mov    -0x80(%ebp),%eax
81004fe1:	83 c8 02             	or     $0x2,%eax
81004fe4:	89 45 80             	mov    %eax,-0x80(%ebp)
81004fe7:	83 c3 01             	add    $0x1,%ebx
81004fea:	eb 2d                	jmp    81005019 <_vfiprintf_r+0x1c9>
81004fec:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004fef:	89 d0                	mov    %edx,%eax
81004ff1:	c1 e0 02             	shl    $0x2,%eax
81004ff4:	01 d0                	add    %edx,%eax
81004ff6:	01 c0                	add    %eax,%eax
81004ff8:	89 c2                	mov    %eax,%edx
81004ffa:	0f b6 03             	movzbl (%ebx),%eax
81004ffd:	0f be c0             	movsbl %al,%eax
81005000:	83 e8 30             	sub    $0x30,%eax
81005003:	01 d0                	add    %edx,%eax
81005005:	89 45 8c             	mov    %eax,-0x74(%ebp)
81005008:	83 c3 01             	add    $0x1,%ebx
8100500b:	0f b6 03             	movzbl (%ebx),%eax
8100500e:	0f be c0             	movsbl %al,%eax
81005011:	83 e8 30             	sub    $0x30,%eax
81005014:	83 f8 09             	cmp    $0x9,%eax
81005017:	76 d3                	jbe    81004fec <_vfiprintf_r+0x19c>
81005019:	0f b6 03             	movzbl (%ebx),%eax
8100501c:	3c 2e                	cmp    $0x2e,%al
8100501e:	75 67                	jne    81005087 <_vfiprintf_r+0x237>
81005020:	83 c3 01             	add    $0x1,%ebx
81005023:	0f b6 03             	movzbl (%ebx),%eax
81005026:	3c 2a                	cmp    $0x2a,%al
81005028:	75 27                	jne    81005051 <_vfiprintf_r+0x201>
8100502a:	83 c3 01             	add    $0x1,%ebx
8100502d:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81005033:	8d 50 04             	lea    0x4(%eax),%edx
81005036:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100503c:	8b 00                	mov    (%eax),%eax
8100503e:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005041:	8b 45 84             	mov    -0x7c(%ebp),%eax
81005044:	85 c0                	test   %eax,%eax
81005046:	79 3f                	jns    81005087 <_vfiprintf_r+0x237>
81005048:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100504f:	eb 36                	jmp    81005087 <_vfiprintf_r+0x237>
81005051:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81005058:	eb 1f                	jmp    81005079 <_vfiprintf_r+0x229>
8100505a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100505d:	89 d0                	mov    %edx,%eax
8100505f:	c1 e0 02             	shl    $0x2,%eax
81005062:	01 d0                	add    %edx,%eax
81005064:	01 c0                	add    %eax,%eax
81005066:	89 c2                	mov    %eax,%edx
81005068:	0f b6 03             	movzbl (%ebx),%eax
8100506b:	0f be c0             	movsbl %al,%eax
8100506e:	83 e8 30             	sub    $0x30,%eax
81005071:	01 d0                	add    %edx,%eax
81005073:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005076:	83 c3 01             	add    $0x1,%ebx
81005079:	0f b6 03             	movzbl (%ebx),%eax
8100507c:	0f be c0             	movsbl %al,%eax
8100507f:	83 e8 30             	sub    $0x30,%eax
81005082:	83 f8 09             	cmp    $0x9,%eax
81005085:	76 d3                	jbe    8100505a <_vfiprintf_r+0x20a>
81005087:	c7 45 dc 2e 89 00 81 	movl   $0x8100892e,-0x24(%ebp)
8100508e:	0f b6 03             	movzbl (%ebx),%eax
81005091:	0f be c0             	movsbl %al,%eax
81005094:	83 ec 04             	sub    $0x4,%esp
81005097:	6a 03                	push   $0x3
81005099:	50                   	push   %eax
8100509a:	ff 75 dc             	push   -0x24(%ebp)
8100509d:	e8 4e f9 ff ff       	call   810049f0 <memchr>
810050a2:	83 c4 10             	add    $0x10,%esp
810050a5:	89 c6                	mov    %eax,%esi
810050a7:	85 f6                	test   %esi,%esi
810050a9:	74 1b                	je     810050c6 <_vfiprintf_r+0x276>
810050ab:	8b 55 80             	mov    -0x80(%ebp),%edx
810050ae:	89 f0                	mov    %esi,%eax
810050b0:	2b 45 dc             	sub    -0x24(%ebp),%eax
810050b3:	be 40 00 00 00       	mov    $0x40,%esi
810050b8:	89 c1                	mov    %eax,%ecx
810050ba:	d3 e6                	shl    %cl,%esi
810050bc:	89 f0                	mov    %esi,%eax
810050be:	09 d0                	or     %edx,%eax
810050c0:	89 45 80             	mov    %eax,-0x80(%ebp)
810050c3:	83 c3 01             	add    $0x1,%ebx
810050c6:	89 d8                	mov    %ebx,%eax
810050c8:	8d 58 01             	lea    0x1(%eax),%ebx
810050cb:	0f b6 00             	movzbl (%eax),%eax
810050ce:	88 45 98             	mov    %al,-0x68(%ebp)
810050d1:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810050d5:	0f be c0             	movsbl %al,%eax
810050d8:	83 ec 04             	sub    $0x4,%esp
810050db:	6a 06                	push   $0x6
810050dd:	50                   	push   %eax
810050de:	68 32 89 00 81       	push   $0x81008932
810050e3:	e8 08 f9 ff ff       	call   810049f0 <memchr>
810050e8:	83 c4 10             	add    $0x10,%esp
810050eb:	89 c6                	mov    %eax,%esi
810050ed:	85 f6                	test   %esi,%esi
810050ef:	74 5a                	je     8100514b <_vfiprintf_r+0x2fb>
810050f1:	b8 00 00 00 00       	mov    $0x0,%eax
810050f6:	85 c0                	test   %eax,%eax
810050f8:	75 2e                	jne    81005128 <_vfiprintf_r+0x2d8>
810050fa:	8b 45 80             	mov    -0x80(%ebp),%eax
810050fd:	25 00 01 00 00       	and    $0x100,%eax
81005102:	85 c0                	test   %eax,%eax
81005104:	74 11                	je     81005117 <_vfiprintf_r+0x2c7>
81005106:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100510c:	83 c0 0c             	add    $0xc,%eax
8100510f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81005115:	eb 55                	jmp    8100516c <_vfiprintf_r+0x31c>
81005117:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100511d:	83 c0 08             	add    $0x8,%eax
81005120:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81005126:	eb 44                	jmp    8100516c <_vfiprintf_r+0x31c>
81005128:	83 ec 0c             	sub    $0xc,%esp
8100512b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81005131:	50                   	push   %eax
81005132:	ff 75 e4             	push   -0x1c(%ebp)
81005135:	ff 75 0c             	push   0xc(%ebp)
81005138:	8d 45 80             	lea    -0x80(%ebp),%eax
8100513b:	50                   	push   %eax
8100513c:	ff 75 08             	push   0x8(%ebp)
8100513f:	e8 bc ae ff 7e       	call   0 <show_promot-0x81000000>
81005144:	83 c4 20             	add    $0x20,%esp
81005147:	89 c7                	mov    %eax,%edi
81005149:	eb 21                	jmp    8100516c <_vfiprintf_r+0x31c>
8100514b:	83 ec 0c             	sub    $0xc,%esp
8100514e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81005154:	50                   	push   %eax
81005155:	ff 75 e4             	push   -0x1c(%ebp)
81005158:	ff 75 0c             	push   0xc(%ebp)
8100515b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100515e:	50                   	push   %eax
8100515f:	ff 75 08             	push   0x8(%ebp)
81005162:	e8 da 01 00 00       	call   81005341 <_printf_i>
81005167:	83 c4 20             	add    $0x20,%esp
8100516a:	89 c7                	mov    %eax,%edi
8100516c:	83 ff ff             	cmp    $0xffffffff,%edi
8100516f:	74 13                	je     81005184 <_vfiprintf_r+0x334>
81005171:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005174:	01 f8                	add    %edi,%eax
81005176:	89 45 94             	mov    %eax,-0x6c(%ebp)
81005179:	e9 5c fd ff ff       	jmp    81004eda <_vfiprintf_r+0x8a>
8100517e:	90                   	nop
8100517f:	eb 04                	jmp    81005185 <_vfiprintf_r+0x335>
81005181:	90                   	nop
81005182:	eb 01                	jmp    81005185 <_vfiprintf_r+0x335>
81005184:	90                   	nop
81005185:	8b 45 0c             	mov    0xc(%ebp),%eax
81005188:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100518c:	98                   	cwtl   
8100518d:	83 e0 40             	and    $0x40,%eax
81005190:	85 c0                	test   %eax,%eax
81005192:	75 05                	jne    81005199 <_vfiprintf_r+0x349>
81005194:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005197:	eb 05                	jmp    8100519e <_vfiprintf_r+0x34e>
81005199:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100519e:	8d 65 f4             	lea    -0xc(%ebp),%esp
810051a1:	5b                   	pop    %ebx
810051a2:	5e                   	pop    %esi
810051a3:	5f                   	pop    %edi
810051a4:	5d                   	pop    %ebp
810051a5:	c3                   	ret    

810051a6 <_printf_common>:
810051a6:	55                   	push   %ebp
810051a7:	89 e5                	mov    %esp,%ebp
810051a9:	83 ec 18             	sub    $0x18,%esp
810051ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810051af:	8b 50 10             	mov    0x10(%eax),%edx
810051b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810051b5:	8b 40 08             	mov    0x8(%eax),%eax
810051b8:	39 c2                	cmp    %eax,%edx
810051ba:	0f 4c d0             	cmovl  %eax,%edx
810051bd:	8b 45 10             	mov    0x10(%ebp),%eax
810051c0:	89 10                	mov    %edx,(%eax)
810051c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810051c5:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810051c9:	84 c0                	test   %al,%al
810051cb:	74 0d                	je     810051da <_printf_common+0x34>
810051cd:	8b 45 10             	mov    0x10(%ebp),%eax
810051d0:	8b 00                	mov    (%eax),%eax
810051d2:	8d 50 01             	lea    0x1(%eax),%edx
810051d5:	8b 45 10             	mov    0x10(%ebp),%eax
810051d8:	89 10                	mov    %edx,(%eax)
810051da:	8b 45 0c             	mov    0xc(%ebp),%eax
810051dd:	8b 00                	mov    (%eax),%eax
810051df:	83 e0 20             	and    $0x20,%eax
810051e2:	85 c0                	test   %eax,%eax
810051e4:	74 0d                	je     810051f3 <_printf_common+0x4d>
810051e6:	8b 45 10             	mov    0x10(%ebp),%eax
810051e9:	8b 00                	mov    (%eax),%eax
810051eb:	8d 50 02             	lea    0x2(%eax),%edx
810051ee:	8b 45 10             	mov    0x10(%ebp),%eax
810051f1:	89 10                	mov    %edx,(%eax)
810051f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810051f6:	8b 00                	mov    (%eax),%eax
810051f8:	83 e0 06             	and    $0x6,%eax
810051fb:	85 c0                	test   %eax,%eax
810051fd:	75 41                	jne    81005240 <_printf_common+0x9a>
810051ff:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81005206:	eb 24                	jmp    8100522c <_printf_common+0x86>
81005208:	8b 45 0c             	mov    0xc(%ebp),%eax
8100520b:	83 c0 19             	add    $0x19,%eax
8100520e:	6a 01                	push   $0x1
81005210:	50                   	push   %eax
81005211:	ff 75 14             	push   0x14(%ebp)
81005214:	ff 75 08             	push   0x8(%ebp)
81005217:	8b 45 18             	mov    0x18(%ebp),%eax
8100521a:	ff d0                	call   *%eax
8100521c:	83 c4 10             	add    $0x10,%esp
8100521f:	83 f8 ff             	cmp    $0xffffffff,%eax
81005222:	0f 84 0b 01 00 00    	je     81005333 <_printf_common+0x18d>
81005228:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100522c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100522f:	8b 50 0c             	mov    0xc(%eax),%edx
81005232:	8b 45 10             	mov    0x10(%ebp),%eax
81005235:	8b 08                	mov    (%eax),%ecx
81005237:	89 d0                	mov    %edx,%eax
81005239:	29 c8                	sub    %ecx,%eax
8100523b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100523e:	7c c8                	jl     81005208 <_printf_common+0x62>
81005240:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005247:	8b 45 0c             	mov    0xc(%ebp),%eax
8100524a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100524e:	84 c0                	test   %al,%al
81005250:	74 04                	je     81005256 <_printf_common+0xb0>
81005252:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005256:	8b 45 0c             	mov    0xc(%ebp),%eax
81005259:	8b 00                	mov    (%eax),%eax
8100525b:	83 e0 20             	and    $0x20,%eax
8100525e:	85 c0                	test   %eax,%eax
81005260:	74 28                	je     8100528a <_printf_common+0xe4>
81005262:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005265:	8d 50 01             	lea    0x1(%eax),%edx
81005268:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100526b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100526e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81005273:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005276:	8d 50 01             	lea    0x1(%eax),%edx
81005279:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100527c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100527f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81005283:	8b 55 0c             	mov    0xc(%ebp),%edx
81005286:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100528a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100528d:	8b 55 0c             	mov    0xc(%ebp),%edx
81005290:	83 c2 43             	add    $0x43,%edx
81005293:	50                   	push   %eax
81005294:	52                   	push   %edx
81005295:	ff 75 14             	push   0x14(%ebp)
81005298:	ff 75 08             	push   0x8(%ebp)
8100529b:	8b 45 18             	mov    0x18(%ebp),%eax
8100529e:	ff d0                	call   *%eax
810052a0:	83 c4 10             	add    $0x10,%esp
810052a3:	83 f8 ff             	cmp    $0xffffffff,%eax
810052a6:	0f 84 8a 00 00 00    	je     81005336 <_printf_common+0x190>
810052ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810052af:	8b 50 0c             	mov    0xc(%eax),%edx
810052b2:	8b 45 10             	mov    0x10(%ebp),%eax
810052b5:	8b 08                	mov    (%eax),%ecx
810052b7:	89 d0                	mov    %edx,%eax
810052b9:	29 c8                	sub    %ecx,%eax
810052bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810052be:	8b 45 0c             	mov    0xc(%ebp),%eax
810052c1:	8b 00                	mov    (%eax),%eax
810052c3:	83 e0 06             	and    $0x6,%eax
810052c6:	83 f8 04             	cmp    $0x4,%eax
810052c9:	75 06                	jne    810052d1 <_printf_common+0x12b>
810052cb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810052cf:	79 07                	jns    810052d8 <_printf_common+0x132>
810052d1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810052d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810052db:	8b 50 08             	mov    0x8(%eax),%edx
810052de:	8b 45 0c             	mov    0xc(%ebp),%eax
810052e1:	8b 40 10             	mov    0x10(%eax),%eax
810052e4:	39 c2                	cmp    %eax,%edx
810052e6:	7e 13                	jle    810052fb <_printf_common+0x155>
810052e8:	8b 45 0c             	mov    0xc(%ebp),%eax
810052eb:	8b 50 08             	mov    0x8(%eax),%edx
810052ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810052f1:	8b 48 10             	mov    0x10(%eax),%ecx
810052f4:	89 d0                	mov    %edx,%eax
810052f6:	29 c8                	sub    %ecx,%eax
810052f8:	01 45 f4             	add    %eax,-0xc(%ebp)
810052fb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005302:	eb 20                	jmp    81005324 <_printf_common+0x17e>
81005304:	8b 45 0c             	mov    0xc(%ebp),%eax
81005307:	83 c0 1a             	add    $0x1a,%eax
8100530a:	6a 01                	push   $0x1
8100530c:	50                   	push   %eax
8100530d:	ff 75 14             	push   0x14(%ebp)
81005310:	ff 75 08             	push   0x8(%ebp)
81005313:	8b 45 18             	mov    0x18(%ebp),%eax
81005316:	ff d0                	call   *%eax
81005318:	83 c4 10             	add    $0x10,%esp
8100531b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100531e:	74 19                	je     81005339 <_printf_common+0x193>
81005320:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81005324:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005327:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100532a:	7c d8                	jl     81005304 <_printf_common+0x15e>
8100532c:	b8 00 00 00 00       	mov    $0x0,%eax
81005331:	eb 0c                	jmp    8100533f <_printf_common+0x199>
81005333:	90                   	nop
81005334:	eb 04                	jmp    8100533a <_printf_common+0x194>
81005336:	90                   	nop
81005337:	eb 01                	jmp    8100533a <_printf_common+0x194>
81005339:	90                   	nop
8100533a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100533f:	c9                   	leave  
81005340:	c3                   	ret    

81005341 <_printf_i>:
81005341:	55                   	push   %ebp
81005342:	89 e5                	mov    %esp,%ebp
81005344:	53                   	push   %ebx
81005345:	83 ec 24             	sub    $0x24,%esp
81005348:	8b 45 0c             	mov    0xc(%ebp),%eax
8100534b:	83 c0 1b             	add    $0x1b,%eax
8100534e:	83 c0 28             	add    $0x28,%eax
81005351:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005354:	c7 45 e8 3c 89 00 81 	movl   $0x8100893c,-0x18(%ebp)
8100535b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100535e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005362:	0f be c0             	movsbl %al,%eax
81005365:	85 c0                	test   %eax,%eax
81005367:	0f 84 00 03 00 00    	je     8100566d <_printf_i+0x32c>
8100536d:	85 c0                	test   %eax,%eax
8100536f:	0f 88 52 03 00 00    	js     810056c7 <_printf_i+0x386>
81005375:	83 f8 78             	cmp    $0x78,%eax
81005378:	0f 8f 49 03 00 00    	jg     810056c7 <_printf_i+0x386>
8100537e:	83 f8 58             	cmp    $0x58,%eax
81005381:	0f 8c 40 03 00 00    	jl     810056c7 <_printf_i+0x386>
81005387:	83 e8 58             	sub    $0x58,%eax
8100538a:	83 f8 20             	cmp    $0x20,%eax
8100538d:	0f 87 34 03 00 00    	ja     810056c7 <_printf_i+0x386>
81005393:	8b 04 85 60 89 00 81 	mov    -0x7eff76a0(,%eax,4),%eax
8100539a:	ff e0                	jmp    *%eax
8100539c:	8b 45 18             	mov    0x18(%ebp),%eax
8100539f:	8b 00                	mov    (%eax),%eax
810053a1:	8d 48 04             	lea    0x4(%eax),%ecx
810053a4:	8b 55 18             	mov    0x18(%ebp),%edx
810053a7:	89 0a                	mov    %ecx,(%edx)
810053a9:	8b 00                	mov    (%eax),%eax
810053ab:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810053af:	89 c2                	mov    %eax,%edx
810053b1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810053b4:	88 10                	mov    %dl,(%eax)
810053b6:	8b 45 0c             	mov    0xc(%ebp),%eax
810053b9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810053c0:	e9 1c 03 00 00       	jmp    810056e1 <_printf_i+0x3a0>
810053c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810053c8:	8b 00                	mov    (%eax),%eax
810053ca:	25 80 00 00 00       	and    $0x80,%eax
810053cf:	85 c0                	test   %eax,%eax
810053d1:	74 11                	je     810053e4 <_printf_i+0xa3>
810053d3:	8b 45 18             	mov    0x18(%ebp),%eax
810053d6:	8b 00                	mov    (%eax),%eax
810053d8:	8d 48 04             	lea    0x4(%eax),%ecx
810053db:	8b 55 18             	mov    0x18(%ebp),%edx
810053de:	89 0a                	mov    %ecx,(%edx)
810053e0:	8b 00                	mov    (%eax),%eax
810053e2:	eb 2d                	jmp    81005411 <_printf_i+0xd0>
810053e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810053e7:	8b 00                	mov    (%eax),%eax
810053e9:	83 e0 40             	and    $0x40,%eax
810053ec:	85 c0                	test   %eax,%eax
810053ee:	74 12                	je     81005402 <_printf_i+0xc1>
810053f0:	8b 45 18             	mov    0x18(%ebp),%eax
810053f3:	8b 00                	mov    (%eax),%eax
810053f5:	8d 48 04             	lea    0x4(%eax),%ecx
810053f8:	8b 55 18             	mov    0x18(%ebp),%edx
810053fb:	89 0a                	mov    %ecx,(%edx)
810053fd:	8b 00                	mov    (%eax),%eax
810053ff:	98                   	cwtl   
81005400:	eb 0f                	jmp    81005411 <_printf_i+0xd0>
81005402:	8b 45 18             	mov    0x18(%ebp),%eax
81005405:	8b 00                	mov    (%eax),%eax
81005407:	8d 48 04             	lea    0x4(%eax),%ecx
8100540a:	8b 55 18             	mov    0x18(%ebp),%edx
8100540d:	89 0a                	mov    %ecx,(%edx)
8100540f:	8b 00                	mov    (%eax),%eax
81005411:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005414:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005417:	85 c0                	test   %eax,%eax
81005419:	79 0a                	jns    81005425 <_printf_i+0xe4>
8100541b:	f7 5d f4             	negl   -0xc(%ebp)
8100541e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005421:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81005425:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100542c:	e9 28 01 00 00       	jmp    81005559 <_printf_i+0x218>
81005431:	8b 45 0c             	mov    0xc(%ebp),%eax
81005434:	8b 00                	mov    (%eax),%eax
81005436:	25 80 00 00 00       	and    $0x80,%eax
8100543b:	85 c0                	test   %eax,%eax
8100543d:	74 11                	je     81005450 <_printf_i+0x10f>
8100543f:	8b 45 18             	mov    0x18(%ebp),%eax
81005442:	8b 00                	mov    (%eax),%eax
81005444:	8d 48 04             	lea    0x4(%eax),%ecx
81005447:	8b 55 18             	mov    0x18(%ebp),%edx
8100544a:	89 0a                	mov    %ecx,(%edx)
8100544c:	8b 00                	mov    (%eax),%eax
8100544e:	eb 2f                	jmp    8100547f <_printf_i+0x13e>
81005450:	8b 45 0c             	mov    0xc(%ebp),%eax
81005453:	8b 00                	mov    (%eax),%eax
81005455:	83 e0 40             	and    $0x40,%eax
81005458:	85 c0                	test   %eax,%eax
8100545a:	74 14                	je     81005470 <_printf_i+0x12f>
8100545c:	8b 45 18             	mov    0x18(%ebp),%eax
8100545f:	8b 00                	mov    (%eax),%eax
81005461:	8d 48 04             	lea    0x4(%eax),%ecx
81005464:	8b 55 18             	mov    0x18(%ebp),%edx
81005467:	89 0a                	mov    %ecx,(%edx)
81005469:	8b 00                	mov    (%eax),%eax
8100546b:	0f b7 c0             	movzwl %ax,%eax
8100546e:	eb 0f                	jmp    8100547f <_printf_i+0x13e>
81005470:	8b 45 18             	mov    0x18(%ebp),%eax
81005473:	8b 00                	mov    (%eax),%eax
81005475:	8d 48 04             	lea    0x4(%eax),%ecx
81005478:	8b 55 18             	mov    0x18(%ebp),%edx
8100547b:	89 0a                	mov    %ecx,(%edx)
8100547d:	8b 00                	mov    (%eax),%eax
8100547f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005482:	8b 45 0c             	mov    0xc(%ebp),%eax
81005485:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005489:	3c 6f                	cmp    $0x6f,%al
8100548b:	75 07                	jne    81005494 <_printf_i+0x153>
8100548d:	b8 08 00 00 00       	mov    $0x8,%eax
81005492:	eb 05                	jmp    81005499 <_printf_i+0x158>
81005494:	b8 0a 00 00 00       	mov    $0xa,%eax
81005499:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100549c:	e9 b1 00 00 00       	jmp    81005552 <_printf_i+0x211>
810054a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810054a4:	c6 40 45 58          	movb   $0x58,0x45(%eax)
810054a8:	eb 1d                	jmp    810054c7 <_printf_i+0x186>
810054aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810054ad:	8b 00                	mov    (%eax),%eax
810054af:	83 c8 20             	or     $0x20,%eax
810054b2:	89 c2                	mov    %eax,%edx
810054b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810054b7:	89 10                	mov    %edx,(%eax)
810054b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810054bc:	c6 40 45 78          	movb   $0x78,0x45(%eax)
810054c0:	c7 45 e8 4d 89 00 81 	movl   $0x8100894d,-0x18(%ebp)
810054c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810054ca:	8b 00                	mov    (%eax),%eax
810054cc:	25 80 00 00 00       	and    $0x80,%eax
810054d1:	85 c0                	test   %eax,%eax
810054d3:	74 11                	je     810054e6 <_printf_i+0x1a5>
810054d5:	8b 45 18             	mov    0x18(%ebp),%eax
810054d8:	8b 00                	mov    (%eax),%eax
810054da:	8d 48 04             	lea    0x4(%eax),%ecx
810054dd:	8b 55 18             	mov    0x18(%ebp),%edx
810054e0:	89 0a                	mov    %ecx,(%edx)
810054e2:	8b 00                	mov    (%eax),%eax
810054e4:	eb 2f                	jmp    81005515 <_printf_i+0x1d4>
810054e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810054e9:	8b 00                	mov    (%eax),%eax
810054eb:	83 e0 40             	and    $0x40,%eax
810054ee:	85 c0                	test   %eax,%eax
810054f0:	74 14                	je     81005506 <_printf_i+0x1c5>
810054f2:	8b 45 18             	mov    0x18(%ebp),%eax
810054f5:	8b 00                	mov    (%eax),%eax
810054f7:	8d 48 04             	lea    0x4(%eax),%ecx
810054fa:	8b 55 18             	mov    0x18(%ebp),%edx
810054fd:	89 0a                	mov    %ecx,(%edx)
810054ff:	8b 00                	mov    (%eax),%eax
81005501:	0f b7 c0             	movzwl %ax,%eax
81005504:	eb 0f                	jmp    81005515 <_printf_i+0x1d4>
81005506:	8b 45 18             	mov    0x18(%ebp),%eax
81005509:	8b 00                	mov    (%eax),%eax
8100550b:	8d 48 04             	lea    0x4(%eax),%ecx
8100550e:	8b 55 18             	mov    0x18(%ebp),%edx
81005511:	89 0a                	mov    %ecx,(%edx)
81005513:	8b 00                	mov    (%eax),%eax
81005515:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005518:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
8100551f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005522:	8b 00                	mov    (%eax),%eax
81005524:	83 e0 01             	and    $0x1,%eax
81005527:	85 c0                	test   %eax,%eax
81005529:	74 0f                	je     8100553a <_printf_i+0x1f9>
8100552b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100552e:	8b 00                	mov    (%eax),%eax
81005530:	83 c8 20             	or     $0x20,%eax
81005533:	89 c2                	mov    %eax,%edx
81005535:	8b 45 0c             	mov    0xc(%ebp),%eax
81005538:	89 10                	mov    %edx,(%eax)
8100553a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100553e:	75 11                	jne    81005551 <_printf_i+0x210>
81005540:	8b 45 0c             	mov    0xc(%ebp),%eax
81005543:	8b 00                	mov    (%eax),%eax
81005545:	83 e0 df             	and    $0xffffffdf,%eax
81005548:	89 c2                	mov    %eax,%edx
8100554a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100554d:	89 10                	mov    %edx,(%eax)
8100554f:	eb 01                	jmp    81005552 <_printf_i+0x211>
81005551:	90                   	nop
81005552:	8b 45 0c             	mov    0xc(%ebp),%eax
81005555:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81005559:	8b 45 0c             	mov    0xc(%ebp),%eax
8100555c:	8b 50 04             	mov    0x4(%eax),%edx
8100555f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005562:	89 50 08             	mov    %edx,0x8(%eax)
81005565:	8b 45 0c             	mov    0xc(%ebp),%eax
81005568:	8b 40 08             	mov    0x8(%eax),%eax
8100556b:	85 c0                	test   %eax,%eax
8100556d:	78 0f                	js     8100557e <_printf_i+0x23d>
8100556f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005572:	8b 00                	mov    (%eax),%eax
81005574:	83 e0 fb             	and    $0xfffffffb,%eax
81005577:	89 c2                	mov    %eax,%edx
81005579:	8b 45 0c             	mov    0xc(%ebp),%eax
8100557c:	89 10                	mov    %edx,(%eax)
8100557e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005582:	75 0a                	jne    8100558e <_printf_i+0x24d>
81005584:	8b 45 0c             	mov    0xc(%ebp),%eax
81005587:	8b 40 04             	mov    0x4(%eax),%eax
8100558a:	85 c0                	test   %eax,%eax
8100558c:	74 34                	je     810055c2 <_printf_i+0x281>
8100558e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81005591:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005594:	ba 00 00 00 00       	mov    $0x0,%edx
81005599:	f7 f1                	div    %ecx
8100559b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100559e:	01 d0                	add    %edx,%eax
810055a0:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810055a4:	0f b6 10             	movzbl (%eax),%edx
810055a7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810055aa:	88 10                	mov    %dl,(%eax)
810055ac:	8b 5d f0             	mov    -0x10(%ebp),%ebx
810055af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810055b2:	ba 00 00 00 00       	mov    $0x0,%edx
810055b7:	f7 f3                	div    %ebx
810055b9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810055bc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810055c0:	75 cc                	jne    8100558e <_printf_i+0x24d>
810055c2:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
810055c6:	75 26                	jne    810055ee <_printf_i+0x2ad>
810055c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810055cb:	8b 00                	mov    (%eax),%eax
810055cd:	83 e0 01             	and    $0x1,%eax
810055d0:	85 c0                	test   %eax,%eax
810055d2:	74 1a                	je     810055ee <_printf_i+0x2ad>
810055d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810055d7:	8b 50 04             	mov    0x4(%eax),%edx
810055da:	8b 45 0c             	mov    0xc(%ebp),%eax
810055dd:	8b 40 10             	mov    0x10(%eax),%eax
810055e0:	39 c2                	cmp    %eax,%edx
810055e2:	7f 0a                	jg     810055ee <_printf_i+0x2ad>
810055e4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810055e8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810055eb:	c6 00 30             	movb   $0x30,(%eax)
810055ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810055f1:	83 c0 1b             	add    $0x1b,%eax
810055f4:	83 c0 28             	add    $0x28,%eax
810055f7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810055fa:	89 c2                	mov    %eax,%edx
810055fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810055ff:	89 50 10             	mov    %edx,0x10(%eax)
81005602:	e9 e2 00 00 00       	jmp    810056e9 <_printf_i+0x3a8>
81005607:	8b 45 0c             	mov    0xc(%ebp),%eax
8100560a:	8b 00                	mov    (%eax),%eax
8100560c:	25 80 00 00 00       	and    $0x80,%eax
81005611:	85 c0                	test   %eax,%eax
81005613:	74 19                	je     8100562e <_printf_i+0x2ed>
81005615:	8b 45 18             	mov    0x18(%ebp),%eax
81005618:	8b 00                	mov    (%eax),%eax
8100561a:	8d 48 04             	lea    0x4(%eax),%ecx
8100561d:	8b 55 18             	mov    0x18(%ebp),%edx
81005620:	89 0a                	mov    %ecx,(%edx)
81005622:	8b 00                	mov    (%eax),%eax
81005624:	8b 55 0c             	mov    0xc(%ebp),%edx
81005627:	8b 52 14             	mov    0x14(%edx),%edx
8100562a:	89 10                	mov    %edx,(%eax)
8100562c:	eb 3f                	jmp    8100566d <_printf_i+0x32c>
8100562e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005631:	8b 00                	mov    (%eax),%eax
81005633:	83 e0 40             	and    $0x40,%eax
81005636:	85 c0                	test   %eax,%eax
81005638:	74 1c                	je     81005656 <_printf_i+0x315>
8100563a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100563d:	8b 58 14             	mov    0x14(%eax),%ebx
81005640:	8b 45 18             	mov    0x18(%ebp),%eax
81005643:	8b 00                	mov    (%eax),%eax
81005645:	8d 48 04             	lea    0x4(%eax),%ecx
81005648:	8b 55 18             	mov    0x18(%ebp),%edx
8100564b:	89 0a                	mov    %ecx,(%edx)
8100564d:	8b 00                	mov    (%eax),%eax
8100564f:	89 da                	mov    %ebx,%edx
81005651:	66 89 10             	mov    %dx,(%eax)
81005654:	eb 17                	jmp    8100566d <_printf_i+0x32c>
81005656:	8b 45 18             	mov    0x18(%ebp),%eax
81005659:	8b 00                	mov    (%eax),%eax
8100565b:	8d 48 04             	lea    0x4(%eax),%ecx
8100565e:	8b 55 18             	mov    0x18(%ebp),%edx
81005661:	89 0a                	mov    %ecx,(%edx)
81005663:	8b 00                	mov    (%eax),%eax
81005665:	8b 55 0c             	mov    0xc(%ebp),%edx
81005668:	8b 52 14             	mov    0x14(%edx),%edx
8100566b:	89 10                	mov    %edx,(%eax)
8100566d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005670:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81005677:	eb 70                	jmp    810056e9 <_printf_i+0x3a8>
81005679:	8b 45 18             	mov    0x18(%ebp),%eax
8100567c:	8b 00                	mov    (%eax),%eax
8100567e:	8d 48 04             	lea    0x4(%eax),%ecx
81005681:	8b 55 18             	mov    0x18(%ebp),%edx
81005684:	89 0a                	mov    %ecx,(%edx)
81005686:	8b 00                	mov    (%eax),%eax
81005688:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100568b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100568e:	8b 40 04             	mov    0x4(%eax),%eax
81005691:	83 ec 04             	sub    $0x4,%esp
81005694:	50                   	push   %eax
81005695:	6a 00                	push   $0x0
81005697:	ff 75 ec             	push   -0x14(%ebp)
8100569a:	e8 51 f3 ff ff       	call   810049f0 <memchr>
8100569f:	83 c4 10             	add    $0x10,%esp
810056a2:	89 45 e0             	mov    %eax,-0x20(%ebp)
810056a5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810056a9:	74 0e                	je     810056b9 <_printf_i+0x378>
810056ab:	8b 45 e0             	mov    -0x20(%ebp),%eax
810056ae:	2b 45 ec             	sub    -0x14(%ebp),%eax
810056b1:	89 c2                	mov    %eax,%edx
810056b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810056b6:	89 50 04             	mov    %edx,0x4(%eax)
810056b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810056bc:	8b 50 04             	mov    0x4(%eax),%edx
810056bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810056c2:	89 50 10             	mov    %edx,0x10(%eax)
810056c5:	eb 1a                	jmp    810056e1 <_printf_i+0x3a0>
810056c7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810056cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810056ce:	0f b6 50 18          	movzbl 0x18(%eax),%edx
810056d2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810056d5:	88 10                	mov    %dl,(%eax)
810056d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810056da:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810056e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810056e4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810056e8:	90                   	nop
810056e9:	83 ec 0c             	sub    $0xc,%esp
810056ec:	ff 75 14             	push   0x14(%ebp)
810056ef:	ff 75 10             	push   0x10(%ebp)
810056f2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810056f5:	50                   	push   %eax
810056f6:	ff 75 0c             	push   0xc(%ebp)
810056f9:	ff 75 08             	push   0x8(%ebp)
810056fc:	e8 a5 fa ff ff       	call   810051a6 <_printf_common>
81005701:	83 c4 20             	add    $0x20,%esp
81005704:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005707:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8100570b:	74 72                	je     8100577f <_printf_i+0x43e>
8100570d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005710:	8b 40 10             	mov    0x10(%eax),%eax
81005713:	50                   	push   %eax
81005714:	ff 75 ec             	push   -0x14(%ebp)
81005717:	ff 75 10             	push   0x10(%ebp)
8100571a:	ff 75 08             	push   0x8(%ebp)
8100571d:	8b 45 14             	mov    0x14(%ebp),%eax
81005720:	ff d0                	call   *%eax
81005722:	83 c4 10             	add    $0x10,%esp
81005725:	83 f8 ff             	cmp    $0xffffffff,%eax
81005728:	74 58                	je     81005782 <_printf_i+0x441>
8100572a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100572d:	8b 00                	mov    (%eax),%eax
8100572f:	83 e0 02             	and    $0x2,%eax
81005732:	85 c0                	test   %eax,%eax
81005734:	74 39                	je     8100576f <_printf_i+0x42e>
81005736:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100573d:	eb 20                	jmp    8100575f <_printf_i+0x41e>
8100573f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005742:	83 c0 19             	add    $0x19,%eax
81005745:	6a 01                	push   $0x1
81005747:	50                   	push   %eax
81005748:	ff 75 10             	push   0x10(%ebp)
8100574b:	ff 75 08             	push   0x8(%ebp)
8100574e:	8b 45 14             	mov    0x14(%ebp),%eax
81005751:	ff d0                	call   *%eax
81005753:	83 c4 10             	add    $0x10,%esp
81005756:	83 f8 ff             	cmp    $0xffffffff,%eax
81005759:	74 2a                	je     81005785 <_printf_i+0x444>
8100575b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100575f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005762:	8b 40 0c             	mov    0xc(%eax),%eax
81005765:	8b 55 d8             	mov    -0x28(%ebp),%edx
81005768:	29 d0                	sub    %edx,%eax
8100576a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100576d:	7c d0                	jl     8100573f <_printf_i+0x3fe>
8100576f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005772:	8b 50 0c             	mov    0xc(%eax),%edx
81005775:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005778:	39 c2                	cmp    %eax,%edx
8100577a:	0f 4d c2             	cmovge %edx,%eax
8100577d:	eb 0c                	jmp    8100578b <_printf_i+0x44a>
8100577f:	90                   	nop
81005780:	eb 04                	jmp    81005786 <_printf_i+0x445>
81005782:	90                   	nop
81005783:	eb 01                	jmp    81005786 <_printf_i+0x445>
81005785:	90                   	nop
81005786:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100578b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100578e:	c9                   	leave  
8100578f:	c3                   	ret    

81005790 <_open_r>:
81005790:	55                   	push   %ebp
81005791:	89 e5                	mov    %esp,%ebp
81005793:	83 ec 18             	sub    $0x18,%esp
81005796:	c7 05 2c 9c 00 81 00 	movl   $0x0,0x81009c2c
8100579d:	00 00 00 
810057a0:	83 ec 04             	sub    $0x4,%esp
810057a3:	ff 75 14             	push   0x14(%ebp)
810057a6:	ff 75 10             	push   0x10(%ebp)
810057a9:	ff 75 0c             	push   0xc(%ebp)
810057ac:	e8 01 b5 ff ff       	call   81000cb2 <open>
810057b1:	83 c4 10             	add    $0x10,%esp
810057b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057b7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810057bb:	75 14                	jne    810057d1 <_open_r+0x41>
810057bd:	a1 2c 9c 00 81       	mov    0x81009c2c,%eax
810057c2:	85 c0                	test   %eax,%eax
810057c4:	74 0b                	je     810057d1 <_open_r+0x41>
810057c6:	8b 15 2c 9c 00 81    	mov    0x81009c2c,%edx
810057cc:	8b 45 08             	mov    0x8(%ebp),%eax
810057cf:	89 10                	mov    %edx,(%eax)
810057d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057d4:	c9                   	leave  
810057d5:	c3                   	ret    

810057d6 <_iprintf_r>:
810057d6:	55                   	push   %ebp
810057d7:	89 e5                	mov    %esp,%ebp
810057d9:	83 ec 18             	sub    $0x18,%esp
810057dc:	8d 45 10             	lea    0x10(%ebp),%eax
810057df:	89 45 f0             	mov    %eax,-0x10(%ebp)
810057e2:	8b 55 f0             	mov    -0x10(%ebp),%edx
810057e5:	8b 45 08             	mov    0x8(%ebp),%eax
810057e8:	8b 40 08             	mov    0x8(%eax),%eax
810057eb:	52                   	push   %edx
810057ec:	ff 75 0c             	push   0xc(%ebp)
810057ef:	50                   	push   %eax
810057f0:	ff 75 08             	push   0x8(%ebp)
810057f3:	e8 58 f6 ff ff       	call   81004e50 <_vfiprintf_r>
810057f8:	83 c4 10             	add    $0x10,%esp
810057fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005801:	c9                   	leave  
81005802:	c3                   	ret    

81005803 <iprintf>:
81005803:	55                   	push   %ebp
81005804:	89 e5                	mov    %esp,%ebp
81005806:	83 ec 18             	sub    $0x18,%esp
81005809:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100580e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005811:	8d 45 0c             	lea    0xc(%ebp),%eax
81005814:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005817:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100581a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100581d:	8b 40 08             	mov    0x8(%eax),%eax
81005820:	52                   	push   %edx
81005821:	ff 75 08             	push   0x8(%ebp)
81005824:	50                   	push   %eax
81005825:	ff 75 f4             	push   -0xc(%ebp)
81005828:	e8 23 f6 ff ff       	call   81004e50 <_vfiprintf_r>
8100582d:	83 c4 10             	add    $0x10,%esp
81005830:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005833:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005836:	c9                   	leave  
81005837:	c3                   	ret    

81005838 <_puts_r>:
81005838:	55                   	push   %ebp
81005839:	89 e5                	mov    %esp,%ebp
8100583b:	83 ec 38             	sub    $0x38,%esp
8100583e:	83 ec 0c             	sub    $0xc,%esp
81005841:	ff 75 0c             	push   0xc(%ebp)
81005844:	e8 c7 13 00 00       	call   81006c10 <strlen>
81005849:	83 c4 10             	add    $0x10,%esp
8100584c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100584f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005852:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005855:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005858:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100585b:	c7 45 d4 e4 89 00 81 	movl   $0x810089e4,-0x2c(%ebp)
81005862:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81005869:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100586c:	83 c0 01             	add    $0x1,%eax
8100586f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005872:	8d 45 cc             	lea    -0x34(%ebp),%eax
81005875:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005878:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100587f:	8b 45 08             	mov    0x8(%ebp),%eax
81005882:	8b 40 08             	mov    0x8(%eax),%eax
81005885:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005888:	8b 45 08             	mov    0x8(%ebp),%eax
8100588b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100588e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005892:	74 18                	je     810058ac <_puts_r+0x74>
81005894:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005897:	8b 40 38             	mov    0x38(%eax),%eax
8100589a:	85 c0                	test   %eax,%eax
8100589c:	75 0e                	jne    810058ac <_puts_r+0x74>
8100589e:	83 ec 0c             	sub    $0xc,%esp
810058a1:	ff 75 ec             	push   -0x14(%ebp)
810058a4:	e8 44 c0 ff ff       	call   810018ed <__sinit>
810058a9:	83 c4 10             	add    $0x10,%esp
810058ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058af:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810058b3:	98                   	cwtl   
810058b4:	25 00 20 00 00       	and    $0x2000,%eax
810058b9:	85 c0                	test   %eax,%eax
810058bb:	75 24                	jne    810058e1 <_puts_r+0xa9>
810058bd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058c0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810058c4:	80 cc 20             	or     $0x20,%ah
810058c7:	89 c2                	mov    %eax,%edx
810058c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058cc:	66 89 50 0c          	mov    %dx,0xc(%eax)
810058d0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058d3:	8b 40 64             	mov    0x64(%eax),%eax
810058d6:	80 e4 df             	and    $0xdf,%ah
810058d9:	89 c2                	mov    %eax,%edx
810058db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058de:	89 50 64             	mov    %edx,0x64(%eax)
810058e1:	83 ec 04             	sub    $0x4,%esp
810058e4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810058e7:	50                   	push   %eax
810058e8:	ff 75 f0             	push   -0x10(%ebp)
810058eb:	ff 75 08             	push   0x8(%ebp)
810058ee:	e8 3c d0 ff ff       	call   8100292f <__sfvwrite_r>
810058f3:	83 c4 10             	add    $0x10,%esp
810058f6:	85 c0                	test   %eax,%eax
810058f8:	74 07                	je     81005901 <_puts_r+0xc9>
810058fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810058ff:	eb 05                	jmp    81005906 <_puts_r+0xce>
81005901:	b8 0a 00 00 00       	mov    $0xa,%eax
81005906:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005909:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100590c:	c9                   	leave  
8100590d:	c3                   	ret    

8100590e <puts>:
8100590e:	55                   	push   %ebp
8100590f:	89 e5                	mov    %esp,%ebp
81005911:	83 ec 08             	sub    $0x8,%esp
81005914:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81005919:	83 ec 08             	sub    $0x8,%esp
8100591c:	ff 75 08             	push   0x8(%ebp)
8100591f:	50                   	push   %eax
81005920:	e8 13 ff ff ff       	call   81005838 <_puts_r>
81005925:	83 c4 10             	add    $0x10,%esp
81005928:	c9                   	leave  
81005929:	c3                   	ret    

8100592a <_realloc_r>:
8100592a:	55                   	push   %ebp
8100592b:	89 e5                	mov    %esp,%ebp
8100592d:	83 ec 78             	sub    $0x78,%esp
81005930:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005934:	75 16                	jne    8100594c <_realloc_r+0x22>
81005936:	83 ec 08             	sub    $0x8,%esp
81005939:	ff 75 10             	push   0x10(%ebp)
8100593c:	ff 75 08             	push   0x8(%ebp)
8100593f:	e8 7d e8 ff ff       	call   810041c1 <_malloc_r>
81005944:	83 c4 10             	add    $0x10,%esp
81005947:	e9 b6 08 00 00       	jmp    81006202 <_realloc_r+0x8d8>
8100594c:	83 ec 0c             	sub    $0xc,%esp
8100594f:	ff 75 08             	push   0x8(%ebp)
81005952:	e8 de f2 ff ff       	call   81004c35 <__malloc_lock>
81005957:	83 c4 10             	add    $0x10,%esp
8100595a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100595d:	83 e8 08             	sub    $0x8,%eax
81005960:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005963:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005966:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005969:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100596c:	8b 40 04             	mov    0x4(%eax),%eax
8100596f:	83 e0 fc             	and    $0xfffffffc,%eax
81005972:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005975:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005978:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100597b:	8b 45 10             	mov    0x10(%ebp),%eax
8100597e:	83 c0 0b             	add    $0xb,%eax
81005981:	83 f8 16             	cmp    $0x16,%eax
81005984:	76 0b                	jbe    81005991 <_realloc_r+0x67>
81005986:	8b 45 10             	mov    0x10(%ebp),%eax
81005989:	83 c0 0b             	add    $0xb,%eax
8100598c:	83 e0 f8             	and    $0xfffffff8,%eax
8100598f:	eb 05                	jmp    81005996 <_realloc_r+0x6c>
81005991:	b8 10 00 00 00       	mov    $0x10,%eax
81005996:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005999:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100599c:	85 c0                	test   %eax,%eax
8100599e:	78 08                	js     810059a8 <_realloc_r+0x7e>
810059a0:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059a3:	3b 45 10             	cmp    0x10(%ebp),%eax
810059a6:	73 13                	jae    810059bb <_realloc_r+0x91>
810059a8:	8b 45 08             	mov    0x8(%ebp),%eax
810059ab:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810059b1:	b8 00 00 00 00       	mov    $0x0,%eax
810059b6:	e9 47 08 00 00       	jmp    81006202 <_realloc_r+0x8d8>
810059bb:	8b 55 c0             	mov    -0x40(%ebp),%edx
810059be:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059c1:	39 c2                	cmp    %eax,%edx
810059c3:	0f 8d 8b 07 00 00    	jge    81006154 <_realloc_r+0x82a>
810059c9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810059cc:	8b 45 c0             	mov    -0x40(%ebp),%eax
810059cf:	01 d0                	add    %edx,%eax
810059d1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810059d4:	b8 00 91 00 81       	mov    $0x81009100,%eax
810059d9:	8b 40 08             	mov    0x8(%eax),%eax
810059dc:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810059df:	74 1e                	je     810059ff <_realloc_r+0xd5>
810059e1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059e4:	8b 40 04             	mov    0x4(%eax),%eax
810059e7:	83 e0 fe             	and    $0xfffffffe,%eax
810059ea:	89 c2                	mov    %eax,%edx
810059ec:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059ef:	01 d0                	add    %edx,%eax
810059f1:	8b 40 04             	mov    0x4(%eax),%eax
810059f4:	83 e0 01             	and    $0x1,%eax
810059f7:	85 c0                	test   %eax,%eax
810059f9:	0f 85 ca 00 00 00    	jne    81005ac9 <_realloc_r+0x19f>
810059ff:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a02:	8b 40 04             	mov    0x4(%eax),%eax
81005a05:	83 e0 fc             	and    $0xfffffffc,%eax
81005a08:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005a0b:	b8 00 91 00 81       	mov    $0x81009100,%eax
81005a10:	8b 40 08             	mov    0x8(%eax),%eax
81005a13:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005a16:	75 71                	jne    81005a89 <_realloc_r+0x15f>
81005a18:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005a1b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a1e:	01 d0                	add    %edx,%eax
81005a20:	89 c2                	mov    %eax,%edx
81005a22:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a25:	83 c0 10             	add    $0x10,%eax
81005a28:	39 c2                	cmp    %eax,%edx
81005a2a:	0f 8c a9 00 00 00    	jl     81005ad9 <_realloc_r+0x1af>
81005a30:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005a33:	01 45 f0             	add    %eax,-0x10(%ebp)
81005a36:	ba 00 91 00 81       	mov    $0x81009100,%edx
81005a3b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005a3e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a41:	01 c8                	add    %ecx,%eax
81005a43:	89 42 08             	mov    %eax,0x8(%edx)
81005a46:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a49:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005a4c:	89 c2                	mov    %eax,%edx
81005a4e:	b8 00 91 00 81       	mov    $0x81009100,%eax
81005a53:	8b 40 08             	mov    0x8(%eax),%eax
81005a56:	83 ca 01             	or     $0x1,%edx
81005a59:	89 50 04             	mov    %edx,0x4(%eax)
81005a5c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a5f:	8b 40 04             	mov    0x4(%eax),%eax
81005a62:	83 e0 01             	and    $0x1,%eax
81005a65:	0b 45 bc             	or     -0x44(%ebp),%eax
81005a68:	89 c2                	mov    %eax,%edx
81005a6a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a6d:	89 50 04             	mov    %edx,0x4(%eax)
81005a70:	83 ec 0c             	sub    $0xc,%esp
81005a73:	ff 75 08             	push   0x8(%ebp)
81005a76:	e8 c0 f1 ff ff       	call   81004c3b <__malloc_unlock>
81005a7b:	83 c4 10             	add    $0x10,%esp
81005a7e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a81:	83 c0 08             	add    $0x8,%eax
81005a84:	e9 79 07 00 00       	jmp    81006202 <_realloc_r+0x8d8>
81005a89:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005a8c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a8f:	01 d0                	add    %edx,%eax
81005a91:	89 c2                	mov    %eax,%edx
81005a93:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a96:	39 c2                	cmp    %eax,%edx
81005a98:	7c 3f                	jl     81005ad9 <_realloc_r+0x1af>
81005a9a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a9d:	8b 40 0c             	mov    0xc(%eax),%eax
81005aa0:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005aa3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005aa6:	8b 40 08             	mov    0x8(%eax),%eax
81005aa9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005aac:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005aaf:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005ab2:	89 50 0c             	mov    %edx,0xc(%eax)
81005ab5:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005ab8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005abb:	89 50 08             	mov    %edx,0x8(%eax)
81005abe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005ac1:	01 45 f0             	add    %eax,-0x10(%ebp)
81005ac4:	e9 8c 06 00 00       	jmp    81006155 <_realloc_r+0x82b>
81005ac9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005ad0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005ad7:	eb 01                	jmp    81005ada <_realloc_r+0x1b0>
81005ad9:	90                   	nop
81005ada:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005add:	8b 40 04             	mov    0x4(%eax),%eax
81005ae0:	83 e0 01             	and    $0x1,%eax
81005ae3:	85 c0                	test   %eax,%eax
81005ae5:	0f 85 d6 04 00 00    	jne    81005fc1 <_realloc_r+0x697>
81005aeb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005aee:	8b 00                	mov    (%eax),%eax
81005af0:	f7 d8                	neg    %eax
81005af2:	89 c2                	mov    %eax,%edx
81005af4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005af7:	01 d0                	add    %edx,%eax
81005af9:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005afc:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005aff:	8b 40 04             	mov    0x4(%eax),%eax
81005b02:	83 e0 fc             	and    $0xfffffffc,%eax
81005b05:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005b08:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005b0c:	0f 84 4a 03 00 00    	je     81005e5c <_realloc_r+0x532>
81005b12:	b8 00 91 00 81       	mov    $0x81009100,%eax
81005b17:	8b 40 08             	mov    0x8(%eax),%eax
81005b1a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005b1d:	0f 85 b0 01 00 00    	jne    81005cd3 <_realloc_r+0x3a9>
81005b23:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005b26:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005b29:	01 c2                	add    %eax,%edx
81005b2b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b2e:	01 d0                	add    %edx,%eax
81005b30:	89 c2                	mov    %eax,%edx
81005b32:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005b35:	83 c0 10             	add    $0x10,%eax
81005b38:	39 c2                	cmp    %eax,%edx
81005b3a:	0f 8c 1c 03 00 00    	jl     81005e5c <_realloc_r+0x532>
81005b40:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b43:	8b 40 0c             	mov    0xc(%eax),%eax
81005b46:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005b49:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b4c:	8b 40 08             	mov    0x8(%eax),%eax
81005b4f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005b52:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005b55:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005b58:	89 50 0c             	mov    %edx,0xc(%eax)
81005b5b:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005b5e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005b61:	89 50 08             	mov    %edx,0x8(%eax)
81005b64:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b67:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b6a:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005b6d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005b70:	01 d0                	add    %edx,%eax
81005b72:	01 45 f0             	add    %eax,-0x10(%ebp)
81005b75:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b78:	83 c0 08             	add    $0x8,%eax
81005b7b:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005b7e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005b81:	83 e8 04             	sub    $0x4,%eax
81005b84:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005b87:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005b8b:	0f 87 de 00 00 00    	ja     81005c6f <_realloc_r+0x345>
81005b91:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b94:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b97:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005b9a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005b9d:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005ba1:	0f 86 90 00 00 00    	jbe    81005c37 <_realloc_r+0x30d>
81005ba7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005baa:	8d 42 04             	lea    0x4(%edx),%eax
81005bad:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bb0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bb3:	8d 48 04             	lea    0x4(%eax),%ecx
81005bb6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bb9:	8b 12                	mov    (%edx),%edx
81005bbb:	89 10                	mov    %edx,(%eax)
81005bbd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bc0:	8d 42 04             	lea    0x4(%edx),%eax
81005bc3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bc6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bc9:	8d 48 04             	lea    0x4(%eax),%ecx
81005bcc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bcf:	8b 12                	mov    (%edx),%edx
81005bd1:	89 10                	mov    %edx,(%eax)
81005bd3:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005bd7:	76 5e                	jbe    81005c37 <_realloc_r+0x30d>
81005bd9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bdc:	8d 42 04             	lea    0x4(%edx),%eax
81005bdf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005be2:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005be5:	8d 48 04             	lea    0x4(%eax),%ecx
81005be8:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005beb:	8b 12                	mov    (%edx),%edx
81005bed:	89 10                	mov    %edx,(%eax)
81005bef:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bf2:	8d 42 04             	lea    0x4(%edx),%eax
81005bf5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bf8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bfb:	8d 48 04             	lea    0x4(%eax),%ecx
81005bfe:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c01:	8b 12                	mov    (%edx),%edx
81005c03:	89 10                	mov    %edx,(%eax)
81005c05:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005c09:	76 2c                	jbe    81005c37 <_realloc_r+0x30d>
81005c0b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c0e:	8d 42 04             	lea    0x4(%edx),%eax
81005c11:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c14:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c17:	8d 48 04             	lea    0x4(%eax),%ecx
81005c1a:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c1d:	8b 12                	mov    (%edx),%edx
81005c1f:	89 10                	mov    %edx,(%eax)
81005c21:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c24:	8d 42 04             	lea    0x4(%edx),%eax
81005c27:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c2a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c2d:	8d 48 04             	lea    0x4(%eax),%ecx
81005c30:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c33:	8b 12                	mov    (%edx),%edx
81005c35:	89 10                	mov    %edx,(%eax)
81005c37:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c3a:	8d 42 04             	lea    0x4(%edx),%eax
81005c3d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c40:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c43:	8d 48 04             	lea    0x4(%eax),%ecx
81005c46:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c49:	8b 12                	mov    (%edx),%edx
81005c4b:	89 10                	mov    %edx,(%eax)
81005c4d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c50:	8d 42 04             	lea    0x4(%edx),%eax
81005c53:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c56:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c59:	8d 48 04             	lea    0x4(%eax),%ecx
81005c5c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c5f:	8b 12                	mov    (%edx),%edx
81005c61:	89 10                	mov    %edx,(%eax)
81005c63:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005c66:	8b 10                	mov    (%eax),%edx
81005c68:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c6b:	89 10                	mov    %edx,(%eax)
81005c6d:	eb 14                	jmp    81005c83 <_realloc_r+0x359>
81005c6f:	83 ec 04             	sub    $0x4,%esp
81005c72:	ff 75 a0             	push   -0x60(%ebp)
81005c75:	ff 75 0c             	push   0xc(%ebp)
81005c78:	ff 75 a8             	push   -0x58(%ebp)
81005c7b:	e8 a0 ee ff ff       	call   81004b20 <memmove>
81005c80:	83 c4 10             	add    $0x10,%esp
81005c83:	ba 00 91 00 81       	mov    $0x81009100,%edx
81005c88:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005c8b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c8e:	01 c8                	add    %ecx,%eax
81005c90:	89 42 08             	mov    %eax,0x8(%edx)
81005c93:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c96:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005c99:	89 c2                	mov    %eax,%edx
81005c9b:	b8 00 91 00 81       	mov    $0x81009100,%eax
81005ca0:	8b 40 08             	mov    0x8(%eax),%eax
81005ca3:	83 ca 01             	or     $0x1,%edx
81005ca6:	89 50 04             	mov    %edx,0x4(%eax)
81005ca9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005cac:	8b 40 04             	mov    0x4(%eax),%eax
81005caf:	83 e0 01             	and    $0x1,%eax
81005cb2:	0b 45 bc             	or     -0x44(%ebp),%eax
81005cb5:	89 c2                	mov    %eax,%edx
81005cb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005cba:	89 50 04             	mov    %edx,0x4(%eax)
81005cbd:	83 ec 0c             	sub    $0xc,%esp
81005cc0:	ff 75 08             	push   0x8(%ebp)
81005cc3:	e8 73 ef ff ff       	call   81004c3b <__malloc_unlock>
81005cc8:	83 c4 10             	add    $0x10,%esp
81005ccb:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005cce:	e9 2f 05 00 00       	jmp    81006202 <_realloc_r+0x8d8>
81005cd3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005cd6:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005cd9:	01 c2                	add    %eax,%edx
81005cdb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005cde:	01 d0                	add    %edx,%eax
81005ce0:	89 c2                	mov    %eax,%edx
81005ce2:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ce5:	39 c2                	cmp    %eax,%edx
81005ce7:	0f 8c 6f 01 00 00    	jl     81005e5c <_realloc_r+0x532>
81005ced:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cf0:	8b 40 0c             	mov    0xc(%eax),%eax
81005cf3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005cf6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cf9:	8b 40 08             	mov    0x8(%eax),%eax
81005cfc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005cff:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d02:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d05:	89 50 0c             	mov    %edx,0xc(%eax)
81005d08:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d0b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d0e:	89 50 08             	mov    %edx,0x8(%eax)
81005d11:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d14:	8b 40 0c             	mov    0xc(%eax),%eax
81005d17:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005d1a:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d1d:	8b 40 08             	mov    0x8(%eax),%eax
81005d20:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005d23:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d26:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d29:	89 50 0c             	mov    %edx,0xc(%eax)
81005d2c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d2f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d32:	89 50 08             	mov    %edx,0x8(%eax)
81005d35:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d38:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d3b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005d3e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005d41:	01 d0                	add    %edx,%eax
81005d43:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d46:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d49:	83 c0 08             	add    $0x8,%eax
81005d4c:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005d4f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005d52:	83 e8 04             	sub    $0x4,%eax
81005d55:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005d58:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81005d5c:	0f 87 e1 00 00 00    	ja     81005e43 <_realloc_r+0x519>
81005d62:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d65:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d68:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005d6b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005d6e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005d72:	0f 86 90 00 00 00    	jbe    81005e08 <_realloc_r+0x4de>
81005d78:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d7b:	8d 42 04             	lea    0x4(%edx),%eax
81005d7e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d81:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d84:	8d 48 04             	lea    0x4(%eax),%ecx
81005d87:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d8a:	8b 12                	mov    (%edx),%edx
81005d8c:	89 10                	mov    %edx,(%eax)
81005d8e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d91:	8d 42 04             	lea    0x4(%edx),%eax
81005d94:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d97:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d9a:	8d 48 04             	lea    0x4(%eax),%ecx
81005d9d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005da0:	8b 12                	mov    (%edx),%edx
81005da2:	89 10                	mov    %edx,(%eax)
81005da4:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81005da8:	76 5e                	jbe    81005e08 <_realloc_r+0x4de>
81005daa:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005dad:	8d 42 04             	lea    0x4(%edx),%eax
81005db0:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005db3:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005db6:	8d 48 04             	lea    0x4(%eax),%ecx
81005db9:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dbc:	8b 12                	mov    (%edx),%edx
81005dbe:	89 10                	mov    %edx,(%eax)
81005dc0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005dc3:	8d 42 04             	lea    0x4(%edx),%eax
81005dc6:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005dc9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dcc:	8d 48 04             	lea    0x4(%eax),%ecx
81005dcf:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dd2:	8b 12                	mov    (%edx),%edx
81005dd4:	89 10                	mov    %edx,(%eax)
81005dd6:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81005dda:	76 2c                	jbe    81005e08 <_realloc_r+0x4de>
81005ddc:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005ddf:	8d 42 04             	lea    0x4(%edx),%eax
81005de2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005de5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005de8:	8d 48 04             	lea    0x4(%eax),%ecx
81005deb:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dee:	8b 12                	mov    (%edx),%edx
81005df0:	89 10                	mov    %edx,(%eax)
81005df2:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005df5:	8d 42 04             	lea    0x4(%edx),%eax
81005df8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005dfb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dfe:	8d 48 04             	lea    0x4(%eax),%ecx
81005e01:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e04:	8b 12                	mov    (%edx),%edx
81005e06:	89 10                	mov    %edx,(%eax)
81005e08:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e0b:	8d 42 04             	lea    0x4(%edx),%eax
81005e0e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e11:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e14:	8d 48 04             	lea    0x4(%eax),%ecx
81005e17:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e1a:	8b 12                	mov    (%edx),%edx
81005e1c:	89 10                	mov    %edx,(%eax)
81005e1e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e21:	8d 42 04             	lea    0x4(%edx),%eax
81005e24:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e27:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e2a:	8d 48 04             	lea    0x4(%eax),%ecx
81005e2d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e30:	8b 12                	mov    (%edx),%edx
81005e32:	89 10                	mov    %edx,(%eax)
81005e34:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005e37:	8b 10                	mov    (%eax),%edx
81005e39:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e3c:	89 10                	mov    %edx,(%eax)
81005e3e:	e9 12 03 00 00       	jmp    81006155 <_realloc_r+0x82b>
81005e43:	83 ec 04             	sub    $0x4,%esp
81005e46:	ff 75 a4             	push   -0x5c(%ebp)
81005e49:	ff 75 0c             	push   0xc(%ebp)
81005e4c:	ff 75 a8             	push   -0x58(%ebp)
81005e4f:	e8 cc ec ff ff       	call   81004b20 <memmove>
81005e54:	83 c4 10             	add    $0x10,%esp
81005e57:	e9 f9 02 00 00       	jmp    81006155 <_realloc_r+0x82b>
81005e5c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005e60:	0f 84 5b 01 00 00    	je     81005fc1 <_realloc_r+0x697>
81005e66:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005e69:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e6c:	01 d0                	add    %edx,%eax
81005e6e:	89 c2                	mov    %eax,%edx
81005e70:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e73:	39 c2                	cmp    %eax,%edx
81005e75:	0f 8c 46 01 00 00    	jl     81005fc1 <_realloc_r+0x697>
81005e7b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e7e:	8b 40 0c             	mov    0xc(%eax),%eax
81005e81:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005e84:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e87:	8b 40 08             	mov    0x8(%eax),%eax
81005e8a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005e8d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005e90:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005e93:	89 50 0c             	mov    %edx,0xc(%eax)
81005e96:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005e99:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005e9c:	89 50 08             	mov    %edx,0x8(%eax)
81005e9f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ea2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ea5:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005ea8:	01 45 f0             	add    %eax,-0x10(%ebp)
81005eab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005eae:	83 c0 08             	add    $0x8,%eax
81005eb1:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005eb4:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005eb7:	83 e8 04             	sub    $0x4,%eax
81005eba:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005ebd:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81005ec1:	0f 87 e1 00 00 00    	ja     81005fa8 <_realloc_r+0x67e>
81005ec7:	8b 45 0c             	mov    0xc(%ebp),%eax
81005eca:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ecd:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005ed0:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005ed3:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81005ed7:	0f 86 90 00 00 00    	jbe    81005f6d <_realloc_r+0x643>
81005edd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ee0:	8d 42 04             	lea    0x4(%edx),%eax
81005ee3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ee6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ee9:	8d 48 04             	lea    0x4(%eax),%ecx
81005eec:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005eef:	8b 12                	mov    (%edx),%edx
81005ef1:	89 10                	mov    %edx,(%eax)
81005ef3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ef6:	8d 42 04             	lea    0x4(%edx),%eax
81005ef9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005efc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005eff:	8d 48 04             	lea    0x4(%eax),%ecx
81005f02:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f05:	8b 12                	mov    (%edx),%edx
81005f07:	89 10                	mov    %edx,(%eax)
81005f09:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81005f0d:	76 5e                	jbe    81005f6d <_realloc_r+0x643>
81005f0f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f12:	8d 42 04             	lea    0x4(%edx),%eax
81005f15:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f18:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f1b:	8d 48 04             	lea    0x4(%eax),%ecx
81005f1e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f21:	8b 12                	mov    (%edx),%edx
81005f23:	89 10                	mov    %edx,(%eax)
81005f25:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f28:	8d 42 04             	lea    0x4(%edx),%eax
81005f2b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f2e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f31:	8d 48 04             	lea    0x4(%eax),%ecx
81005f34:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f37:	8b 12                	mov    (%edx),%edx
81005f39:	89 10                	mov    %edx,(%eax)
81005f3b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81005f3f:	76 2c                	jbe    81005f6d <_realloc_r+0x643>
81005f41:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f44:	8d 42 04             	lea    0x4(%edx),%eax
81005f47:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f4a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f4d:	8d 48 04             	lea    0x4(%eax),%ecx
81005f50:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f53:	8b 12                	mov    (%edx),%edx
81005f55:	89 10                	mov    %edx,(%eax)
81005f57:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f5a:	8d 42 04             	lea    0x4(%edx),%eax
81005f5d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f60:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f63:	8d 48 04             	lea    0x4(%eax),%ecx
81005f66:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f69:	8b 12                	mov    (%edx),%edx
81005f6b:	89 10                	mov    %edx,(%eax)
81005f6d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f70:	8d 42 04             	lea    0x4(%edx),%eax
81005f73:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f76:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f79:	8d 48 04             	lea    0x4(%eax),%ecx
81005f7c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f7f:	8b 12                	mov    (%edx),%edx
81005f81:	89 10                	mov    %edx,(%eax)
81005f83:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f86:	8d 42 04             	lea    0x4(%edx),%eax
81005f89:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f8c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f8f:	8d 48 04             	lea    0x4(%eax),%ecx
81005f92:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f95:	8b 12                	mov    (%edx),%edx
81005f97:	89 10                	mov    %edx,(%eax)
81005f99:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005f9c:	8b 10                	mov    (%eax),%edx
81005f9e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005fa1:	89 10                	mov    %edx,(%eax)
81005fa3:	e9 ad 01 00 00       	jmp    81006155 <_realloc_r+0x82b>
81005fa8:	83 ec 04             	sub    $0x4,%esp
81005fab:	ff 75 9c             	push   -0x64(%ebp)
81005fae:	ff 75 0c             	push   0xc(%ebp)
81005fb1:	ff 75 a8             	push   -0x58(%ebp)
81005fb4:	e8 67 eb ff ff       	call   81004b20 <memmove>
81005fb9:	83 c4 10             	add    $0x10,%esp
81005fbc:	e9 94 01 00 00       	jmp    81006155 <_realloc_r+0x82b>
81005fc1:	83 ec 08             	sub    $0x8,%esp
81005fc4:	ff 75 10             	push   0x10(%ebp)
81005fc7:	ff 75 08             	push   0x8(%ebp)
81005fca:	e8 f2 e1 ff ff       	call   810041c1 <_malloc_r>
81005fcf:	83 c4 10             	add    $0x10,%esp
81005fd2:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005fd5:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81005fd9:	75 18                	jne    81005ff3 <_realloc_r+0x6c9>
81005fdb:	83 ec 0c             	sub    $0xc,%esp
81005fde:	ff 75 08             	push   0x8(%ebp)
81005fe1:	e8 55 ec ff ff       	call   81004c3b <__malloc_unlock>
81005fe6:	83 c4 10             	add    $0x10,%esp
81005fe9:	b8 00 00 00 00       	mov    $0x0,%eax
81005fee:	e9 0f 02 00 00       	jmp    81006202 <_realloc_r+0x8d8>
81005ff3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005ff6:	83 e8 08             	sub    $0x8,%eax
81005ff9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ffc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fff:	8b 40 04             	mov    0x4(%eax),%eax
81006002:	83 e0 fe             	and    $0xfffffffe,%eax
81006005:	89 c2                	mov    %eax,%edx
81006007:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100600a:	01 d0                	add    %edx,%eax
8100600c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100600f:	75 17                	jne    81006028 <_realloc_r+0x6fe>
81006011:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006014:	8b 40 04             	mov    0x4(%eax),%eax
81006017:	83 e0 fc             	and    $0xfffffffc,%eax
8100601a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100601d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006020:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006023:	e9 2d 01 00 00       	jmp    81006155 <_realloc_r+0x82b>
81006028:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100602b:	83 e8 04             	sub    $0x4,%eax
8100602e:	89 45 98             	mov    %eax,-0x68(%ebp)
81006031:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81006035:	0f 87 de 00 00 00    	ja     81006119 <_realloc_r+0x7ef>
8100603b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100603e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006041:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006044:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006047:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100604b:	0f 86 90 00 00 00    	jbe    810060e1 <_realloc_r+0x7b7>
81006051:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006054:	8d 42 04             	lea    0x4(%edx),%eax
81006057:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100605a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100605d:	8d 48 04             	lea    0x4(%eax),%ecx
81006060:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006063:	8b 12                	mov    (%edx),%edx
81006065:	89 10                	mov    %edx,(%eax)
81006067:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100606a:	8d 42 04             	lea    0x4(%edx),%eax
8100606d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006070:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006073:	8d 48 04             	lea    0x4(%eax),%ecx
81006076:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006079:	8b 12                	mov    (%edx),%edx
8100607b:	89 10                	mov    %edx,(%eax)
8100607d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81006081:	76 5e                	jbe    810060e1 <_realloc_r+0x7b7>
81006083:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006086:	8d 42 04             	lea    0x4(%edx),%eax
81006089:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100608c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100608f:	8d 48 04             	lea    0x4(%eax),%ecx
81006092:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006095:	8b 12                	mov    (%edx),%edx
81006097:	89 10                	mov    %edx,(%eax)
81006099:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100609c:	8d 42 04             	lea    0x4(%edx),%eax
8100609f:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060a2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060a5:	8d 48 04             	lea    0x4(%eax),%ecx
810060a8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060ab:	8b 12                	mov    (%edx),%edx
810060ad:	89 10                	mov    %edx,(%eax)
810060af:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810060b3:	76 2c                	jbe    810060e1 <_realloc_r+0x7b7>
810060b5:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060b8:	8d 42 04             	lea    0x4(%edx),%eax
810060bb:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060be:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060c1:	8d 48 04             	lea    0x4(%eax),%ecx
810060c4:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060c7:	8b 12                	mov    (%edx),%edx
810060c9:	89 10                	mov    %edx,(%eax)
810060cb:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060ce:	8d 42 04             	lea    0x4(%edx),%eax
810060d1:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060d4:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060d7:	8d 48 04             	lea    0x4(%eax),%ecx
810060da:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060dd:	8b 12                	mov    (%edx),%edx
810060df:	89 10                	mov    %edx,(%eax)
810060e1:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060e4:	8d 42 04             	lea    0x4(%edx),%eax
810060e7:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060ea:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060ed:	8d 48 04             	lea    0x4(%eax),%ecx
810060f0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060f3:	8b 12                	mov    (%edx),%edx
810060f5:	89 10                	mov    %edx,(%eax)
810060f7:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060fa:	8d 42 04             	lea    0x4(%edx),%eax
810060fd:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006100:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006103:	8d 48 04             	lea    0x4(%eax),%ecx
81006106:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006109:	8b 12                	mov    (%edx),%edx
8100610b:	89 10                	mov    %edx,(%eax)
8100610d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81006110:	8b 10                	mov    (%eax),%edx
81006112:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006115:	89 10                	mov    %edx,(%eax)
81006117:	eb 14                	jmp    8100612d <_realloc_r+0x803>
81006119:	83 ec 04             	sub    $0x4,%esp
8100611c:	ff 75 98             	push   -0x68(%ebp)
8100611f:	ff 75 0c             	push   0xc(%ebp)
81006122:	ff 75 a8             	push   -0x58(%ebp)
81006125:	e8 f6 e9 ff ff       	call   81004b20 <memmove>
8100612a:	83 c4 10             	add    $0x10,%esp
8100612d:	83 ec 08             	sub    $0x8,%esp
81006130:	ff 75 0c             	push   0xc(%ebp)
81006133:	ff 75 08             	push   0x8(%ebp)
81006136:	e8 67 bd ff ff       	call   81001ea2 <_free_r>
8100613b:	83 c4 10             	add    $0x10,%esp
8100613e:	83 ec 0c             	sub    $0xc,%esp
81006141:	ff 75 08             	push   0x8(%ebp)
81006144:	e8 f2 ea ff ff       	call   81004c3b <__malloc_unlock>
81006149:	83 c4 10             	add    $0x10,%esp
8100614c:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100614f:	e9 ae 00 00 00       	jmp    81006202 <_realloc_r+0x8d8>
81006154:	90                   	nop
81006155:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006158:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100615b:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100615e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81006162:	76 5d                	jbe    810061c1 <_realloc_r+0x897>
81006164:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006167:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100616a:	01 d0                	add    %edx,%eax
8100616c:	89 45 90             	mov    %eax,-0x70(%ebp)
8100616f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006172:	8b 40 04             	mov    0x4(%eax),%eax
81006175:	83 e0 01             	and    $0x1,%eax
81006178:	0b 45 bc             	or     -0x44(%ebp),%eax
8100617b:	89 c2                	mov    %eax,%edx
8100617d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006180:	89 50 04             	mov    %edx,0x4(%eax)
81006183:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006186:	83 c8 01             	or     $0x1,%eax
81006189:	89 c2                	mov    %eax,%edx
8100618b:	8b 45 90             	mov    -0x70(%ebp),%eax
8100618e:	89 50 04             	mov    %edx,0x4(%eax)
81006191:	8b 55 90             	mov    -0x70(%ebp),%edx
81006194:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006197:	01 d0                	add    %edx,%eax
81006199:	8b 50 04             	mov    0x4(%eax),%edx
8100619c:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100619f:	8b 45 94             	mov    -0x6c(%ebp),%eax
810061a2:	01 c8                	add    %ecx,%eax
810061a4:	83 ca 01             	or     $0x1,%edx
810061a7:	89 50 04             	mov    %edx,0x4(%eax)
810061aa:	8b 45 90             	mov    -0x70(%ebp),%eax
810061ad:	83 c0 08             	add    $0x8,%eax
810061b0:	83 ec 08             	sub    $0x8,%esp
810061b3:	50                   	push   %eax
810061b4:	ff 75 08             	push   0x8(%ebp)
810061b7:	e8 e6 bc ff ff       	call   81001ea2 <_free_r>
810061bc:	83 c4 10             	add    $0x10,%esp
810061bf:	eb 2d                	jmp    810061ee <_realloc_r+0x8c4>
810061c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061c4:	8b 40 04             	mov    0x4(%eax),%eax
810061c7:	83 e0 01             	and    $0x1,%eax
810061ca:	0b 45 f0             	or     -0x10(%ebp),%eax
810061cd:	89 c2                	mov    %eax,%edx
810061cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061d2:	89 50 04             	mov    %edx,0x4(%eax)
810061d5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810061d8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061db:	01 d0                	add    %edx,%eax
810061dd:	8b 50 04             	mov    0x4(%eax),%edx
810061e0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810061e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061e6:	01 c8                	add    %ecx,%eax
810061e8:	83 ca 01             	or     $0x1,%edx
810061eb:	89 50 04             	mov    %edx,0x4(%eax)
810061ee:	83 ec 0c             	sub    $0xc,%esp
810061f1:	ff 75 08             	push   0x8(%ebp)
810061f4:	e8 42 ea ff ff       	call   81004c3b <__malloc_unlock>
810061f9:	83 c4 10             	add    $0x10,%esp
810061fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061ff:	83 c0 08             	add    $0x8,%eax
81006202:	c9                   	leave  
81006203:	c3                   	ret    

81006204 <cleanup_glue>:
81006204:	55                   	push   %ebp
81006205:	89 e5                	mov    %esp,%ebp
81006207:	83 ec 08             	sub    $0x8,%esp
8100620a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100620d:	8b 00                	mov    (%eax),%eax
8100620f:	85 c0                	test   %eax,%eax
81006211:	74 14                	je     81006227 <cleanup_glue+0x23>
81006213:	8b 45 0c             	mov    0xc(%ebp),%eax
81006216:	8b 00                	mov    (%eax),%eax
81006218:	83 ec 08             	sub    $0x8,%esp
8100621b:	50                   	push   %eax
8100621c:	ff 75 08             	push   0x8(%ebp)
8100621f:	e8 e0 ff ff ff       	call   81006204 <cleanup_glue>
81006224:	83 c4 10             	add    $0x10,%esp
81006227:	83 ec 08             	sub    $0x8,%esp
8100622a:	ff 75 0c             	push   0xc(%ebp)
8100622d:	ff 75 08             	push   0x8(%ebp)
81006230:	e8 6d bc ff ff       	call   81001ea2 <_free_r>
81006235:	83 c4 10             	add    $0x10,%esp
81006238:	90                   	nop
81006239:	c9                   	leave  
8100623a:	c3                   	ret    

8100623b <_reclaim_reent>:
8100623b:	55                   	push   %ebp
8100623c:	89 e5                	mov    %esp,%ebp
8100623e:	83 ec 28             	sub    $0x28,%esp
81006241:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81006246:	39 45 08             	cmp    %eax,0x8(%ebp)
81006249:	0f 84 49 01 00 00    	je     81006398 <_reclaim_reent+0x15d>
8100624f:	8b 45 08             	mov    0x8(%ebp),%eax
81006252:	8b 40 4c             	mov    0x4c(%eax),%eax
81006255:	85 c0                	test   %eax,%eax
81006257:	74 64                	je     810062bd <_reclaim_reent+0x82>
81006259:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006260:	eb 3e                	jmp    810062a0 <_reclaim_reent+0x65>
81006262:	8b 45 08             	mov    0x8(%ebp),%eax
81006265:	8b 50 4c             	mov    0x4c(%eax),%edx
81006268:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100626b:	c1 e0 02             	shl    $0x2,%eax
8100626e:	01 d0                	add    %edx,%eax
81006270:	8b 00                	mov    (%eax),%eax
81006272:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006275:	eb 1f                	jmp    81006296 <_reclaim_reent+0x5b>
81006277:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100627a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100627d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006280:	8b 00                	mov    (%eax),%eax
81006282:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006285:	83 ec 08             	sub    $0x8,%esp
81006288:	ff 75 e8             	push   -0x18(%ebp)
8100628b:	ff 75 08             	push   0x8(%ebp)
8100628e:	e8 0f bc ff ff       	call   81001ea2 <_free_r>
81006293:	83 c4 10             	add    $0x10,%esp
81006296:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100629a:	75 db                	jne    81006277 <_reclaim_reent+0x3c>
8100629c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810062a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062a3:	83 f8 1f             	cmp    $0x1f,%eax
810062a6:	76 ba                	jbe    81006262 <_reclaim_reent+0x27>
810062a8:	8b 45 08             	mov    0x8(%ebp),%eax
810062ab:	8b 40 4c             	mov    0x4c(%eax),%eax
810062ae:	83 ec 08             	sub    $0x8,%esp
810062b1:	50                   	push   %eax
810062b2:	ff 75 08             	push   0x8(%ebp)
810062b5:	e8 e8 bb ff ff       	call   81001ea2 <_free_r>
810062ba:	83 c4 10             	add    $0x10,%esp
810062bd:	8b 45 08             	mov    0x8(%ebp),%eax
810062c0:	8b 40 40             	mov    0x40(%eax),%eax
810062c3:	85 c0                	test   %eax,%eax
810062c5:	74 15                	je     810062dc <_reclaim_reent+0xa1>
810062c7:	8b 45 08             	mov    0x8(%ebp),%eax
810062ca:	8b 40 40             	mov    0x40(%eax),%eax
810062cd:	83 ec 08             	sub    $0x8,%esp
810062d0:	50                   	push   %eax
810062d1:	ff 75 08             	push   0x8(%ebp)
810062d4:	e8 c9 bb ff ff       	call   81001ea2 <_free_r>
810062d9:	83 c4 10             	add    $0x10,%esp
810062dc:	8b 45 08             	mov    0x8(%ebp),%eax
810062df:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062e5:	85 c0                	test   %eax,%eax
810062e7:	74 50                	je     81006339 <_reclaim_reent+0xfe>
810062e9:	8b 45 08             	mov    0x8(%ebp),%eax
810062ec:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062f2:	8b 55 08             	mov    0x8(%ebp),%edx
810062f5:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810062fb:	39 d0                	cmp    %edx,%eax
810062fd:	74 3a                	je     81006339 <_reclaim_reent+0xfe>
810062ff:	8b 45 08             	mov    0x8(%ebp),%eax
81006302:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006308:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100630b:	eb 1f                	jmp    8100632c <_reclaim_reent+0xf1>
8100630d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006310:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006313:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006316:	8b 00                	mov    (%eax),%eax
81006318:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100631b:	83 ec 08             	sub    $0x8,%esp
8100631e:	ff 75 e4             	push   -0x1c(%ebp)
81006321:	ff 75 08             	push   0x8(%ebp)
81006324:	e8 79 bb ff ff       	call   81001ea2 <_free_r>
81006329:	83 c4 10             	add    $0x10,%esp
8100632c:	8b 45 08             	mov    0x8(%ebp),%eax
8100632f:	05 4c 01 00 00       	add    $0x14c,%eax
81006334:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006337:	75 d4                	jne    8100630d <_reclaim_reent+0xd2>
81006339:	8b 45 08             	mov    0x8(%ebp),%eax
8100633c:	8b 40 54             	mov    0x54(%eax),%eax
8100633f:	85 c0                	test   %eax,%eax
81006341:	74 15                	je     81006358 <_reclaim_reent+0x11d>
81006343:	8b 45 08             	mov    0x8(%ebp),%eax
81006346:	8b 40 54             	mov    0x54(%eax),%eax
81006349:	83 ec 08             	sub    $0x8,%esp
8100634c:	50                   	push   %eax
8100634d:	ff 75 08             	push   0x8(%ebp)
81006350:	e8 4d bb ff ff       	call   81001ea2 <_free_r>
81006355:	83 c4 10             	add    $0x10,%esp
81006358:	8b 45 08             	mov    0x8(%ebp),%eax
8100635b:	8b 40 38             	mov    0x38(%eax),%eax
8100635e:	85 c0                	test   %eax,%eax
81006360:	74 36                	je     81006398 <_reclaim_reent+0x15d>
81006362:	8b 45 08             	mov    0x8(%ebp),%eax
81006365:	8b 40 3c             	mov    0x3c(%eax),%eax
81006368:	83 ec 0c             	sub    $0xc,%esp
8100636b:	ff 75 08             	push   0x8(%ebp)
8100636e:	ff d0                	call   *%eax
81006370:	83 c4 10             	add    $0x10,%esp
81006373:	8b 45 08             	mov    0x8(%ebp),%eax
81006376:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100637c:	85 c0                	test   %eax,%eax
8100637e:	74 18                	je     81006398 <_reclaim_reent+0x15d>
81006380:	8b 45 08             	mov    0x8(%ebp),%eax
81006383:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006389:	83 ec 08             	sub    $0x8,%esp
8100638c:	50                   	push   %eax
8100638d:	ff 75 08             	push   0x8(%ebp)
81006390:	e8 6f fe ff ff       	call   81006204 <cleanup_glue>
81006395:	83 c4 10             	add    $0x10,%esp
81006398:	90                   	nop
81006399:	c9                   	leave  
8100639a:	c3                   	ret    

8100639b <lflush>:
8100639b:	55                   	push   %ebp
8100639c:	89 e5                	mov    %esp,%ebp
8100639e:	83 ec 08             	sub    $0x8,%esp
810063a1:	8b 45 08             	mov    0x8(%ebp),%eax
810063a4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810063a8:	98                   	cwtl   
810063a9:	83 e0 09             	and    $0x9,%eax
810063ac:	83 f8 09             	cmp    $0x9,%eax
810063af:	75 10                	jne    810063c1 <lflush+0x26>
810063b1:	83 ec 0c             	sub    $0xc,%esp
810063b4:	ff 75 08             	push   0x8(%ebp)
810063b7:	e8 9c af ff ff       	call   81001358 <fflush>
810063bc:	83 c4 10             	add    $0x10,%esp
810063bf:	eb 05                	jmp    810063c6 <lflush+0x2b>
810063c1:	b8 00 00 00 00       	mov    $0x0,%eax
810063c6:	c9                   	leave  
810063c7:	c3                   	ret    

810063c8 <__srefill_r>:
810063c8:	55                   	push   %ebp
810063c9:	89 e5                	mov    %esp,%ebp
810063cb:	56                   	push   %esi
810063cc:	53                   	push   %ebx
810063cd:	83 ec 10             	sub    $0x10,%esp
810063d0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810063d3:	8b 45 08             	mov    0x8(%ebp),%eax
810063d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810063d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810063dd:	74 18                	je     810063f7 <__srefill_r+0x2f>
810063df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063e2:	8b 40 38             	mov    0x38(%eax),%eax
810063e5:	85 c0                	test   %eax,%eax
810063e7:	75 0e                	jne    810063f7 <__srefill_r+0x2f>
810063e9:	83 ec 0c             	sub    $0xc,%esp
810063ec:	ff 75 f4             	push   -0xc(%ebp)
810063ef:	e8 f9 b4 ff ff       	call   810018ed <__sinit>
810063f4:	83 c4 10             	add    $0x10,%esp
810063f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063fb:	98                   	cwtl   
810063fc:	25 00 20 00 00       	and    $0x2000,%eax
81006401:	85 c0                	test   %eax,%eax
81006403:	75 14                	jne    81006419 <__srefill_r+0x51>
81006405:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006409:	80 cc 20             	or     $0x20,%ah
8100640c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006410:	8b 43 64             	mov    0x64(%ebx),%eax
81006413:	80 e4 df             	and    $0xdf,%ah
81006416:	89 43 64             	mov    %eax,0x64(%ebx)
81006419:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81006420:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006424:	98                   	cwtl   
81006425:	83 e0 20             	and    $0x20,%eax
81006428:	85 c0                	test   %eax,%eax
8100642a:	74 0a                	je     81006436 <__srefill_r+0x6e>
8100642c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006431:	e9 8c 01 00 00       	jmp    810065c2 <__srefill_r+0x1fa>
81006436:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100643a:	98                   	cwtl   
8100643b:	83 e0 04             	and    $0x4,%eax
8100643e:	85 c0                	test   %eax,%eax
81006440:	75 79                	jne    810064bb <__srefill_r+0xf3>
81006442:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006446:	98                   	cwtl   
81006447:	83 e0 10             	and    $0x10,%eax
8100644a:	85 c0                	test   %eax,%eax
8100644c:	75 1e                	jne    8100646c <__srefill_r+0xa4>
8100644e:	8b 45 08             	mov    0x8(%ebp),%eax
81006451:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81006457:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100645b:	83 c8 40             	or     $0x40,%eax
8100645e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006462:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006467:	e9 56 01 00 00       	jmp    810065c2 <__srefill_r+0x1fa>
8100646c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006470:	98                   	cwtl   
81006471:	83 e0 08             	and    $0x8,%eax
81006474:	85 c0                	test   %eax,%eax
81006476:	74 36                	je     810064ae <__srefill_r+0xe6>
81006478:	83 ec 08             	sub    $0x8,%esp
8100647b:	53                   	push   %ebx
8100647c:	ff 75 08             	push   0x8(%ebp)
8100647f:	e8 7c ae ff ff       	call   81001300 <_fflush_r>
81006484:	83 c4 10             	add    $0x10,%esp
81006487:	85 c0                	test   %eax,%eax
81006489:	74 0a                	je     81006495 <__srefill_r+0xcd>
8100648b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006490:	e9 2d 01 00 00       	jmp    810065c2 <__srefill_r+0x1fa>
81006495:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006499:	83 e0 f7             	and    $0xfffffff7,%eax
8100649c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810064a0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810064a7:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810064ae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064b2:	83 c8 04             	or     $0x4,%eax
810064b5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810064b9:	eb 46                	jmp    81006501 <__srefill_r+0x139>
810064bb:	8b 43 30             	mov    0x30(%ebx),%eax
810064be:	85 c0                	test   %eax,%eax
810064c0:	74 3f                	je     81006501 <__srefill_r+0x139>
810064c2:	8b 53 30             	mov    0x30(%ebx),%edx
810064c5:	8d 43 40             	lea    0x40(%ebx),%eax
810064c8:	39 c2                	cmp    %eax,%edx
810064ca:	74 12                	je     810064de <__srefill_r+0x116>
810064cc:	8b 43 30             	mov    0x30(%ebx),%eax
810064cf:	83 ec 08             	sub    $0x8,%esp
810064d2:	50                   	push   %eax
810064d3:	ff 75 08             	push   0x8(%ebp)
810064d6:	e8 c7 b9 ff ff       	call   81001ea2 <_free_r>
810064db:	83 c4 10             	add    $0x10,%esp
810064de:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810064e5:	8b 43 3c             	mov    0x3c(%ebx),%eax
810064e8:	89 43 04             	mov    %eax,0x4(%ebx)
810064eb:	8b 43 04             	mov    0x4(%ebx),%eax
810064ee:	85 c0                	test   %eax,%eax
810064f0:	74 0f                	je     81006501 <__srefill_r+0x139>
810064f2:	8b 43 38             	mov    0x38(%ebx),%eax
810064f5:	89 03                	mov    %eax,(%ebx)
810064f7:	b8 00 00 00 00       	mov    $0x0,%eax
810064fc:	e9 c1 00 00 00       	jmp    810065c2 <__srefill_r+0x1fa>
81006501:	8b 43 10             	mov    0x10(%ebx),%eax
81006504:	85 c0                	test   %eax,%eax
81006506:	75 0f                	jne    81006517 <__srefill_r+0x14f>
81006508:	83 ec 08             	sub    $0x8,%esp
8100650b:	53                   	push   %ebx
8100650c:	ff 75 08             	push   0x8(%ebp)
8100650f:	e8 61 d8 ff ff       	call   81003d75 <__smakebuf_r>
81006514:	83 c4 10             	add    $0x10,%esp
81006517:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100651b:	98                   	cwtl   
8100651c:	83 e0 03             	and    $0x3,%eax
8100651f:	85 c0                	test   %eax,%eax
81006521:	74 48                	je     8100656b <__srefill_r+0x1a3>
81006523:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006527:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
8100652b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81006531:	a1 24 89 00 81       	mov    0x81008924,%eax
81006536:	83 ec 08             	sub    $0x8,%esp
81006539:	68 9b 63 00 81       	push   $0x8100639b
8100653e:	50                   	push   %eax
8100653f:	e8 89 c8 ff ff       	call   81002dcd <_fwalk>
81006544:	83 c4 10             	add    $0x10,%esp
81006547:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100654b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100654f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006553:	98                   	cwtl   
81006554:	83 e0 09             	and    $0x9,%eax
81006557:	83 f8 09             	cmp    $0x9,%eax
8100655a:	75 0f                	jne    8100656b <__srefill_r+0x1a3>
8100655c:	83 ec 08             	sub    $0x8,%esp
8100655f:	53                   	push   %ebx
81006560:	ff 75 08             	push   0x8(%ebp)
81006563:	e8 72 ab ff ff       	call   810010da <__sflush_r>
81006568:	83 c4 10             	add    $0x10,%esp
8100656b:	8b 43 10             	mov    0x10(%ebx),%eax
8100656e:	89 03                	mov    %eax,(%ebx)
81006570:	8b 43 20             	mov    0x20(%ebx),%eax
81006573:	8b 73 14             	mov    0x14(%ebx),%esi
81006576:	8b 0b                	mov    (%ebx),%ecx
81006578:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100657b:	56                   	push   %esi
8100657c:	51                   	push   %ecx
8100657d:	52                   	push   %edx
8100657e:	ff 75 08             	push   0x8(%ebp)
81006581:	ff d0                	call   *%eax
81006583:	83 c4 10             	add    $0x10,%esp
81006586:	89 43 04             	mov    %eax,0x4(%ebx)
81006589:	8b 43 04             	mov    0x4(%ebx),%eax
8100658c:	85 c0                	test   %eax,%eax
8100658e:	7f 2d                	jg     810065bd <__srefill_r+0x1f5>
81006590:	8b 43 04             	mov    0x4(%ebx),%eax
81006593:	85 c0                	test   %eax,%eax
81006595:	75 0d                	jne    810065a4 <__srefill_r+0x1dc>
81006597:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100659b:	83 c8 20             	or     $0x20,%eax
8100659e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810065a2:	eb 12                	jmp    810065b6 <__srefill_r+0x1ee>
810065a4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810065ab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810065af:	83 c8 40             	or     $0x40,%eax
810065b2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810065b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810065bb:	eb 05                	jmp    810065c2 <__srefill_r+0x1fa>
810065bd:	b8 00 00 00 00       	mov    $0x0,%eax
810065c2:	8d 65 f8             	lea    -0x8(%ebp),%esp
810065c5:	5b                   	pop    %ebx
810065c6:	5e                   	pop    %esi
810065c7:	5d                   	pop    %ebp
810065c8:	c3                   	ret    

810065c9 <__srget_r>:
810065c9:	55                   	push   %ebp
810065ca:	89 e5                	mov    %esp,%ebp
810065cc:	53                   	push   %ebx
810065cd:	83 ec 14             	sub    $0x14,%esp
810065d0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810065d3:	8b 45 08             	mov    0x8(%ebp),%eax
810065d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810065d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810065dd:	74 18                	je     810065f7 <__srget_r+0x2e>
810065df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065e2:	8b 40 38             	mov    0x38(%eax),%eax
810065e5:	85 c0                	test   %eax,%eax
810065e7:	75 0e                	jne    810065f7 <__srget_r+0x2e>
810065e9:	83 ec 0c             	sub    $0xc,%esp
810065ec:	ff 75 f4             	push   -0xc(%ebp)
810065ef:	e8 f9 b2 ff ff       	call   810018ed <__sinit>
810065f4:	83 c4 10             	add    $0x10,%esp
810065f7:	83 ec 08             	sub    $0x8,%esp
810065fa:	53                   	push   %ebx
810065fb:	ff 75 08             	push   0x8(%ebp)
810065fe:	e8 c5 fd ff ff       	call   810063c8 <__srefill_r>
81006603:	83 c4 10             	add    $0x10,%esp
81006606:	85 c0                	test   %eax,%eax
81006608:	75 18                	jne    81006622 <__srget_r+0x59>
8100660a:	8b 43 04             	mov    0x4(%ebx),%eax
8100660d:	83 e8 01             	sub    $0x1,%eax
81006610:	89 43 04             	mov    %eax,0x4(%ebx)
81006613:	8b 03                	mov    (%ebx),%eax
81006615:	8d 50 01             	lea    0x1(%eax),%edx
81006618:	89 13                	mov    %edx,(%ebx)
8100661a:	0f b6 00             	movzbl (%eax),%eax
8100661d:	0f b6 c0             	movzbl %al,%eax
81006620:	eb 05                	jmp    81006627 <__srget_r+0x5e>
81006622:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006627:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100662a:	c9                   	leave  
8100662b:	c3                   	ret    

8100662c <__srget>:
8100662c:	55                   	push   %ebp
8100662d:	89 e5                	mov    %esp,%ebp
8100662f:	83 ec 08             	sub    $0x8,%esp
81006632:	8b 55 08             	mov    0x8(%ebp),%edx
81006635:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100663a:	83 ec 08             	sub    $0x8,%esp
8100663d:	52                   	push   %edx
8100663e:	50                   	push   %eax
8100663f:	e8 85 ff ff ff       	call   810065c9 <__srget_r>
81006644:	83 c4 10             	add    $0x10,%esp
81006647:	c9                   	leave  
81006648:	c3                   	ret    

81006649 <_sbrk_r>:
81006649:	55                   	push   %ebp
8100664a:	89 e5                	mov    %esp,%ebp
8100664c:	83 ec 18             	sub    $0x18,%esp
8100664f:	c7 05 2c 9c 00 81 00 	movl   $0x0,0x81009c2c
81006656:	00 00 00 
81006659:	83 ec 0c             	sub    $0xc,%esp
8100665c:	ff 75 0c             	push   0xc(%ebp)
8100665f:	e8 65 a7 ff ff       	call   81000dc9 <sbrk>
81006664:	83 c4 10             	add    $0x10,%esp
81006667:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100666a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100666e:	75 14                	jne    81006684 <_sbrk_r+0x3b>
81006670:	a1 2c 9c 00 81       	mov    0x81009c2c,%eax
81006675:	85 c0                	test   %eax,%eax
81006677:	74 0b                	je     81006684 <_sbrk_r+0x3b>
81006679:	8b 15 2c 9c 00 81    	mov    0x81009c2c,%edx
8100667f:	8b 45 08             	mov    0x8(%ebp),%eax
81006682:	89 10                	mov    %edx,(%eax)
81006684:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006687:	c9                   	leave  
81006688:	c3                   	ret    

81006689 <setvbuf>:
81006689:	55                   	push   %ebp
8100668a:	89 e5                	mov    %esp,%ebp
8100668c:	57                   	push   %edi
8100668d:	56                   	push   %esi
8100668e:	53                   	push   %ebx
8100668f:	83 ec 2c             	sub    $0x2c,%esp
81006692:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006695:	8b 7d 10             	mov    0x10(%ebp),%edi
81006698:	8b 75 14             	mov    0x14(%ebp),%esi
8100669b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810066a2:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810066a7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810066aa:	8b 45 e0             	mov    -0x20(%ebp),%eax
810066ad:	89 45 dc             	mov    %eax,-0x24(%ebp)
810066b0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810066b4:	74 18                	je     810066ce <setvbuf+0x45>
810066b6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810066b9:	8b 40 38             	mov    0x38(%eax),%eax
810066bc:	85 c0                	test   %eax,%eax
810066be:	75 0e                	jne    810066ce <setvbuf+0x45>
810066c0:	83 ec 0c             	sub    $0xc,%esp
810066c3:	ff 75 dc             	push   -0x24(%ebp)
810066c6:	e8 22 b2 ff ff       	call   810018ed <__sinit>
810066cb:	83 c4 10             	add    $0x10,%esp
810066ce:	83 ff 02             	cmp    $0x2,%edi
810066d1:	74 19                	je     810066ec <setvbuf+0x63>
810066d3:	85 ff                	test   %edi,%edi
810066d5:	74 05                	je     810066dc <setvbuf+0x53>
810066d7:	83 ff 01             	cmp    $0x1,%edi
810066da:	75 06                	jne    810066e2 <setvbuf+0x59>
810066dc:	89 f0                	mov    %esi,%eax
810066de:	85 c0                	test   %eax,%eax
810066e0:	79 0a                	jns    810066ec <setvbuf+0x63>
810066e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066e7:	e9 a1 01 00 00       	jmp    8100688d <setvbuf+0x204>
810066ec:	83 ec 08             	sub    $0x8,%esp
810066ef:	53                   	push   %ebx
810066f0:	ff 75 e0             	push   -0x20(%ebp)
810066f3:	e8 08 ac ff ff       	call   81001300 <_fflush_r>
810066f8:	83 c4 10             	add    $0x10,%esp
810066fb:	8b 43 30             	mov    0x30(%ebx),%eax
810066fe:	85 c0                	test   %eax,%eax
81006700:	74 23                	je     81006725 <setvbuf+0x9c>
81006702:	8b 53 30             	mov    0x30(%ebx),%edx
81006705:	8d 43 40             	lea    0x40(%ebx),%eax
81006708:	39 c2                	cmp    %eax,%edx
8100670a:	74 12                	je     8100671e <setvbuf+0x95>
8100670c:	8b 43 30             	mov    0x30(%ebx),%eax
8100670f:	83 ec 08             	sub    $0x8,%esp
81006712:	50                   	push   %eax
81006713:	ff 75 e0             	push   -0x20(%ebp)
81006716:	e8 87 b7 ff ff       	call   81001ea2 <_free_r>
8100671b:	83 c4 10             	add    $0x10,%esp
8100671e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81006725:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100672c:	8b 43 18             	mov    0x18(%ebx),%eax
8100672f:	89 43 04             	mov    %eax,0x4(%ebx)
81006732:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006736:	98                   	cwtl   
81006737:	25 80 00 00 00       	and    $0x80,%eax
8100673c:	85 c0                	test   %eax,%eax
8100673e:	74 12                	je     81006752 <setvbuf+0xc9>
81006740:	8b 43 10             	mov    0x10(%ebx),%eax
81006743:	83 ec 08             	sub    $0x8,%esp
81006746:	50                   	push   %eax
81006747:	ff 75 e0             	push   -0x20(%ebp)
8100674a:	e8 53 b7 ff ff       	call   81001ea2 <_free_r>
8100674f:	83 c4 10             	add    $0x10,%esp
81006752:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006756:	66 25 5c f3          	and    $0xf35c,%ax
8100675a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100675e:	83 ff 02             	cmp    $0x2,%edi
81006761:	74 6f                	je     810067d2 <setvbuf+0x149>
81006763:	8d 45 d4             	lea    -0x2c(%ebp),%eax
81006766:	50                   	push   %eax
81006767:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100676a:	50                   	push   %eax
8100676b:	53                   	push   %ebx
8100676c:	ff 75 e0             	push   -0x20(%ebp)
8100676f:	e8 ee d6 ff ff       	call   81003e62 <__swhatbuf_r>
81006774:	83 c4 10             	add    $0x10,%esp
81006777:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100677b:	09 d0                	or     %edx,%eax
8100677d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006781:	85 f6                	test   %esi,%esi
81006783:	75 0a                	jne    8100678f <setvbuf+0x106>
81006785:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
8100678c:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100678f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006793:	75 73                	jne    81006808 <setvbuf+0x17f>
81006795:	83 ec 0c             	sub    $0xc,%esp
81006798:	56                   	push   %esi
81006799:	e8 57 d7 ff ff       	call   81003ef5 <malloc>
8100679e:	83 c4 10             	add    $0x10,%esp
810067a1:	89 45 0c             	mov    %eax,0xc(%ebp)
810067a4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810067a8:	75 20                	jne    810067ca <setvbuf+0x141>
810067aa:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810067b1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810067b4:	39 c6                	cmp    %eax,%esi
810067b6:	74 12                	je     810067ca <setvbuf+0x141>
810067b8:	8b 75 d8             	mov    -0x28(%ebp),%esi
810067bb:	83 ec 0c             	sub    $0xc,%esp
810067be:	56                   	push   %esi
810067bf:	e8 31 d7 ff ff       	call   81003ef5 <malloc>
810067c4:	83 c4 10             	add    $0x10,%esp
810067c7:	89 45 0c             	mov    %eax,0xc(%ebp)
810067ca:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810067ce:	75 2e                	jne    810067fe <setvbuf+0x175>
810067d0:	eb 01                	jmp    810067d3 <setvbuf+0x14a>
810067d2:	90                   	nop
810067d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067d7:	83 c8 02             	or     $0x2,%eax
810067da:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067de:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810067e5:	8d 43 43             	lea    0x43(%ebx),%eax
810067e8:	89 03                	mov    %eax,(%ebx)
810067ea:	8b 03                	mov    (%ebx),%eax
810067ec:	89 43 10             	mov    %eax,0x10(%ebx)
810067ef:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810067f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810067f9:	e9 8f 00 00 00       	jmp    8100688d <setvbuf+0x204>
810067fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006802:	0c 80                	or     $0x80,%al
81006804:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006808:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100680b:	8b 40 38             	mov    0x38(%eax),%eax
8100680e:	85 c0                	test   %eax,%eax
81006810:	75 0e                	jne    81006820 <setvbuf+0x197>
81006812:	83 ec 0c             	sub    $0xc,%esp
81006815:	ff 75 e0             	push   -0x20(%ebp)
81006818:	e8 d0 b0 ff ff       	call   810018ed <__sinit>
8100681d:	83 c4 10             	add    $0x10,%esp
81006820:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006823:	39 c6                	cmp    %eax,%esi
81006825:	74 0b                	je     81006832 <setvbuf+0x1a9>
81006827:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100682b:	80 cc 08             	or     $0x8,%ah
8100682e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006832:	83 ff 01             	cmp    $0x1,%edi
81006835:	75 0b                	jne    81006842 <setvbuf+0x1b9>
81006837:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100683b:	83 c8 01             	or     $0x1,%eax
8100683e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006842:	8b 45 0c             	mov    0xc(%ebp),%eax
81006845:	89 03                	mov    %eax,(%ebx)
81006847:	8b 03                	mov    (%ebx),%eax
81006849:	89 43 10             	mov    %eax,0x10(%ebx)
8100684c:	89 f0                	mov    %esi,%eax
8100684e:	89 43 14             	mov    %eax,0x14(%ebx)
81006851:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006855:	98                   	cwtl   
81006856:	83 e0 08             	and    $0x8,%eax
81006859:	85 c0                	test   %eax,%eax
8100685b:	74 24                	je     81006881 <setvbuf+0x1f8>
8100685d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006861:	98                   	cwtl   
81006862:	83 e0 01             	and    $0x1,%eax
81006865:	85 c0                	test   %eax,%eax
81006867:	74 11                	je     8100687a <setvbuf+0x1f1>
81006869:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006870:	8b 43 14             	mov    0x14(%ebx),%eax
81006873:	f7 d8                	neg    %eax
81006875:	89 43 18             	mov    %eax,0x18(%ebx)
81006878:	eb 0e                	jmp    81006888 <setvbuf+0x1ff>
8100687a:	89 f0                	mov    %esi,%eax
8100687c:	89 43 08             	mov    %eax,0x8(%ebx)
8100687f:	eb 07                	jmp    81006888 <setvbuf+0x1ff>
81006881:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006888:	b8 00 00 00 00       	mov    $0x0,%eax
8100688d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006890:	5b                   	pop    %ebx
81006891:	5e                   	pop    %esi
81006892:	5f                   	pop    %edi
81006893:	5d                   	pop    %ebp
81006894:	c3                   	ret    

81006895 <_siprintf_r>:
81006895:	55                   	push   %ebp
81006896:	89 e5                	mov    %esp,%ebp
81006898:	83 ec 78             	sub    $0x78,%esp
8100689b:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810068a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810068a4:	89 45 88             	mov    %eax,-0x78(%ebp)
810068a7:	8b 45 88             	mov    -0x78(%ebp),%eax
810068aa:	89 45 98             	mov    %eax,-0x68(%ebp)
810068ad:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810068b4:	8b 45 90             	mov    -0x70(%ebp),%eax
810068b7:	89 45 9c             	mov    %eax,-0x64(%ebp)
810068ba:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810068c0:	8d 45 14             	lea    0x14(%ebp),%eax
810068c3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810068c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810068c9:	50                   	push   %eax
810068ca:	ff 75 10             	push   0x10(%ebp)
810068cd:	8d 45 88             	lea    -0x78(%ebp),%eax
810068d0:	50                   	push   %eax
810068d1:	ff 75 08             	push   0x8(%ebp)
810068d4:	e8 99 15 00 00       	call   81007e72 <_svfiprintf_r>
810068d9:	83 c4 10             	add    $0x10,%esp
810068dc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068df:	8b 45 88             	mov    -0x78(%ebp),%eax
810068e2:	c6 00 00             	movb   $0x0,(%eax)
810068e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068e8:	c9                   	leave  
810068e9:	c3                   	ret    

810068ea <siprintf>:
810068ea:	55                   	push   %ebp
810068eb:	89 e5                	mov    %esp,%ebp
810068ed:	83 ec 78             	sub    $0x78,%esp
810068f0:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810068f6:	8b 45 08             	mov    0x8(%ebp),%eax
810068f9:	89 45 88             	mov    %eax,-0x78(%ebp)
810068fc:	8b 45 88             	mov    -0x78(%ebp),%eax
810068ff:	89 45 98             	mov    %eax,-0x68(%ebp)
81006902:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81006909:	8b 45 90             	mov    -0x70(%ebp),%eax
8100690c:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100690f:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
81006915:	8d 45 10             	lea    0x10(%ebp),%eax
81006918:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100691b:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100691e:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81006923:	52                   	push   %edx
81006924:	ff 75 0c             	push   0xc(%ebp)
81006927:	8d 55 88             	lea    -0x78(%ebp),%edx
8100692a:	52                   	push   %edx
8100692b:	50                   	push   %eax
8100692c:	e8 41 15 00 00       	call   81007e72 <_svfiprintf_r>
81006931:	83 c4 10             	add    $0x10,%esp
81006934:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006937:	8b 45 88             	mov    -0x78(%ebp),%eax
8100693a:	c6 00 00             	movb   $0x0,(%eax)
8100693d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006940:	c9                   	leave  
81006941:	c3                   	ret    

81006942 <__sread>:
81006942:	55                   	push   %ebp
81006943:	89 e5                	mov    %esp,%ebp
81006945:	56                   	push   %esi
81006946:	53                   	push   %ebx
81006947:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100694a:	8b 55 14             	mov    0x14(%ebp),%edx
8100694d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81006951:	98                   	cwtl   
81006952:	52                   	push   %edx
81006953:	ff 75 10             	push   0x10(%ebp)
81006956:	50                   	push   %eax
81006957:	ff 75 08             	push   0x8(%ebp)
8100695a:	e8 51 19 00 00       	call   810082b0 <_read_r>
8100695f:	83 c4 10             	add    $0x10,%esp
81006962:	89 c6                	mov    %eax,%esi
81006964:	85 f6                	test   %esi,%esi
81006966:	78 0a                	js     81006972 <__sread+0x30>
81006968:	8b 43 50             	mov    0x50(%ebx),%eax
8100696b:	01 f0                	add    %esi,%eax
8100696d:	89 43 50             	mov    %eax,0x50(%ebx)
81006970:	eb 0b                	jmp    8100697d <__sread+0x3b>
81006972:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006976:	80 e4 ef             	and    $0xef,%ah
81006979:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100697d:	89 f0                	mov    %esi,%eax
8100697f:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006982:	5b                   	pop    %ebx
81006983:	5e                   	pop    %esi
81006984:	5d                   	pop    %ebp
81006985:	c3                   	ret    

81006986 <__seofread>:
81006986:	55                   	push   %ebp
81006987:	89 e5                	mov    %esp,%ebp
81006989:	b8 00 00 00 00       	mov    $0x0,%eax
8100698e:	5d                   	pop    %ebp
8100698f:	c3                   	ret    

81006990 <__swrite>:
81006990:	55                   	push   %ebp
81006991:	89 e5                	mov    %esp,%ebp
81006993:	53                   	push   %ebx
81006994:	83 ec 14             	sub    $0x14,%esp
81006997:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100699a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100699e:	98                   	cwtl   
8100699f:	25 00 01 00 00       	and    $0x100,%eax
810069a4:	85 c0                	test   %eax,%eax
810069a6:	74 15                	je     810069bd <__swrite+0x2d>
810069a8:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810069ac:	98                   	cwtl   
810069ad:	6a 02                	push   $0x2
810069af:	6a 00                	push   $0x0
810069b1:	50                   	push   %eax
810069b2:	ff 75 08             	push   0x8(%ebp)
810069b5:	e8 f3 0f 00 00       	call   810079ad <_lseek_r>
810069ba:	83 c4 10             	add    $0x10,%esp
810069bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069c1:	80 e4 ef             	and    $0xef,%ah
810069c4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069c8:	8b 55 14             	mov    0x14(%ebp),%edx
810069cb:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810069cf:	98                   	cwtl   
810069d0:	52                   	push   %edx
810069d1:	ff 75 10             	push   0x10(%ebp)
810069d4:	50                   	push   %eax
810069d5:	ff 75 08             	push   0x8(%ebp)
810069d8:	e8 9d 07 00 00       	call   8100717a <_write_r>
810069dd:	83 c4 10             	add    $0x10,%esp
810069e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069e6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810069e9:	c9                   	leave  
810069ea:	c3                   	ret    

810069eb <__sseek>:
810069eb:	55                   	push   %ebp
810069ec:	89 e5                	mov    %esp,%ebp
810069ee:	56                   	push   %esi
810069ef:	53                   	push   %ebx
810069f0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810069f3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810069f7:	98                   	cwtl   
810069f8:	ff 75 14             	push   0x14(%ebp)
810069fb:	ff 75 10             	push   0x10(%ebp)
810069fe:	50                   	push   %eax
810069ff:	ff 75 08             	push   0x8(%ebp)
81006a02:	e8 a6 0f 00 00       	call   810079ad <_lseek_r>
81006a07:	83 c4 10             	add    $0x10,%esp
81006a0a:	89 c6                	mov    %eax,%esi
81006a0c:	83 fe ff             	cmp    $0xffffffff,%esi
81006a0f:	75 0d                	jne    81006a1e <__sseek+0x33>
81006a11:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006a15:	80 e4 ef             	and    $0xef,%ah
81006a18:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006a1c:	eb 0e                	jmp    81006a2c <__sseek+0x41>
81006a1e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006a22:	80 cc 10             	or     $0x10,%ah
81006a25:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006a29:	89 73 50             	mov    %esi,0x50(%ebx)
81006a2c:	89 f0                	mov    %esi,%eax
81006a2e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006a31:	5b                   	pop    %ebx
81006a32:	5e                   	pop    %esi
81006a33:	5d                   	pop    %ebp
81006a34:	c3                   	ret    

81006a35 <__sclose>:
81006a35:	55                   	push   %ebp
81006a36:	89 e5                	mov    %esp,%ebp
81006a38:	83 ec 18             	sub    $0x18,%esp
81006a3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a3e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a41:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a44:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81006a48:	98                   	cwtl   
81006a49:	83 ec 08             	sub    $0x8,%esp
81006a4c:	50                   	push   %eax
81006a4d:	ff 75 08             	push   0x8(%ebp)
81006a50:	e8 db 09 00 00       	call   81007430 <_close_r>
81006a55:	83 c4 10             	add    $0x10,%esp
81006a58:	c9                   	leave  
81006a59:	c3                   	ret    
81006a5a:	66 90                	xchg   %ax,%ax
81006a5c:	66 90                	xchg   %ax,%ax
81006a5e:	66 90                	xchg   %ax,%ax

81006a60 <strchr>:
81006a60:	55                   	push   %ebp
81006a61:	89 e5                	mov    %esp,%ebp
81006a63:	57                   	push   %edi
81006a64:	53                   	push   %ebx
81006a65:	31 db                	xor    %ebx,%ebx
81006a67:	8b 7d 08             	mov    0x8(%ebp),%edi
81006a6a:	02 5d 0c             	add    0xc(%ebp),%bl
81006a6d:	0f 84 98 00 00 00    	je     81006b0b <L25>
81006a73:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a79:	74 37                	je     81006ab2 <L5>
81006a7b:	89 f8                	mov    %edi,%eax
81006a7d:	8a 08                	mov    (%eax),%cl
81006a7f:	84 c9                	test   %cl,%cl
81006a81:	74 7b                	je     81006afe <L14>
81006a83:	38 d9                	cmp    %bl,%cl
81006a85:	74 7d                	je     81006b04 <L19>
81006a87:	47                   	inc    %edi
81006a88:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a8e:	74 22                	je     81006ab2 <L5>
81006a90:	89 f8                	mov    %edi,%eax
81006a92:	8a 08                	mov    (%eax),%cl
81006a94:	84 c9                	test   %cl,%cl
81006a96:	74 66                	je     81006afe <L14>
81006a98:	38 d9                	cmp    %bl,%cl
81006a9a:	74 68                	je     81006b04 <L19>
81006a9c:	47                   	inc    %edi
81006a9d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006aa3:	74 0d                	je     81006ab2 <L5>
81006aa5:	89 f8                	mov    %edi,%eax
81006aa7:	8a 08                	mov    (%eax),%cl
81006aa9:	84 c9                	test   %cl,%cl
81006aab:	74 51                	je     81006afe <L14>
81006aad:	38 d9                	cmp    %bl,%cl
81006aaf:	74 53                	je     81006b04 <L19>
81006ab1:	47                   	inc    %edi

81006ab2 <L5>:
81006ab2:	89 d9                	mov    %ebx,%ecx
81006ab4:	c1 e3 08             	shl    $0x8,%ebx
81006ab7:	83 ef 04             	sub    $0x4,%edi
81006aba:	09 cb                	or     %ecx,%ebx
81006abc:	89 da                	mov    %ebx,%edx
81006abe:	c1 e3 10             	shl    $0x10,%ebx
81006ac1:	09 d3                	or     %edx,%ebx

81006ac3 <L10>:
81006ac3:	83 c7 04             	add    $0x4,%edi
81006ac6:	8b 0f                	mov    (%edi),%ecx
81006ac8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006ace:	89 c8                	mov    %ecx,%eax
81006ad0:	f7 d0                	not    %eax
81006ad2:	21 c2                	and    %eax,%edx
81006ad4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006ada:	75 14                	jne    81006af0 <L9>
81006adc:	31 d9                	xor    %ebx,%ecx
81006ade:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006ae4:	f7 d1                	not    %ecx
81006ae6:	21 ca                	and    %ecx,%edx
81006ae8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006aee:	74 d3                	je     81006ac3 <L10>

81006af0 <L9>:
81006af0:	8d 47 ff             	lea    -0x1(%edi),%eax

81006af3 <L15>:
81006af3:	40                   	inc    %eax
81006af4:	8a 10                	mov    (%eax),%dl
81006af6:	84 d2                	test   %dl,%dl
81006af8:	74 04                	je     81006afe <L14>
81006afa:	38 da                	cmp    %bl,%dl
81006afc:	75 f5                	jne    81006af3 <L15>

81006afe <L14>:
81006afe:	38 18                	cmp    %bl,(%eax)
81006b00:	74 02                	je     81006b04 <L19>
81006b02:	31 c0                	xor    %eax,%eax

81006b04 <L19>:
81006b04:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006b07:	5b                   	pop    %ebx
81006b08:	5f                   	pop    %edi
81006b09:	c9                   	leave  
81006b0a:	c3                   	ret    

81006b0b <L25>:
81006b0b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006b11:	74 2b                	je     81006b3e <L26>
81006b13:	89 f8                	mov    %edi,%eax
81006b15:	8a 08                	mov    (%eax),%cl
81006b17:	84 c9                	test   %cl,%cl
81006b19:	74 e9                	je     81006b04 <L19>
81006b1b:	47                   	inc    %edi
81006b1c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006b22:	74 1a                	je     81006b3e <L26>
81006b24:	89 f8                	mov    %edi,%eax
81006b26:	8a 08                	mov    (%eax),%cl
81006b28:	84 c9                	test   %cl,%cl
81006b2a:	74 d8                	je     81006b04 <L19>
81006b2c:	47                   	inc    %edi
81006b2d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006b33:	74 09                	je     81006b3e <L26>
81006b35:	89 f8                	mov    %edi,%eax
81006b37:	8a 08                	mov    (%eax),%cl
81006b39:	84 c9                	test   %cl,%cl
81006b3b:	74 c7                	je     81006b04 <L19>
81006b3d:	47                   	inc    %edi

81006b3e <L26>:
81006b3e:	83 ef 04             	sub    $0x4,%edi

81006b41 <L27>:
81006b41:	83 c7 04             	add    $0x4,%edi
81006b44:	8b 0f                	mov    (%edi),%ecx
81006b46:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006b4c:	89 c8                	mov    %ecx,%eax
81006b4e:	f7 d0                	not    %eax
81006b50:	21 c2                	and    %eax,%edx
81006b52:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006b58:	74 e7                	je     81006b41 <L27>
81006b5a:	eb 94                	jmp    81006af0 <L9>

81006b5c <strcmp>:
81006b5c:	55                   	push   %ebp
81006b5d:	89 e5                	mov    %esp,%ebp
81006b5f:	83 ec 10             	sub    $0x10,%esp
81006b62:	8b 55 08             	mov    0x8(%ebp),%edx
81006b65:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b68:	09 d0                	or     %edx,%eax
81006b6a:	83 e0 03             	and    $0x3,%eax
81006b6d:	85 c0                	test   %eax,%eax
81006b6f:	75 5e                	jne    81006bcf <strcmp+0x73>
81006b71:	8b 45 08             	mov    0x8(%ebp),%eax
81006b74:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006b77:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b7a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81006b7d:	eb 2c                	jmp    81006bab <strcmp+0x4f>
81006b7f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b82:	8b 00                	mov    (%eax),%eax
81006b84:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006b8a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b8d:	8b 00                	mov    (%eax),%eax
81006b8f:	f7 d0                	not    %eax
81006b91:	21 d0                	and    %edx,%eax
81006b93:	25 80 80 80 80       	and    $0x80808080,%eax
81006b98:	85 c0                	test   %eax,%eax
81006b9a:	74 07                	je     81006ba3 <strcmp+0x47>
81006b9c:	b8 00 00 00 00       	mov    $0x0,%eax
81006ba1:	eb 5c                	jmp    81006bff <strcmp+0xa3>
81006ba3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006ba7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006bab:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006bae:	8b 10                	mov    (%eax),%edx
81006bb0:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006bb3:	8b 00                	mov    (%eax),%eax
81006bb5:	39 c2                	cmp    %eax,%edx
81006bb7:	74 c6                	je     81006b7f <strcmp+0x23>
81006bb9:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006bbc:	89 45 08             	mov    %eax,0x8(%ebp)
81006bbf:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006bc2:	89 45 0c             	mov    %eax,0xc(%ebp)
81006bc5:	eb 08                	jmp    81006bcf <strcmp+0x73>
81006bc7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006bcb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006bcf:	8b 45 08             	mov    0x8(%ebp),%eax
81006bd2:	0f b6 00             	movzbl (%eax),%eax
81006bd5:	84 c0                	test   %al,%al
81006bd7:	74 10                	je     81006be9 <strcmp+0x8d>
81006bd9:	8b 45 08             	mov    0x8(%ebp),%eax
81006bdc:	0f b6 10             	movzbl (%eax),%edx
81006bdf:	8b 45 0c             	mov    0xc(%ebp),%eax
81006be2:	0f b6 00             	movzbl (%eax),%eax
81006be5:	38 c2                	cmp    %al,%dl
81006be7:	74 de                	je     81006bc7 <strcmp+0x6b>
81006be9:	8b 45 08             	mov    0x8(%ebp),%eax
81006bec:	0f b6 00             	movzbl (%eax),%eax
81006bef:	0f b6 d0             	movzbl %al,%edx
81006bf2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006bf5:	0f b6 00             	movzbl (%eax),%eax
81006bf8:	0f b6 c8             	movzbl %al,%ecx
81006bfb:	89 d0                	mov    %edx,%eax
81006bfd:	29 c8                	sub    %ecx,%eax
81006bff:	c9                   	leave  
81006c00:	c3                   	ret    
81006c01:	66 90                	xchg   %ax,%ax
81006c03:	66 90                	xchg   %ax,%ax
81006c05:	66 90                	xchg   %ax,%ax
81006c07:	66 90                	xchg   %ax,%ax
81006c09:	66 90                	xchg   %ax,%ax
81006c0b:	66 90                	xchg   %ax,%ax
81006c0d:	66 90                	xchg   %ax,%ax
81006c0f:	90                   	nop

81006c10 <strlen>:
81006c10:	55                   	push   %ebp
81006c11:	89 e5                	mov    %esp,%ebp
81006c13:	57                   	push   %edi
81006c14:	8b 55 08             	mov    0x8(%ebp),%edx
81006c17:	89 d7                	mov    %edx,%edi
81006c19:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006c1f:	74 25                	je     81006c46 <L5>
81006c21:	8a 0f                	mov    (%edi),%cl
81006c23:	47                   	inc    %edi
81006c24:	84 c9                	test   %cl,%cl
81006c26:	74 56                	je     81006c7e <L15>
81006c28:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006c2e:	74 16                	je     81006c46 <L5>
81006c30:	8a 0f                	mov    (%edi),%cl
81006c32:	47                   	inc    %edi
81006c33:	84 c9                	test   %cl,%cl
81006c35:	74 47                	je     81006c7e <L15>
81006c37:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006c3d:	74 07                	je     81006c46 <L5>
81006c3f:	8a 0f                	mov    (%edi),%cl
81006c41:	47                   	inc    %edi
81006c42:	84 c9                	test   %cl,%cl
81006c44:	74 38                	je     81006c7e <L15>

81006c46 <L5>:
81006c46:	83 ef 04             	sub    $0x4,%edi
81006c49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81006c50 <L10>:
81006c50:	83 c7 04             	add    $0x4,%edi
81006c53:	8b 0f                	mov    (%edi),%ecx
81006c55:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81006c5b:	f7 d1                	not    %ecx
81006c5d:	21 c8                	and    %ecx,%eax
81006c5f:	a9 80 80 80 80       	test   $0x80808080,%eax
81006c64:	74 ea                	je     81006c50 <L10>
81006c66:	f7 d1                	not    %ecx
81006c68:	47                   	inc    %edi
81006c69:	84 c9                	test   %cl,%cl
81006c6b:	74 11                	je     81006c7e <L15>
81006c6d:	47                   	inc    %edi
81006c6e:	c1 e9 08             	shr    $0x8,%ecx
81006c71:	84 c9                	test   %cl,%cl
81006c73:	74 09                	je     81006c7e <L15>
81006c75:	47                   	inc    %edi
81006c76:	c1 e9 08             	shr    $0x8,%ecx
81006c79:	84 c9                	test   %cl,%cl
81006c7b:	74 01                	je     81006c7e <L15>
81006c7d:	47                   	inc    %edi

81006c7e <L15>:
81006c7e:	29 d7                	sub    %edx,%edi
81006c80:	8d 47 ff             	lea    -0x1(%edi),%eax
81006c83:	8d 65 fc             	lea    -0x4(%ebp),%esp
81006c86:	5f                   	pop    %edi
81006c87:	c9                   	leave  
81006c88:	c3                   	ret    

81006c89 <strlwr>:
81006c89:	55                   	push   %ebp
81006c8a:	89 e5                	mov    %esp,%ebp
81006c8c:	83 ec 10             	sub    $0x10,%esp
81006c8f:	8b 45 08             	mov    0x8(%ebp),%eax
81006c92:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006c95:	eb 3b                	jmp    81006cd2 <strlwr+0x49>
81006c97:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006c9a:	0f b6 00             	movzbl (%eax),%eax
81006c9d:	88 45 fb             	mov    %al,-0x5(%ebp)
81006ca0:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006ca4:	83 c0 01             	add    $0x1,%eax
81006ca7:	05 80 8b 00 81       	add    $0x81008b80,%eax
81006cac:	0f b6 00             	movzbl (%eax),%eax
81006caf:	0f be c0             	movsbl %al,%eax
81006cb2:	83 e0 03             	and    $0x3,%eax
81006cb5:	83 f8 01             	cmp    $0x1,%eax
81006cb8:	75 09                	jne    81006cc3 <strlwr+0x3a>
81006cba:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006cbe:	83 c0 20             	add    $0x20,%eax
81006cc1:	eb 04                	jmp    81006cc7 <strlwr+0x3e>
81006cc3:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006cc7:	89 c2                	mov    %eax,%edx
81006cc9:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006ccc:	88 10                	mov    %dl,(%eax)
81006cce:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81006cd2:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006cd5:	0f b6 00             	movzbl (%eax),%eax
81006cd8:	84 c0                	test   %al,%al
81006cda:	75 bb                	jne    81006c97 <strlwr+0xe>
81006cdc:	8b 45 08             	mov    0x8(%ebp),%eax
81006cdf:	c9                   	leave  
81006ce0:	c3                   	ret    

81006ce1 <strtok>:
81006ce1:	55                   	push   %ebp
81006ce2:	89 e5                	mov    %esp,%ebp
81006ce4:	83 ec 18             	sub    $0x18,%esp
81006ce7:	8b 55 08             	mov    0x8(%ebp),%edx
81006cea:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006ced:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81006cf2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006cf5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cf8:	83 c0 5c             	add    $0x5c,%eax
81006cfb:	6a 01                	push   $0x1
81006cfd:	50                   	push   %eax
81006cfe:	51                   	push   %ecx
81006cff:	52                   	push   %edx
81006d00:	e8 05 00 00 00       	call   81006d0a <__strtok_r>
81006d05:	83 c4 10             	add    $0x10,%esp
81006d08:	c9                   	leave  
81006d09:	c3                   	ret    

81006d0a <__strtok_r>:
81006d0a:	55                   	push   %ebp
81006d0b:	89 e5                	mov    %esp,%ebp
81006d0d:	57                   	push   %edi
81006d0e:	56                   	push   %esi
81006d0f:	53                   	push   %ebx
81006d10:	83 ec 10             	sub    $0x10,%esp
81006d13:	8b 45 08             	mov    0x8(%ebp),%eax
81006d16:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006d19:	85 c0                	test   %eax,%eax
81006d1b:	75 13                	jne    81006d30 <__strtok_r+0x26>
81006d1d:	8b 45 10             	mov    0x10(%ebp),%eax
81006d20:	8b 00                	mov    (%eax),%eax
81006d22:	85 c0                	test   %eax,%eax
81006d24:	75 0a                	jne    81006d30 <__strtok_r+0x26>
81006d26:	b8 00 00 00 00       	mov    $0x0,%eax
81006d2b:	e9 92 00 00 00       	jmp    81006dc2 <__strtok_r+0xb8>
81006d30:	90                   	nop
81006d31:	89 c2                	mov    %eax,%edx
81006d33:	8d 42 01             	lea    0x1(%edx),%eax
81006d36:	0f b6 12             	movzbl (%edx),%edx
81006d39:	0f be f2             	movsbl %dl,%esi
81006d3c:	89 cf                	mov    %ecx,%edi
81006d3e:	eb 1c                	jmp    81006d5c <__strtok_r+0x52>
81006d40:	39 de                	cmp    %ebx,%esi
81006d42:	75 18                	jne    81006d5c <__strtok_r+0x52>
81006d44:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006d48:	74 02                	je     81006d4c <__strtok_r+0x42>
81006d4a:	eb e5                	jmp    81006d31 <__strtok_r+0x27>
81006d4c:	8b 55 10             	mov    0x10(%ebp),%edx
81006d4f:	89 02                	mov    %eax,(%edx)
81006d51:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d54:	c6 02 00             	movb   $0x0,(%edx)
81006d57:	83 e8 01             	sub    $0x1,%eax
81006d5a:	eb 66                	jmp    81006dc2 <__strtok_r+0xb8>
81006d5c:	89 fa                	mov    %edi,%edx
81006d5e:	8d 7a 01             	lea    0x1(%edx),%edi
81006d61:	0f b6 12             	movzbl (%edx),%edx
81006d64:	0f be da             	movsbl %dl,%ebx
81006d67:	85 db                	test   %ebx,%ebx
81006d69:	75 d5                	jne    81006d40 <__strtok_r+0x36>
81006d6b:	85 f6                	test   %esi,%esi
81006d6d:	75 10                	jne    81006d7f <__strtok_r+0x75>
81006d6f:	8b 45 10             	mov    0x10(%ebp),%eax
81006d72:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006d78:	b8 00 00 00 00       	mov    $0x0,%eax
81006d7d:	eb 43                	jmp    81006dc2 <__strtok_r+0xb8>
81006d7f:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d82:	89 55 f0             	mov    %edx,-0x10(%ebp)
81006d85:	89 c2                	mov    %eax,%edx
81006d87:	8d 42 01             	lea    0x1(%edx),%eax
81006d8a:	0f b6 12             	movzbl (%edx),%edx
81006d8d:	0f be f2             	movsbl %dl,%esi
81006d90:	89 cf                	mov    %ecx,%edi
81006d92:	89 fa                	mov    %edi,%edx
81006d94:	8d 7a 01             	lea    0x1(%edx),%edi
81006d97:	0f b6 12             	movzbl (%edx),%edx
81006d9a:	0f be da             	movsbl %dl,%ebx
81006d9d:	39 f3                	cmp    %esi,%ebx
81006d9f:	75 1b                	jne    81006dbc <__strtok_r+0xb2>
81006da1:	85 f6                	test   %esi,%esi
81006da3:	75 07                	jne    81006dac <__strtok_r+0xa2>
81006da5:	b8 00 00 00 00       	mov    $0x0,%eax
81006daa:	eb 06                	jmp    81006db2 <__strtok_r+0xa8>
81006dac:	8d 50 ff             	lea    -0x1(%eax),%edx
81006daf:	c6 02 00             	movb   $0x0,(%edx)
81006db2:	8b 55 10             	mov    0x10(%ebp),%edx
81006db5:	89 02                	mov    %eax,(%edx)
81006db7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006dba:	eb 06                	jmp    81006dc2 <__strtok_r+0xb8>
81006dbc:	85 db                	test   %ebx,%ebx
81006dbe:	75 d2                	jne    81006d92 <__strtok_r+0x88>
81006dc0:	eb c3                	jmp    81006d85 <__strtok_r+0x7b>
81006dc2:	83 c4 10             	add    $0x10,%esp
81006dc5:	5b                   	pop    %ebx
81006dc6:	5e                   	pop    %esi
81006dc7:	5f                   	pop    %edi
81006dc8:	5d                   	pop    %ebp
81006dc9:	c3                   	ret    

81006dca <strtok_r>:
81006dca:	55                   	push   %ebp
81006dcb:	89 e5                	mov    %esp,%ebp
81006dcd:	8b 45 08             	mov    0x8(%ebp),%eax
81006dd0:	8b 55 0c             	mov    0xc(%ebp),%edx
81006dd3:	6a 01                	push   $0x1
81006dd5:	ff 75 10             	push   0x10(%ebp)
81006dd8:	52                   	push   %edx
81006dd9:	50                   	push   %eax
81006dda:	e8 2b ff ff ff       	call   81006d0a <__strtok_r>
81006ddf:	83 c4 10             	add    $0x10,%esp
81006de2:	c9                   	leave  
81006de3:	c3                   	ret    

81006de4 <__locale_ctype_ptr_l>:
81006de4:	55                   	push   %ebp
81006de5:	89 e5                	mov    %esp,%ebp
81006de7:	b8 80 8b 00 81       	mov    $0x81008b80,%eax
81006dec:	5d                   	pop    %ebp
81006ded:	c3                   	ret    

81006dee <__get_global_locale>:
81006dee:	55                   	push   %ebp
81006def:	89 e5                	mov    %esp,%ebp
81006df1:	b8 20 95 00 81       	mov    $0x81009520,%eax
81006df6:	5d                   	pop    %ebp
81006df7:	c3                   	ret    

81006df8 <__get_current_locale>:
81006df8:	55                   	push   %ebp
81006df9:	89 e5                	mov    %esp,%ebp
81006dfb:	e8 ee ff ff ff       	call   81006dee <__get_global_locale>
81006e00:	5d                   	pop    %ebp
81006e01:	c3                   	ret    

81006e02 <_strtol_l>:
81006e02:	55                   	push   %ebp
81006e03:	89 e5                	mov    %esp,%ebp
81006e05:	57                   	push   %edi
81006e06:	56                   	push   %esi
81006e07:	53                   	push   %ebx
81006e08:	83 ec 1c             	sub    $0x1c,%esp
81006e0b:	8b 75 0c             	mov    0xc(%ebp),%esi
81006e0e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006e15:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006e19:	78 0c                	js     81006e27 <_strtol_l+0x25>
81006e1b:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81006e1f:	74 06                	je     81006e27 <_strtol_l+0x25>
81006e21:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81006e25:	7e 15                	jle    81006e3c <_strtol_l+0x3a>
81006e27:	e8 44 06 00 00       	call   81007470 <__errno>
81006e2c:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006e32:	b8 00 00 00 00       	mov    $0x0,%eax
81006e37:	e9 90 01 00 00       	jmp    81006fcc <_strtol_l+0x1ca>
81006e3c:	89 f0                	mov    %esi,%eax
81006e3e:	8d 70 01             	lea    0x1(%eax),%esi
81006e41:	0f b6 00             	movzbl (%eax),%eax
81006e44:	0f b6 d8             	movzbl %al,%ebx
81006e47:	83 ec 0c             	sub    $0xc,%esp
81006e4a:	ff 75 18             	push   0x18(%ebp)
81006e4d:	e8 92 ff ff ff       	call   81006de4 <__locale_ctype_ptr_l>
81006e52:	83 c4 10             	add    $0x10,%esp
81006e55:	89 da                	mov    %ebx,%edx
81006e57:	83 c2 01             	add    $0x1,%edx
81006e5a:	01 d0                	add    %edx,%eax
81006e5c:	0f b6 00             	movzbl (%eax),%eax
81006e5f:	0f be c0             	movsbl %al,%eax
81006e62:	83 e0 08             	and    $0x8,%eax
81006e65:	85 c0                	test   %eax,%eax
81006e67:	75 d3                	jne    81006e3c <_strtol_l+0x3a>
81006e69:	83 fb 2d             	cmp    $0x2d,%ebx
81006e6c:	75 14                	jne    81006e82 <_strtol_l+0x80>
81006e6e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006e75:	89 f0                	mov    %esi,%eax
81006e77:	8d 70 01             	lea    0x1(%eax),%esi
81006e7a:	0f b6 00             	movzbl (%eax),%eax
81006e7d:	0f b6 d8             	movzbl %al,%ebx
81006e80:	eb 10                	jmp    81006e92 <_strtol_l+0x90>
81006e82:	83 fb 2b             	cmp    $0x2b,%ebx
81006e85:	75 0b                	jne    81006e92 <_strtol_l+0x90>
81006e87:	89 f0                	mov    %esi,%eax
81006e89:	8d 70 01             	lea    0x1(%eax),%esi
81006e8c:	0f b6 00             	movzbl (%eax),%eax
81006e8f:	0f b6 d8             	movzbl %al,%ebx
81006e92:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006e96:	74 06                	je     81006e9e <_strtol_l+0x9c>
81006e98:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81006e9c:	75 26                	jne    81006ec4 <_strtol_l+0xc2>
81006e9e:	83 fb 30             	cmp    $0x30,%ebx
81006ea1:	75 21                	jne    81006ec4 <_strtol_l+0xc2>
81006ea3:	0f b6 06             	movzbl (%esi),%eax
81006ea6:	3c 78                	cmp    $0x78,%al
81006ea8:	74 07                	je     81006eb1 <_strtol_l+0xaf>
81006eaa:	0f b6 06             	movzbl (%esi),%eax
81006ead:	3c 58                	cmp    $0x58,%al
81006eaf:	75 13                	jne    81006ec4 <_strtol_l+0xc2>
81006eb1:	8d 46 01             	lea    0x1(%esi),%eax
81006eb4:	0f b6 00             	movzbl (%eax),%eax
81006eb7:	0f b6 d8             	movzbl %al,%ebx
81006eba:	83 c6 02             	add    $0x2,%esi
81006ebd:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81006ec4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006ec8:	75 14                	jne    81006ede <_strtol_l+0xdc>
81006eca:	83 fb 30             	cmp    $0x30,%ebx
81006ecd:	75 07                	jne    81006ed6 <_strtol_l+0xd4>
81006ecf:	b8 08 00 00 00       	mov    $0x8,%eax
81006ed4:	eb 05                	jmp    81006edb <_strtol_l+0xd9>
81006ed6:	b8 0a 00 00 00       	mov    $0xa,%eax
81006edb:	89 45 14             	mov    %eax,0x14(%ebp)
81006ede:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006ee2:	74 07                	je     81006eeb <_strtol_l+0xe9>
81006ee4:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006ee9:	eb 05                	jmp    81006ef0 <_strtol_l+0xee>
81006eeb:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006ef0:	89 c7                	mov    %eax,%edi
81006ef2:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006ef5:	89 f8                	mov    %edi,%eax
81006ef7:	ba 00 00 00 00       	mov    $0x0,%edx
81006efc:	f7 f1                	div    %ecx
81006efe:	89 d0                	mov    %edx,%eax
81006f00:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006f03:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006f06:	89 f8                	mov    %edi,%eax
81006f08:	ba 00 00 00 00       	mov    $0x0,%edx
81006f0d:	f7 f1                	div    %ecx
81006f0f:	89 c2                	mov    %eax,%edx
81006f11:	bf 00 00 00 00       	mov    $0x0,%edi
81006f16:	b9 00 00 00 00       	mov    $0x0,%ecx
81006f1b:	83 fb 2f             	cmp    $0x2f,%ebx
81006f1e:	7e 0a                	jle    81006f2a <_strtol_l+0x128>
81006f20:	83 fb 39             	cmp    $0x39,%ebx
81006f23:	7f 05                	jg     81006f2a <_strtol_l+0x128>
81006f25:	83 eb 30             	sub    $0x30,%ebx
81006f28:	eb 1c                	jmp    81006f46 <_strtol_l+0x144>
81006f2a:	83 fb 40             	cmp    $0x40,%ebx
81006f2d:	7e 0a                	jle    81006f39 <_strtol_l+0x137>
81006f2f:	83 fb 5a             	cmp    $0x5a,%ebx
81006f32:	7f 05                	jg     81006f39 <_strtol_l+0x137>
81006f34:	83 eb 37             	sub    $0x37,%ebx
81006f37:	eb 0d                	jmp    81006f46 <_strtol_l+0x144>
81006f39:	83 fb 60             	cmp    $0x60,%ebx
81006f3c:	7e 46                	jle    81006f84 <_strtol_l+0x182>
81006f3e:	83 fb 7a             	cmp    $0x7a,%ebx
81006f41:	7f 41                	jg     81006f84 <_strtol_l+0x182>
81006f43:	83 eb 57             	sub    $0x57,%ebx
81006f46:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81006f49:	7d 38                	jge    81006f83 <_strtol_l+0x181>
81006f4b:	89 c8                	mov    %ecx,%eax
81006f4d:	85 c0                	test   %eax,%eax
81006f4f:	78 0f                	js     81006f60 <_strtol_l+0x15e>
81006f51:	89 d0                	mov    %edx,%eax
81006f53:	39 c7                	cmp    %eax,%edi
81006f55:	77 09                	ja     81006f60 <_strtol_l+0x15e>
81006f57:	39 c7                	cmp    %eax,%edi
81006f59:	75 0c                	jne    81006f67 <_strtol_l+0x165>
81006f5b:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81006f5e:	7e 07                	jle    81006f67 <_strtol_l+0x165>
81006f60:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81006f65:	eb 0f                	jmp    81006f76 <_strtol_l+0x174>
81006f67:	b9 01 00 00 00       	mov    $0x1,%ecx
81006f6c:	8b 45 14             	mov    0x14(%ebp),%eax
81006f6f:	0f af f8             	imul   %eax,%edi
81006f72:	89 d8                	mov    %ebx,%eax
81006f74:	01 c7                	add    %eax,%edi
81006f76:	89 f0                	mov    %esi,%eax
81006f78:	8d 70 01             	lea    0x1(%eax),%esi
81006f7b:	0f b6 00             	movzbl (%eax),%eax
81006f7e:	0f b6 d8             	movzbl %al,%ebx
81006f81:	eb 98                	jmp    81006f1b <_strtol_l+0x119>
81006f83:	90                   	nop
81006f84:	89 c8                	mov    %ecx,%eax
81006f86:	85 c0                	test   %eax,%eax
81006f88:	79 1f                	jns    81006fa9 <_strtol_l+0x1a7>
81006f8a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006f8e:	74 07                	je     81006f97 <_strtol_l+0x195>
81006f90:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006f95:	eb 05                	jmp    81006f9c <_strtol_l+0x19a>
81006f97:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006f9c:	89 c7                	mov    %eax,%edi
81006f9e:	8b 45 08             	mov    0x8(%ebp),%eax
81006fa1:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81006fa7:	eb 08                	jmp    81006fb1 <_strtol_l+0x1af>
81006fa9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006fad:	74 02                	je     81006fb1 <_strtol_l+0x1af>
81006faf:	f7 df                	neg    %edi
81006fb1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006fb5:	74 13                	je     81006fca <_strtol_l+0x1c8>
81006fb7:	89 c8                	mov    %ecx,%eax
81006fb9:	85 c0                	test   %eax,%eax
81006fbb:	74 05                	je     81006fc2 <_strtol_l+0x1c0>
81006fbd:	8d 46 ff             	lea    -0x1(%esi),%eax
81006fc0:	eb 03                	jmp    81006fc5 <_strtol_l+0x1c3>
81006fc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006fc5:	8b 55 10             	mov    0x10(%ebp),%edx
81006fc8:	89 02                	mov    %eax,(%edx)
81006fca:	89 f8                	mov    %edi,%eax
81006fcc:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006fcf:	5b                   	pop    %ebx
81006fd0:	5e                   	pop    %esi
81006fd1:	5f                   	pop    %edi
81006fd2:	5d                   	pop    %ebp
81006fd3:	c3                   	ret    

81006fd4 <_strtol_r>:
81006fd4:	55                   	push   %ebp
81006fd5:	89 e5                	mov    %esp,%ebp
81006fd7:	83 ec 08             	sub    $0x8,%esp
81006fda:	e8 19 fe ff ff       	call   81006df8 <__get_current_locale>
81006fdf:	83 ec 0c             	sub    $0xc,%esp
81006fe2:	50                   	push   %eax
81006fe3:	ff 75 14             	push   0x14(%ebp)
81006fe6:	ff 75 10             	push   0x10(%ebp)
81006fe9:	ff 75 0c             	push   0xc(%ebp)
81006fec:	ff 75 08             	push   0x8(%ebp)
81006fef:	e8 0e fe ff ff       	call   81006e02 <_strtol_l>
81006ff4:	83 c4 20             	add    $0x20,%esp
81006ff7:	c9                   	leave  
81006ff8:	c3                   	ret    

81006ff9 <strtol_l>:
81006ff9:	55                   	push   %ebp
81006ffa:	89 e5                	mov    %esp,%ebp
81006ffc:	83 ec 08             	sub    $0x8,%esp
81006fff:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81007004:	83 ec 0c             	sub    $0xc,%esp
81007007:	ff 75 14             	push   0x14(%ebp)
8100700a:	ff 75 10             	push   0x10(%ebp)
8100700d:	ff 75 0c             	push   0xc(%ebp)
81007010:	ff 75 08             	push   0x8(%ebp)
81007013:	50                   	push   %eax
81007014:	e8 e9 fd ff ff       	call   81006e02 <_strtol_l>
81007019:	83 c4 20             	add    $0x20,%esp
8100701c:	c9                   	leave  
8100701d:	c3                   	ret    

8100701e <strtol>:
8100701e:	55                   	push   %ebp
8100701f:	89 e5                	mov    %esp,%ebp
81007021:	83 ec 08             	sub    $0x8,%esp
81007024:	e8 cf fd ff ff       	call   81006df8 <__get_current_locale>
81007029:	8b 15 e4 90 00 81    	mov    0x810090e4,%edx
8100702f:	83 ec 0c             	sub    $0xc,%esp
81007032:	50                   	push   %eax
81007033:	ff 75 10             	push   0x10(%ebp)
81007036:	ff 75 0c             	push   0xc(%ebp)
81007039:	ff 75 08             	push   0x8(%ebp)
8100703c:	52                   	push   %edx
8100703d:	e8 c0 fd ff ff       	call   81006e02 <_strtol_l>
81007042:	83 c4 20             	add    $0x20,%esp
81007045:	c9                   	leave  
81007046:	c3                   	ret    

81007047 <__swbuf_r>:
81007047:	55                   	push   %ebp
81007048:	89 e5                	mov    %esp,%ebp
8100704a:	57                   	push   %edi
8100704b:	56                   	push   %esi
8100704c:	53                   	push   %ebx
8100704d:	83 ec 1c             	sub    $0x1c,%esp
81007050:	8b 7d 0c             	mov    0xc(%ebp),%edi
81007053:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007056:	8b 45 08             	mov    0x8(%ebp),%eax
81007059:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100705c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007060:	74 18                	je     8100707a <__swbuf_r+0x33>
81007062:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007065:	8b 40 38             	mov    0x38(%eax),%eax
81007068:	85 c0                	test   %eax,%eax
8100706a:	75 0e                	jne    8100707a <__swbuf_r+0x33>
8100706c:	83 ec 0c             	sub    $0xc,%esp
8100706f:	ff 75 e4             	push   -0x1c(%ebp)
81007072:	e8 76 a8 ff ff       	call   810018ed <__sinit>
81007077:	83 c4 10             	add    $0x10,%esp
8100707a:	8b 43 18             	mov    0x18(%ebx),%eax
8100707d:	89 43 08             	mov    %eax,0x8(%ebx)
81007080:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007084:	98                   	cwtl   
81007085:	83 e0 08             	and    $0x8,%eax
81007088:	85 c0                	test   %eax,%eax
8100708a:	74 07                	je     81007093 <__swbuf_r+0x4c>
8100708c:	8b 43 10             	mov    0x10(%ebx),%eax
8100708f:	85 c0                	test   %eax,%eax
81007091:	75 1d                	jne    810070b0 <__swbuf_r+0x69>
81007093:	83 ec 08             	sub    $0x8,%esp
81007096:	53                   	push   %ebx
81007097:	ff 75 08             	push   0x8(%ebp)
8100709a:	e8 21 01 00 00       	call   810071c0 <__swsetup_r>
8100709f:	83 c4 10             	add    $0x10,%esp
810070a2:	85 c0                	test   %eax,%eax
810070a4:	74 0a                	je     810070b0 <__swbuf_r+0x69>
810070a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810070ab:	e9 a1 00 00 00       	jmp    81007151 <__swbuf_r+0x10a>
810070b0:	89 f8                	mov    %edi,%eax
810070b2:	0f b6 f8             	movzbl %al,%edi
810070b5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070b9:	98                   	cwtl   
810070ba:	25 00 20 00 00       	and    $0x2000,%eax
810070bf:	85 c0                	test   %eax,%eax
810070c1:	75 14                	jne    810070d7 <__swbuf_r+0x90>
810070c3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070c7:	80 cc 20             	or     $0x20,%ah
810070ca:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810070ce:	8b 43 64             	mov    0x64(%ebx),%eax
810070d1:	80 e4 df             	and    $0xdf,%ah
810070d4:	89 43 64             	mov    %eax,0x64(%ebx)
810070d7:	8b 03                	mov    (%ebx),%eax
810070d9:	8b 53 10             	mov    0x10(%ebx),%edx
810070dc:	29 d0                	sub    %edx,%eax
810070de:	89 c6                	mov    %eax,%esi
810070e0:	8b 43 14             	mov    0x14(%ebx),%eax
810070e3:	39 c6                	cmp    %eax,%esi
810070e5:	7c 1f                	jl     81007106 <__swbuf_r+0xbf>
810070e7:	83 ec 08             	sub    $0x8,%esp
810070ea:	53                   	push   %ebx
810070eb:	ff 75 08             	push   0x8(%ebp)
810070ee:	e8 0d a2 ff ff       	call   81001300 <_fflush_r>
810070f3:	83 c4 10             	add    $0x10,%esp
810070f6:	85 c0                	test   %eax,%eax
810070f8:	74 07                	je     81007101 <__swbuf_r+0xba>
810070fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810070ff:	eb 50                	jmp    81007151 <__swbuf_r+0x10a>
81007101:	be 00 00 00 00       	mov    $0x0,%esi
81007106:	8b 43 08             	mov    0x8(%ebx),%eax
81007109:	83 e8 01             	sub    $0x1,%eax
8100710c:	89 43 08             	mov    %eax,0x8(%ebx)
8100710f:	8b 03                	mov    (%ebx),%eax
81007111:	8d 50 01             	lea    0x1(%eax),%edx
81007114:	89 13                	mov    %edx,(%ebx)
81007116:	89 fa                	mov    %edi,%edx
81007118:	88 10                	mov    %dl,(%eax)
8100711a:	83 c6 01             	add    $0x1,%esi
8100711d:	8b 43 14             	mov    0x14(%ebx),%eax
81007120:	39 c6                	cmp    %eax,%esi
81007122:	74 11                	je     81007135 <__swbuf_r+0xee>
81007124:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007128:	98                   	cwtl   
81007129:	83 e0 01             	and    $0x1,%eax
8100712c:	85 c0                	test   %eax,%eax
8100712e:	74 1f                	je     8100714f <__swbuf_r+0x108>
81007130:	83 ff 0a             	cmp    $0xa,%edi
81007133:	75 1a                	jne    8100714f <__swbuf_r+0x108>
81007135:	83 ec 08             	sub    $0x8,%esp
81007138:	53                   	push   %ebx
81007139:	ff 75 08             	push   0x8(%ebp)
8100713c:	e8 bf a1 ff ff       	call   81001300 <_fflush_r>
81007141:	83 c4 10             	add    $0x10,%esp
81007144:	85 c0                	test   %eax,%eax
81007146:	74 07                	je     8100714f <__swbuf_r+0x108>
81007148:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100714d:	eb 02                	jmp    81007151 <__swbuf_r+0x10a>
8100714f:	89 f8                	mov    %edi,%eax
81007151:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007154:	5b                   	pop    %ebx
81007155:	5e                   	pop    %esi
81007156:	5f                   	pop    %edi
81007157:	5d                   	pop    %ebp
81007158:	c3                   	ret    

81007159 <__swbuf>:
81007159:	55                   	push   %ebp
8100715a:	89 e5                	mov    %esp,%ebp
8100715c:	83 ec 08             	sub    $0x8,%esp
8100715f:	8b 55 08             	mov    0x8(%ebp),%edx
81007162:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81007165:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100716a:	83 ec 04             	sub    $0x4,%esp
8100716d:	51                   	push   %ecx
8100716e:	52                   	push   %edx
8100716f:	50                   	push   %eax
81007170:	e8 d2 fe ff ff       	call   81007047 <__swbuf_r>
81007175:	83 c4 10             	add    $0x10,%esp
81007178:	c9                   	leave  
81007179:	c3                   	ret    

8100717a <_write_r>:
8100717a:	55                   	push   %ebp
8100717b:	89 e5                	mov    %esp,%ebp
8100717d:	83 ec 18             	sub    $0x18,%esp
81007180:	c7 05 2c 9c 00 81 00 	movl   $0x0,0x81009c2c
81007187:	00 00 00 
8100718a:	83 ec 04             	sub    $0x4,%esp
8100718d:	ff 75 14             	push   0x14(%ebp)
81007190:	ff 75 10             	push   0x10(%ebp)
81007193:	ff 75 0c             	push   0xc(%ebp)
81007196:	e8 6b 9b ff ff       	call   81000d06 <write>
8100719b:	83 c4 10             	add    $0x10,%esp
8100719e:	89 45 f4             	mov    %eax,-0xc(%ebp)
810071a1:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810071a5:	75 14                	jne    810071bb <_write_r+0x41>
810071a7:	a1 2c 9c 00 81       	mov    0x81009c2c,%eax
810071ac:	85 c0                	test   %eax,%eax
810071ae:	74 0b                	je     810071bb <_write_r+0x41>
810071b0:	8b 15 2c 9c 00 81    	mov    0x81009c2c,%edx
810071b6:	8b 45 08             	mov    0x8(%ebp),%eax
810071b9:	89 10                	mov    %edx,(%eax)
810071bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810071be:	c9                   	leave  
810071bf:	c3                   	ret    

810071c0 <__swsetup_r>:
810071c0:	55                   	push   %ebp
810071c1:	89 e5                	mov    %esp,%ebp
810071c3:	53                   	push   %ebx
810071c4:	83 ec 14             	sub    $0x14,%esp
810071c7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810071ca:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810071cf:	89 45 f4             	mov    %eax,-0xc(%ebp)
810071d2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810071d6:	74 18                	je     810071f0 <__swsetup_r+0x30>
810071d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810071db:	8b 40 38             	mov    0x38(%eax),%eax
810071de:	85 c0                	test   %eax,%eax
810071e0:	75 0e                	jne    810071f0 <__swsetup_r+0x30>
810071e2:	83 ec 0c             	sub    $0xc,%esp
810071e5:	ff 75 f4             	push   -0xc(%ebp)
810071e8:	e8 00 a7 ff ff       	call   810018ed <__sinit>
810071ed:	83 c4 10             	add    $0x10,%esp
810071f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071f4:	98                   	cwtl   
810071f5:	83 e0 08             	and    $0x8,%eax
810071f8:	85 c0                	test   %eax,%eax
810071fa:	0f 85 82 00 00 00    	jne    81007282 <__swsetup_r+0xc2>
81007200:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007204:	98                   	cwtl   
81007205:	83 e0 10             	and    $0x10,%eax
81007208:	85 c0                	test   %eax,%eax
8100720a:	75 1e                	jne    8100722a <__swsetup_r+0x6a>
8100720c:	8b 45 08             	mov    0x8(%ebp),%eax
8100720f:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81007215:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007219:	83 c8 40             	or     $0x40,%eax
8100721c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007220:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007225:	e9 ec 00 00 00       	jmp    81007316 <__swsetup_r+0x156>
8100722a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100722e:	98                   	cwtl   
8100722f:	83 e0 04             	and    $0x4,%eax
81007232:	85 c0                	test   %eax,%eax
81007234:	74 41                	je     81007277 <__swsetup_r+0xb7>
81007236:	8b 43 30             	mov    0x30(%ebx),%eax
81007239:	85 c0                	test   %eax,%eax
8100723b:	74 23                	je     81007260 <__swsetup_r+0xa0>
8100723d:	8b 53 30             	mov    0x30(%ebx),%edx
81007240:	8d 43 40             	lea    0x40(%ebx),%eax
81007243:	39 c2                	cmp    %eax,%edx
81007245:	74 12                	je     81007259 <__swsetup_r+0x99>
81007247:	8b 43 30             	mov    0x30(%ebx),%eax
8100724a:	83 ec 08             	sub    $0x8,%esp
8100724d:	50                   	push   %eax
8100724e:	ff 75 08             	push   0x8(%ebp)
81007251:	e8 4c ac ff ff       	call   81001ea2 <_free_r>
81007256:	83 c4 10             	add    $0x10,%esp
81007259:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81007260:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007264:	83 e0 db             	and    $0xffffffdb,%eax
81007267:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100726b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007272:	8b 43 10             	mov    0x10(%ebx),%eax
81007275:	89 03                	mov    %eax,(%ebx)
81007277:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100727b:	83 c8 08             	or     $0x8,%eax
8100727e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007282:	8b 43 10             	mov    0x10(%ebx),%eax
81007285:	85 c0                	test   %eax,%eax
81007287:	75 2b                	jne    810072b4 <__swsetup_r+0xf4>
81007289:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100728d:	98                   	cwtl   
8100728e:	25 00 02 00 00       	and    $0x200,%eax
81007293:	85 c0                	test   %eax,%eax
81007295:	74 0e                	je     810072a5 <__swsetup_r+0xe5>
81007297:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100729b:	98                   	cwtl   
8100729c:	25 80 00 00 00       	and    $0x80,%eax
810072a1:	85 c0                	test   %eax,%eax
810072a3:	74 0f                	je     810072b4 <__swsetup_r+0xf4>
810072a5:	83 ec 08             	sub    $0x8,%esp
810072a8:	53                   	push   %ebx
810072a9:	ff 75 08             	push   0x8(%ebp)
810072ac:	e8 c4 ca ff ff       	call   81003d75 <__smakebuf_r>
810072b1:	83 c4 10             	add    $0x10,%esp
810072b4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072b8:	98                   	cwtl   
810072b9:	83 e0 01             	and    $0x1,%eax
810072bc:	85 c0                	test   %eax,%eax
810072be:	74 11                	je     810072d1 <__swsetup_r+0x111>
810072c0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810072c7:	8b 43 14             	mov    0x14(%ebx),%eax
810072ca:	f7 d8                	neg    %eax
810072cc:	89 43 18             	mov    %eax,0x18(%ebx)
810072cf:	eb 19                	jmp    810072ea <__swsetup_r+0x12a>
810072d1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072d5:	98                   	cwtl   
810072d6:	83 e0 02             	and    $0x2,%eax
810072d9:	85 c0                	test   %eax,%eax
810072db:	75 05                	jne    810072e2 <__swsetup_r+0x122>
810072dd:	8b 43 14             	mov    0x14(%ebx),%eax
810072e0:	eb 05                	jmp    810072e7 <__swsetup_r+0x127>
810072e2:	b8 00 00 00 00       	mov    $0x0,%eax
810072e7:	89 43 08             	mov    %eax,0x8(%ebx)
810072ea:	8b 43 10             	mov    0x10(%ebx),%eax
810072ed:	85 c0                	test   %eax,%eax
810072ef:	75 20                	jne    81007311 <__swsetup_r+0x151>
810072f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072f5:	98                   	cwtl   
810072f6:	25 80 00 00 00       	and    $0x80,%eax
810072fb:	85 c0                	test   %eax,%eax
810072fd:	74 12                	je     81007311 <__swsetup_r+0x151>
810072ff:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007303:	83 c8 40             	or     $0x40,%eax
81007306:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100730a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100730f:	eb 05                	jmp    81007316 <__swsetup_r+0x156>
81007311:	b8 00 00 00 00       	mov    $0x0,%eax
81007316:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007319:	c9                   	leave  
8100731a:	c3                   	ret    

8100731b <__call_exitprocs>:
8100731b:	55                   	push   %ebp
8100731c:	89 e5                	mov    %esp,%ebp
8100731e:	57                   	push   %edi
8100731f:	56                   	push   %esi
81007320:	53                   	push   %ebx
81007321:	83 ec 1c             	sub    $0x1c,%esp
81007324:	a1 24 89 00 81       	mov    0x81008924,%eax
81007329:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
8100732f:	a1 24 89 00 81       	mov    0x81008924,%eax
81007334:	05 48 01 00 00       	add    $0x148,%eax
81007339:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100733c:	90                   	nop
8100733d:	85 db                	test   %ebx,%ebx
8100733f:	0f 84 e1 00 00 00    	je     81007426 <__call_exitprocs+0x10b>
81007345:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
8100734b:	8b 43 04             	mov    0x4(%ebx),%eax
8100734e:	8d 70 ff             	lea    -0x1(%eax),%esi
81007351:	e9 c6 00 00 00       	jmp    8100741c <__call_exitprocs+0x101>
81007356:	b8 01 00 00 00       	mov    $0x1,%eax
8100735b:	89 f1                	mov    %esi,%ecx
8100735d:	d3 e0                	shl    %cl,%eax
8100735f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007362:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007366:	74 17                	je     8100737f <__call_exitprocs+0x64>
81007368:	85 ff                	test   %edi,%edi
8100736a:	0f 84 a5 00 00 00    	je     81007415 <__call_exitprocs+0xfa>
81007370:	8d 46 20             	lea    0x20(%esi),%eax
81007373:	8b 04 87             	mov    (%edi,%eax,4),%eax
81007376:	39 45 0c             	cmp    %eax,0xc(%ebp)
81007379:	0f 85 96 00 00 00    	jne    81007415 <__call_exitprocs+0xfa>
8100737f:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81007383:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007386:	8b 43 04             	mov    0x4(%ebx),%eax
81007389:	83 e8 01             	sub    $0x1,%eax
8100738c:	39 c6                	cmp    %eax,%esi
8100738e:	75 0b                	jne    8100739b <__call_exitprocs+0x80>
81007390:	8b 43 04             	mov    0x4(%ebx),%eax
81007393:	83 e8 01             	sub    $0x1,%eax
81007396:	89 43 04             	mov    %eax,0x4(%ebx)
81007399:	eb 08                	jmp    810073a3 <__call_exitprocs+0x88>
8100739b:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
810073a2:	00 
810073a3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810073a7:	74 6f                	je     81007418 <__call_exitprocs+0xfd>
810073a9:	8b 43 04             	mov    0x4(%ebx),%eax
810073ac:	89 45 d8             	mov    %eax,-0x28(%ebp)
810073af:	85 ff                	test   %edi,%edi
810073b1:	74 0f                	je     810073c2 <__call_exitprocs+0xa7>
810073b3:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
810073b9:	8b 45 e0             	mov    -0x20(%ebp),%eax
810073bc:	21 d0                	and    %edx,%eax
810073be:	85 c0                	test   %eax,%eax
810073c0:	75 07                	jne    810073c9 <__call_exitprocs+0xae>
810073c2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073c5:	ff d0                	call   *%eax
810073c7:	eb 32                	jmp    810073fb <__call_exitprocs+0xe0>
810073c9:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
810073cf:	8b 45 e0             	mov    -0x20(%ebp),%eax
810073d2:	21 d0                	and    %edx,%eax
810073d4:	85 c0                	test   %eax,%eax
810073d6:	75 14                	jne    810073ec <__call_exitprocs+0xd1>
810073d8:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810073db:	83 ec 08             	sub    $0x8,%esp
810073de:	50                   	push   %eax
810073df:	ff 75 08             	push   0x8(%ebp)
810073e2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073e5:	ff d0                	call   *%eax
810073e7:	83 c4 10             	add    $0x10,%esp
810073ea:	eb 0f                	jmp    810073fb <__call_exitprocs+0xe0>
810073ec:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810073ef:	83 ec 0c             	sub    $0xc,%esp
810073f2:	50                   	push   %eax
810073f3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073f6:	ff d0                	call   *%eax
810073f8:	83 c4 10             	add    $0x10,%esp
810073fb:	8b 43 04             	mov    0x4(%ebx),%eax
810073fe:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81007401:	0f 85 1d ff ff ff    	jne    81007324 <__call_exitprocs+0x9>
81007407:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100740a:	8b 00                	mov    (%eax),%eax
8100740c:	39 c3                	cmp    %eax,%ebx
8100740e:	74 09                	je     81007419 <__call_exitprocs+0xfe>
81007410:	e9 0f ff ff ff       	jmp    81007324 <__call_exitprocs+0x9>
81007415:	90                   	nop
81007416:	eb 01                	jmp    81007419 <__call_exitprocs+0xfe>
81007418:	90                   	nop
81007419:	83 ee 01             	sub    $0x1,%esi
8100741c:	85 f6                	test   %esi,%esi
8100741e:	0f 89 32 ff ff ff    	jns    81007356 <__call_exitprocs+0x3b>
81007424:	eb 01                	jmp    81007427 <__call_exitprocs+0x10c>
81007426:	90                   	nop
81007427:	90                   	nop
81007428:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100742b:	5b                   	pop    %ebx
8100742c:	5e                   	pop    %esi
8100742d:	5f                   	pop    %edi
8100742e:	5d                   	pop    %ebp
8100742f:	c3                   	ret    

81007430 <_close_r>:
81007430:	55                   	push   %ebp
81007431:	89 e5                	mov    %esp,%ebp
81007433:	83 ec 18             	sub    $0x18,%esp
81007436:	c7 05 2c 9c 00 81 00 	movl   $0x0,0x81009c2c
8100743d:	00 00 00 
81007440:	83 ec 0c             	sub    $0xc,%esp
81007443:	ff 75 0c             	push   0xc(%ebp)
81007446:	e8 e8 98 ff ff       	call   81000d33 <close>
8100744b:	83 c4 10             	add    $0x10,%esp
8100744e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007451:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007455:	75 14                	jne    8100746b <_close_r+0x3b>
81007457:	a1 2c 9c 00 81       	mov    0x81009c2c,%eax
8100745c:	85 c0                	test   %eax,%eax
8100745e:	74 0b                	je     8100746b <_close_r+0x3b>
81007460:	8b 15 2c 9c 00 81    	mov    0x81009c2c,%edx
81007466:	8b 45 08             	mov    0x8(%ebp),%eax
81007469:	89 10                	mov    %edx,(%eax)
8100746b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100746e:	c9                   	leave  
8100746f:	c3                   	ret    

81007470 <__errno>:
81007470:	55                   	push   %ebp
81007471:	89 e5                	mov    %esp,%ebp
81007473:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81007478:	5d                   	pop    %ebp
81007479:	c3                   	ret    

8100747a <__sflags>:
8100747a:	55                   	push   %ebp
8100747b:	89 e5                	mov    %esp,%ebp
8100747d:	57                   	push   %edi
8100747e:	56                   	push   %esi
8100747f:	53                   	push   %ebx
81007480:	8b 55 0c             	mov    0xc(%ebp),%edx
81007483:	0f b6 02             	movzbl (%edx),%eax
81007486:	0f be c0             	movsbl %al,%eax
81007489:	83 f8 77             	cmp    $0x77,%eax
8100748c:	74 20                	je     810074ae <__sflags+0x34>
8100748e:	83 f8 77             	cmp    $0x77,%eax
81007491:	7f 3d                	jg     810074d0 <__sflags+0x56>
81007493:	83 f8 61             	cmp    $0x61,%eax
81007496:	74 27                	je     810074bf <__sflags+0x45>
81007498:	83 f8 72             	cmp    $0x72,%eax
8100749b:	75 33                	jne    810074d0 <__sflags+0x56>
8100749d:	be 04 00 00 00       	mov    $0x4,%esi
810074a2:	bb 00 00 00 00       	mov    $0x0,%ebx
810074a7:	bf 00 00 00 00       	mov    $0x0,%edi
810074ac:	eb 32                	jmp    810074e0 <__sflags+0x66>
810074ae:	be 08 00 00 00       	mov    $0x8,%esi
810074b3:	bb 01 00 00 00       	mov    $0x1,%ebx
810074b8:	bf 00 06 00 00       	mov    $0x600,%edi
810074bd:	eb 21                	jmp    810074e0 <__sflags+0x66>
810074bf:	be 08 01 00 00       	mov    $0x108,%esi
810074c4:	bb 01 00 00 00       	mov    $0x1,%ebx
810074c9:	bf 08 02 00 00       	mov    $0x208,%edi
810074ce:	eb 10                	jmp    810074e0 <__sflags+0x66>
810074d0:	8b 45 08             	mov    0x8(%ebp),%eax
810074d3:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810074d9:	b8 00 00 00 00       	mov    $0x0,%eax
810074de:	eb 4f                	jmp    8100752f <__sflags+0xb5>
810074e0:	eb 38                	jmp    8100751a <__sflags+0xa0>
810074e2:	0f b6 02             	movzbl (%edx),%eax
810074e5:	0f be c0             	movsbl %al,%eax
810074e8:	83 f8 78             	cmp    $0x78,%eax
810074eb:	74 27                	je     81007514 <__sflags+0x9a>
810074ed:	83 f8 78             	cmp    $0x78,%eax
810074f0:	7f 27                	jg     81007519 <__sflags+0x9f>
810074f2:	83 f8 2b             	cmp    $0x2b,%eax
810074f5:	74 07                	je     810074fe <__sflags+0x84>
810074f7:	83 f8 62             	cmp    $0x62,%eax
810074fa:	74 1e                	je     8100751a <__sflags+0xa0>
810074fc:	eb 1b                	jmp    81007519 <__sflags+0x9f>
810074fe:	89 f0                	mov    %esi,%eax
81007500:	83 e0 e3             	and    $0xffffffe3,%eax
81007503:	83 c8 10             	or     $0x10,%eax
81007506:	89 c6                	mov    %eax,%esi
81007508:	89 d8                	mov    %ebx,%eax
8100750a:	83 e0 fc             	and    $0xfffffffc,%eax
8100750d:	83 c8 02             	or     $0x2,%eax
81007510:	89 c3                	mov    %eax,%ebx
81007512:	eb 06                	jmp    8100751a <__sflags+0xa0>
81007514:	80 cf 08             	or     $0x8,%bh
81007517:	eb 01                	jmp    8100751a <__sflags+0xa0>
81007519:	90                   	nop
8100751a:	83 c2 01             	add    $0x1,%edx
8100751d:	0f b6 02             	movzbl (%edx),%eax
81007520:	84 c0                	test   %al,%al
81007522:	75 be                	jne    810074e2 <__sflags+0x68>
81007524:	89 da                	mov    %ebx,%edx
81007526:	09 fa                	or     %edi,%edx
81007528:	8b 45 10             	mov    0x10(%ebp),%eax
8100752b:	89 10                	mov    %edx,(%eax)
8100752d:	89 f0                	mov    %esi,%eax
8100752f:	5b                   	pop    %ebx
81007530:	5e                   	pop    %esi
81007531:	5f                   	pop    %edi
81007532:	5d                   	pop    %ebp
81007533:	c3                   	ret    

81007534 <_fputc_r>:
81007534:	55                   	push   %ebp
81007535:	89 e5                	mov    %esp,%ebp
81007537:	83 ec 18             	sub    $0x18,%esp
8100753a:	8b 45 08             	mov    0x8(%ebp),%eax
8100753d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007540:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007544:	74 18                	je     8100755e <_fputc_r+0x2a>
81007546:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007549:	8b 40 38             	mov    0x38(%eax),%eax
8100754c:	85 c0                	test   %eax,%eax
8100754e:	75 0e                	jne    8100755e <_fputc_r+0x2a>
81007550:	83 ec 0c             	sub    $0xc,%esp
81007553:	ff 75 f4             	push   -0xc(%ebp)
81007556:	e8 92 a3 ff ff       	call   810018ed <__sinit>
8100755b:	83 c4 10             	add    $0x10,%esp
8100755e:	83 ec 04             	sub    $0x4,%esp
81007561:	ff 75 10             	push   0x10(%ebp)
81007564:	ff 75 0c             	push   0xc(%ebp)
81007567:	ff 75 08             	push   0x8(%ebp)
8100756a:	e8 a3 0c 00 00       	call   81008212 <_putc_r>
8100756f:	83 c4 10             	add    $0x10,%esp
81007572:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007575:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007578:	c9                   	leave  
81007579:	c3                   	ret    

8100757a <fputc>:
8100757a:	55                   	push   %ebp
8100757b:	89 e5                	mov    %esp,%ebp
8100757d:	83 ec 18             	sub    $0x18,%esp
81007580:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81007585:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007588:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100758b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100758e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81007592:	74 18                	je     810075ac <fputc+0x32>
81007594:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007597:	8b 40 38             	mov    0x38(%eax),%eax
8100759a:	85 c0                	test   %eax,%eax
8100759c:	75 0e                	jne    810075ac <fputc+0x32>
8100759e:	83 ec 0c             	sub    $0xc,%esp
810075a1:	ff 75 f0             	push   -0x10(%ebp)
810075a4:	e8 44 a3 ff ff       	call   810018ed <__sinit>
810075a9:	83 c4 10             	add    $0x10,%esp
810075ac:	83 ec 04             	sub    $0x4,%esp
810075af:	ff 75 0c             	push   0xc(%ebp)
810075b2:	ff 75 08             	push   0x8(%ebp)
810075b5:	ff 75 f4             	push   -0xc(%ebp)
810075b8:	e8 55 0c 00 00       	call   81008212 <_putc_r>
810075bd:	83 c4 10             	add    $0x10,%esp
810075c0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810075c3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810075c6:	c9                   	leave  
810075c7:	c3                   	ret    

810075c8 <__sputc_r>:
810075c8:	55                   	push   %ebp
810075c9:	89 e5                	mov    %esp,%ebp
810075cb:	83 ec 08             	sub    $0x8,%esp
810075ce:	8b 45 10             	mov    0x10(%ebp),%eax
810075d1:	8b 40 08             	mov    0x8(%eax),%eax
810075d4:	8d 50 ff             	lea    -0x1(%eax),%edx
810075d7:	8b 45 10             	mov    0x10(%ebp),%eax
810075da:	89 50 08             	mov    %edx,0x8(%eax)
810075dd:	8b 45 10             	mov    0x10(%ebp),%eax
810075e0:	8b 40 08             	mov    0x8(%eax),%eax
810075e3:	85 c0                	test   %eax,%eax
810075e5:	79 17                	jns    810075fe <__sputc_r+0x36>
810075e7:	8b 45 10             	mov    0x10(%ebp),%eax
810075ea:	8b 50 08             	mov    0x8(%eax),%edx
810075ed:	8b 45 10             	mov    0x10(%ebp),%eax
810075f0:	8b 40 18             	mov    0x18(%eax),%eax
810075f3:	39 c2                	cmp    %eax,%edx
810075f5:	7c 21                	jl     81007618 <__sputc_r+0x50>
810075f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810075fa:	3c 0a                	cmp    $0xa,%al
810075fc:	74 1a                	je     81007618 <__sputc_r+0x50>
810075fe:	8b 45 10             	mov    0x10(%ebp),%eax
81007601:	8b 00                	mov    (%eax),%eax
81007603:	8d 48 01             	lea    0x1(%eax),%ecx
81007606:	8b 55 10             	mov    0x10(%ebp),%edx
81007609:	89 0a                	mov    %ecx,(%edx)
8100760b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100760e:	88 10                	mov    %dl,(%eax)
81007610:	0f b6 00             	movzbl (%eax),%eax
81007613:	0f b6 c0             	movzbl %al,%eax
81007616:	eb 14                	jmp    8100762c <__sputc_r+0x64>
81007618:	83 ec 04             	sub    $0x4,%esp
8100761b:	ff 75 10             	push   0x10(%ebp)
8100761e:	ff 75 0c             	push   0xc(%ebp)
81007621:	ff 75 08             	push   0x8(%ebp)
81007624:	e8 1e fa ff ff       	call   81007047 <__swbuf_r>
81007629:	83 c4 10             	add    $0x10,%esp
8100762c:	c9                   	leave  
8100762d:	c3                   	ret    

8100762e <__fputwc>:
8100762e:	55                   	push   %ebp
8100762f:	89 e5                	mov    %esp,%ebp
81007631:	83 ec 18             	sub    $0x18,%esp
81007634:	e8 41 03 00 00       	call   8100797a <__locale_mb_cur_max>
81007639:	83 f8 01             	cmp    $0x1,%eax
8100763c:	75 1e                	jne    8100765c <__fputwc+0x2e>
8100763e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007642:	7e 18                	jle    8100765c <__fputwc+0x2e>
81007644:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
8100764b:	7f 0f                	jg     8100765c <__fputwc+0x2e>
8100764d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007650:	88 45 ef             	mov    %al,-0x11(%ebp)
81007653:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
8100765a:	eb 3c                	jmp    81007698 <__fputwc+0x6a>
8100765c:	8b 45 10             	mov    0x10(%ebp),%eax
8100765f:	83 c0 5c             	add    $0x5c,%eax
81007662:	50                   	push   %eax
81007663:	ff 75 0c             	push   0xc(%ebp)
81007666:	8d 45 ef             	lea    -0x11(%ebp),%eax
81007669:	50                   	push   %eax
8100766a:	ff 75 08             	push   0x8(%ebp)
8100766d:	e8 7b 0d 00 00       	call   810083ed <_wcrtomb_r>
81007672:	83 c4 10             	add    $0x10,%esp
81007675:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007678:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8100767c:	75 1a                	jne    81007698 <__fputwc+0x6a>
8100767e:	8b 45 10             	mov    0x10(%ebp),%eax
81007681:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007685:	83 c8 40             	or     $0x40,%eax
81007688:	89 c2                	mov    %eax,%edx
8100768a:	8b 45 10             	mov    0x10(%ebp),%eax
8100768d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007691:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007696:	eb 44                	jmp    810076dc <__fputwc+0xae>
81007698:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100769f:	eb 30                	jmp    810076d1 <__fputwc+0xa3>
810076a1:	8d 55 ef             	lea    -0x11(%ebp),%edx
810076a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810076a7:	01 d0                	add    %edx,%eax
810076a9:	0f b6 00             	movzbl (%eax),%eax
810076ac:	0f b6 c0             	movzbl %al,%eax
810076af:	83 ec 04             	sub    $0x4,%esp
810076b2:	ff 75 10             	push   0x10(%ebp)
810076b5:	50                   	push   %eax
810076b6:	ff 75 08             	push   0x8(%ebp)
810076b9:	e8 0a ff ff ff       	call   810075c8 <__sputc_r>
810076be:	83 c4 10             	add    $0x10,%esp
810076c1:	83 f8 ff             	cmp    $0xffffffff,%eax
810076c4:	75 07                	jne    810076cd <__fputwc+0x9f>
810076c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810076cb:	eb 0f                	jmp    810076dc <__fputwc+0xae>
810076cd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810076d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810076d4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810076d7:	72 c8                	jb     810076a1 <__fputwc+0x73>
810076d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810076dc:	c9                   	leave  
810076dd:	c3                   	ret    

810076de <_fputwc_r>:
810076de:	55                   	push   %ebp
810076df:	89 e5                	mov    %esp,%ebp
810076e1:	83 ec 18             	sub    $0x18,%esp
810076e4:	8b 45 10             	mov    0x10(%ebp),%eax
810076e7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810076eb:	98                   	cwtl   
810076ec:	25 00 20 00 00       	and    $0x2000,%eax
810076f1:	85 c0                	test   %eax,%eax
810076f3:	75 24                	jne    81007719 <_fputwc_r+0x3b>
810076f5:	8b 45 10             	mov    0x10(%ebp),%eax
810076f8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810076fc:	80 cc 20             	or     $0x20,%ah
810076ff:	89 c2                	mov    %eax,%edx
81007701:	8b 45 10             	mov    0x10(%ebp),%eax
81007704:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007708:	8b 45 10             	mov    0x10(%ebp),%eax
8100770b:	8b 40 64             	mov    0x64(%eax),%eax
8100770e:	80 cc 20             	or     $0x20,%ah
81007711:	89 c2                	mov    %eax,%edx
81007713:	8b 45 10             	mov    0x10(%ebp),%eax
81007716:	89 50 64             	mov    %edx,0x64(%eax)
81007719:	83 ec 04             	sub    $0x4,%esp
8100771c:	ff 75 10             	push   0x10(%ebp)
8100771f:	ff 75 0c             	push   0xc(%ebp)
81007722:	ff 75 08             	push   0x8(%ebp)
81007725:	e8 04 ff ff ff       	call   8100762e <__fputwc>
8100772a:	83 c4 10             	add    $0x10,%esp
8100772d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007730:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007733:	c9                   	leave  
81007734:	c3                   	ret    

81007735 <fputwc>:
81007735:	55                   	push   %ebp
81007736:	89 e5                	mov    %esp,%ebp
81007738:	83 ec 18             	sub    $0x18,%esp
8100773b:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81007740:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007743:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007746:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007749:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100774d:	74 18                	je     81007767 <fputwc+0x32>
8100774f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007752:	8b 40 38             	mov    0x38(%eax),%eax
81007755:	85 c0                	test   %eax,%eax
81007757:	75 0e                	jne    81007767 <fputwc+0x32>
81007759:	83 ec 0c             	sub    $0xc,%esp
8100775c:	ff 75 f0             	push   -0x10(%ebp)
8100775f:	e8 89 a1 ff ff       	call   810018ed <__sinit>
81007764:	83 c4 10             	add    $0x10,%esp
81007767:	83 ec 04             	sub    $0x4,%esp
8100776a:	ff 75 0c             	push   0xc(%ebp)
8100776d:	ff 75 08             	push   0x8(%ebp)
81007770:	ff 75 f4             	push   -0xc(%ebp)
81007773:	e8 66 ff ff ff       	call   810076de <_fputwc_r>
81007778:	83 c4 10             	add    $0x10,%esp
8100777b:	c9                   	leave  
8100777c:	c3                   	ret    

8100777d <_findenv>:
8100777d:	55                   	push   %ebp
8100777e:	89 e5                	mov    %esp,%ebp
81007780:	83 ec 08             	sub    $0x8,%esp
81007783:	8b 55 08             	mov    0x8(%ebp),%edx
81007786:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100778b:	83 ec 04             	sub    $0x4,%esp
8100778e:	ff 75 0c             	push   0xc(%ebp)
81007791:	52                   	push   %edx
81007792:	50                   	push   %eax
81007793:	e8 25 00 00 00       	call   810077bd <_findenv_r>
81007798:	83 c4 10             	add    $0x10,%esp
8100779b:	c9                   	leave  
8100779c:	c3                   	ret    

8100779d <getenv>:
8100779d:	55                   	push   %ebp
8100779e:	89 e5                	mov    %esp,%ebp
810077a0:	83 ec 18             	sub    $0x18,%esp
810077a3:	a1 e4 90 00 81       	mov    0x810090e4,%eax
810077a8:	83 ec 04             	sub    $0x4,%esp
810077ab:	8d 55 f4             	lea    -0xc(%ebp),%edx
810077ae:	52                   	push   %edx
810077af:	ff 75 08             	push   0x8(%ebp)
810077b2:	50                   	push   %eax
810077b3:	e8 05 00 00 00       	call   810077bd <_findenv_r>
810077b8:	83 c4 10             	add    $0x10,%esp
810077bb:	c9                   	leave  
810077bc:	c3                   	ret    

810077bd <_findenv_r>:
810077bd:	55                   	push   %ebp
810077be:	89 e5                	mov    %esp,%ebp
810077c0:	57                   	push   %edi
810077c1:	56                   	push   %esi
810077c2:	53                   	push   %ebx
810077c3:	83 ec 1c             	sub    $0x1c,%esp
810077c6:	8b 7d 0c             	mov    0xc(%ebp),%edi
810077c9:	83 ec 0c             	sub    $0xc,%esp
810077cc:	ff 75 08             	push   0x8(%ebp)
810077cf:	e8 8a 0d 00 00       	call   8100855e <__env_lock>
810077d4:	83 c4 10             	add    $0x10,%esp
810077d7:	a1 10 95 00 81       	mov    0x81009510,%eax
810077dc:	8b 00                	mov    (%eax),%eax
810077de:	85 c0                	test   %eax,%eax
810077e0:	75 18                	jne    810077fa <_findenv_r+0x3d>
810077e2:	83 ec 0c             	sub    $0xc,%esp
810077e5:	ff 75 08             	push   0x8(%ebp)
810077e8:	e8 77 0d 00 00       	call   81008564 <__env_unlock>
810077ed:	83 c4 10             	add    $0x10,%esp
810077f0:	b8 00 00 00 00       	mov    $0x0,%eax
810077f5:	e9 a8 00 00 00       	jmp    810078a2 <_findenv_r+0xe5>
810077fa:	89 7d e4             	mov    %edi,-0x1c(%ebp)
810077fd:	eb 04                	jmp    81007803 <_findenv_r+0x46>
810077ff:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81007803:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007806:	0f b6 00             	movzbl (%eax),%eax
81007809:	84 c0                	test   %al,%al
8100780b:	74 0a                	je     81007817 <_findenv_r+0x5a>
8100780d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007810:	0f b6 00             	movzbl (%eax),%eax
81007813:	3c 3d                	cmp    $0x3d,%al
81007815:	75 e8                	jne    810077ff <_findenv_r+0x42>
81007817:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100781a:	0f b6 00             	movzbl (%eax),%eax
8100781d:	3c 3d                	cmp    $0x3d,%al
8100781f:	74 6e                	je     8100788f <_findenv_r+0xd2>
81007821:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007824:	29 f8                	sub    %edi,%eax
81007826:	89 c6                	mov    %eax,%esi
81007828:	a1 10 95 00 81       	mov    0x81009510,%eax
8100782d:	8b 18                	mov    (%eax),%ebx
8100782f:	eb 58                	jmp    81007889 <_findenv_r+0xcc>
81007831:	89 f2                	mov    %esi,%edx
81007833:	8b 03                	mov    (%ebx),%eax
81007835:	83 ec 04             	sub    $0x4,%esp
81007838:	52                   	push   %edx
81007839:	57                   	push   %edi
8100783a:	50                   	push   %eax
8100783b:	e8 b6 0a 00 00       	call   810082f6 <strncmp>
81007840:	83 c4 10             	add    $0x10,%esp
81007843:	85 c0                	test   %eax,%eax
81007845:	75 3f                	jne    81007886 <_findenv_r+0xc9>
81007847:	8b 03                	mov    (%ebx),%eax
81007849:	89 f2                	mov    %esi,%edx
8100784b:	01 d0                	add    %edx,%eax
8100784d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007850:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007853:	0f b6 00             	movzbl (%eax),%eax
81007856:	3c 3d                	cmp    $0x3d,%al
81007858:	75 2c                	jne    81007886 <_findenv_r+0xc9>
8100785a:	a1 10 95 00 81       	mov    0x81009510,%eax
8100785f:	8b 10                	mov    (%eax),%edx
81007861:	89 d8                	mov    %ebx,%eax
81007863:	29 d0                	sub    %edx,%eax
81007865:	c1 f8 02             	sar    $0x2,%eax
81007868:	89 c2                	mov    %eax,%edx
8100786a:	8b 45 10             	mov    0x10(%ebp),%eax
8100786d:	89 10                	mov    %edx,(%eax)
8100786f:	83 ec 0c             	sub    $0xc,%esp
81007872:	ff 75 08             	push   0x8(%ebp)
81007875:	e8 ea 0c 00 00       	call   81008564 <__env_unlock>
8100787a:	83 c4 10             	add    $0x10,%esp
8100787d:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81007881:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007884:	eb 1c                	jmp    810078a2 <_findenv_r+0xe5>
81007886:	83 c3 04             	add    $0x4,%ebx
81007889:	8b 03                	mov    (%ebx),%eax
8100788b:	85 c0                	test   %eax,%eax
8100788d:	75 a2                	jne    81007831 <_findenv_r+0x74>
8100788f:	83 ec 0c             	sub    $0xc,%esp
81007892:	ff 75 08             	push   0x8(%ebp)
81007895:	e8 ca 0c 00 00       	call   81008564 <__env_unlock>
8100789a:	83 c4 10             	add    $0x10,%esp
8100789d:	b8 00 00 00 00       	mov    $0x0,%eax
810078a2:	8d 65 f4             	lea    -0xc(%ebp),%esp
810078a5:	5b                   	pop    %ebx
810078a6:	5e                   	pop    %esi
810078a7:	5f                   	pop    %edi
810078a8:	5d                   	pop    %ebp
810078a9:	c3                   	ret    

810078aa <_getenv_r>:
810078aa:	55                   	push   %ebp
810078ab:	89 e5                	mov    %esp,%ebp
810078ad:	83 ec 18             	sub    $0x18,%esp
810078b0:	83 ec 04             	sub    $0x4,%esp
810078b3:	8d 45 f4             	lea    -0xc(%ebp),%eax
810078b6:	50                   	push   %eax
810078b7:	ff 75 0c             	push   0xc(%ebp)
810078ba:	ff 75 08             	push   0x8(%ebp)
810078bd:	e8 fb fe ff ff       	call   810077bd <_findenv_r>
810078c2:	83 c4 10             	add    $0x10,%esp
810078c5:	c9                   	leave  
810078c6:	c3                   	ret    

810078c7 <_isatty_r>:
810078c7:	55                   	push   %ebp
810078c8:	89 e5                	mov    %esp,%ebp
810078ca:	83 ec 18             	sub    $0x18,%esp
810078cd:	c7 05 2c 9c 00 81 00 	movl   $0x0,0x81009c2c
810078d4:	00 00 00 
810078d7:	83 ec 0c             	sub    $0xc,%esp
810078da:	ff 75 0c             	push   0xc(%ebp)
810078dd:	e8 c6 94 ff ff       	call   81000da8 <isatty>
810078e2:	83 c4 10             	add    $0x10,%esp
810078e5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810078e8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810078ec:	75 14                	jne    81007902 <_isatty_r+0x3b>
810078ee:	a1 2c 9c 00 81       	mov    0x81009c2c,%eax
810078f3:	85 c0                	test   %eax,%eax
810078f5:	74 0b                	je     81007902 <_isatty_r+0x3b>
810078f7:	8b 15 2c 9c 00 81    	mov    0x81009c2c,%edx
810078fd:	8b 45 08             	mov    0x8(%ebp),%eax
81007900:	89 10                	mov    %edx,(%eax)
81007902:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007905:	c9                   	leave  
81007906:	c3                   	ret    

81007907 <__get_global_locale>:
81007907:	55                   	push   %ebp
81007908:	89 e5                	mov    %esp,%ebp
8100790a:	b8 20 95 00 81       	mov    $0x81009520,%eax
8100790f:	5d                   	pop    %ebp
81007910:	c3                   	ret    

81007911 <__get_current_locale>:
81007911:	55                   	push   %ebp
81007912:	89 e5                	mov    %esp,%ebp
81007914:	e8 ee ff ff ff       	call   81007907 <__get_global_locale>
81007919:	5d                   	pop    %ebp
8100791a:	c3                   	ret    

8100791b <_setlocale_r>:
8100791b:	55                   	push   %ebp
8100791c:	89 e5                	mov    %esp,%ebp
8100791e:	83 ec 08             	sub    $0x8,%esp
81007921:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007925:	74 4c                	je     81007973 <_setlocale_r+0x58>
81007927:	83 ec 08             	sub    $0x8,%esp
8100792a:	68 84 8c 00 81       	push   $0x81008c84
8100792f:	ff 75 10             	push   0x10(%ebp)
81007932:	e8 25 f2 ff ff       	call   81006b5c <strcmp>
81007937:	83 c4 10             	add    $0x10,%esp
8100793a:	85 c0                	test   %eax,%eax
8100793c:	74 35                	je     81007973 <_setlocale_r+0x58>
8100793e:	83 ec 08             	sub    $0x8,%esp
81007941:	68 8a 8c 00 81       	push   $0x81008c8a
81007946:	ff 75 10             	push   0x10(%ebp)
81007949:	e8 0e f2 ff ff       	call   81006b5c <strcmp>
8100794e:	83 c4 10             	add    $0x10,%esp
81007951:	85 c0                	test   %eax,%eax
81007953:	74 1e                	je     81007973 <_setlocale_r+0x58>
81007955:	83 ec 08             	sub    $0x8,%esp
81007958:	68 83 8c 00 81       	push   $0x81008c83
8100795d:	ff 75 10             	push   0x10(%ebp)
81007960:	e8 f7 f1 ff ff       	call   81006b5c <strcmp>
81007965:	83 c4 10             	add    $0x10,%esp
81007968:	85 c0                	test   %eax,%eax
8100796a:	74 07                	je     81007973 <_setlocale_r+0x58>
8100796c:	b8 00 00 00 00       	mov    $0x0,%eax
81007971:	eb 05                	jmp    81007978 <_setlocale_r+0x5d>
81007973:	b8 8a 8c 00 81       	mov    $0x81008c8a,%eax
81007978:	c9                   	leave  
81007979:	c3                   	ret    

8100797a <__locale_mb_cur_max>:
8100797a:	55                   	push   %ebp
8100797b:	89 e5                	mov    %esp,%ebp
8100797d:	e8 8f ff ff ff       	call   81007911 <__get_current_locale>
81007982:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81007989:	0f be c0             	movsbl %al,%eax
8100798c:	5d                   	pop    %ebp
8100798d:	c3                   	ret    

8100798e <setlocale>:
8100798e:	55                   	push   %ebp
8100798f:	89 e5                	mov    %esp,%ebp
81007991:	83 ec 08             	sub    $0x8,%esp
81007994:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81007999:	83 ec 04             	sub    $0x4,%esp
8100799c:	ff 75 0c             	push   0xc(%ebp)
8100799f:	ff 75 08             	push   0x8(%ebp)
810079a2:	50                   	push   %eax
810079a3:	e8 73 ff ff ff       	call   8100791b <_setlocale_r>
810079a8:	83 c4 10             	add    $0x10,%esp
810079ab:	c9                   	leave  
810079ac:	c3                   	ret    

810079ad <_lseek_r>:
810079ad:	55                   	push   %ebp
810079ae:	89 e5                	mov    %esp,%ebp
810079b0:	83 ec 18             	sub    $0x18,%esp
810079b3:	c7 05 2c 9c 00 81 00 	movl   $0x0,0x81009c2c
810079ba:	00 00 00 
810079bd:	83 ec 04             	sub    $0x4,%esp
810079c0:	ff 75 14             	push   0x14(%ebp)
810079c3:	ff 75 10             	push   0x10(%ebp)
810079c6:	ff 75 0c             	push   0xc(%ebp)
810079c9:	e8 86 93 ff ff       	call   81000d54 <lseek>
810079ce:	83 c4 10             	add    $0x10,%esp
810079d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810079d4:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810079d8:	75 14                	jne    810079ee <_lseek_r+0x41>
810079da:	a1 2c 9c 00 81       	mov    0x81009c2c,%eax
810079df:	85 c0                	test   %eax,%eax
810079e1:	74 0b                	je     810079ee <_lseek_r+0x41>
810079e3:	8b 15 2c 9c 00 81    	mov    0x81009c2c,%edx
810079e9:	8b 45 08             	mov    0x8(%ebp),%eax
810079ec:	89 10                	mov    %edx,(%eax)
810079ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810079f1:	c9                   	leave  
810079f2:	c3                   	ret    

810079f3 <__get_global_locale>:
810079f3:	55                   	push   %ebp
810079f4:	89 e5                	mov    %esp,%ebp
810079f6:	b8 20 95 00 81       	mov    $0x81009520,%eax
810079fb:	5d                   	pop    %ebp
810079fc:	c3                   	ret    

810079fd <__get_current_locale>:
810079fd:	55                   	push   %ebp
810079fe:	89 e5                	mov    %esp,%ebp
81007a00:	e8 ee ff ff ff       	call   810079f3 <__get_global_locale>
81007a05:	5d                   	pop    %ebp
81007a06:	c3                   	ret    

81007a07 <_mbtowc_r>:
81007a07:	55                   	push   %ebp
81007a08:	89 e5                	mov    %esp,%ebp
81007a0a:	83 ec 08             	sub    $0x8,%esp
81007a0d:	e8 eb ff ff ff       	call   810079fd <__get_current_locale>
81007a12:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81007a18:	83 ec 0c             	sub    $0xc,%esp
81007a1b:	ff 75 18             	push   0x18(%ebp)
81007a1e:	ff 75 14             	push   0x14(%ebp)
81007a21:	ff 75 10             	push   0x10(%ebp)
81007a24:	ff 75 0c             	push   0xc(%ebp)
81007a27:	ff 75 08             	push   0x8(%ebp)
81007a2a:	ff d0                	call   *%eax
81007a2c:	83 c4 20             	add    $0x20,%esp
81007a2f:	c9                   	leave  
81007a30:	c3                   	ret    

81007a31 <__ascii_mbtowc>:
81007a31:	55                   	push   %ebp
81007a32:	89 e5                	mov    %esp,%ebp
81007a34:	83 ec 10             	sub    $0x10,%esp
81007a37:	8b 45 10             	mov    0x10(%ebp),%eax
81007a3a:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007a3d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007a41:	75 06                	jne    81007a49 <__ascii_mbtowc+0x18>
81007a43:	8d 45 f8             	lea    -0x8(%ebp),%eax
81007a46:	89 45 0c             	mov    %eax,0xc(%ebp)
81007a49:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007a4d:	75 07                	jne    81007a56 <__ascii_mbtowc+0x25>
81007a4f:	b8 00 00 00 00       	mov    $0x0,%eax
81007a54:	eb 31                	jmp    81007a87 <__ascii_mbtowc+0x56>
81007a56:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81007a5a:	75 07                	jne    81007a63 <__ascii_mbtowc+0x32>
81007a5c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81007a61:	eb 24                	jmp    81007a87 <__ascii_mbtowc+0x56>
81007a63:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a66:	0f b6 00             	movzbl (%eax),%eax
81007a69:	0f b6 d0             	movzbl %al,%edx
81007a6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a6f:	89 10                	mov    %edx,(%eax)
81007a71:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a74:	0f b6 00             	movzbl (%eax),%eax
81007a77:	84 c0                	test   %al,%al
81007a79:	75 07                	jne    81007a82 <__ascii_mbtowc+0x51>
81007a7b:	b8 00 00 00 00       	mov    $0x0,%eax
81007a80:	eb 05                	jmp    81007a87 <__ascii_mbtowc+0x56>
81007a82:	b8 01 00 00 00       	mov    $0x1,%eax
81007a87:	c9                   	leave  
81007a88:	c3                   	ret    

81007a89 <__ssputs_r>:
81007a89:	55                   	push   %ebp
81007a8a:	89 e5                	mov    %esp,%ebp
81007a8c:	53                   	push   %ebx
81007a8d:	83 ec 14             	sub    $0x14,%esp
81007a90:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a93:	8b 58 08             	mov    0x8(%eax),%ebx
81007a96:	89 d8                	mov    %ebx,%eax
81007a98:	39 45 14             	cmp    %eax,0x14(%ebp)
81007a9b:	0f 82 3c 01 00 00    	jb     81007bdd <__ssputs_r+0x154>
81007aa1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007aa4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007aa8:	98                   	cwtl   
81007aa9:	25 80 04 00 00       	and    $0x480,%eax
81007aae:	85 c0                	test   %eax,%eax
81007ab0:	0f 84 27 01 00 00    	je     81007bdd <__ssputs_r+0x154>
81007ab6:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ab9:	8b 10                	mov    (%eax),%edx
81007abb:	8b 45 0c             	mov    0xc(%ebp),%eax
81007abe:	8b 48 10             	mov    0x10(%eax),%ecx
81007ac1:	89 d0                	mov    %edx,%eax
81007ac3:	29 c8                	sub    %ecx,%eax
81007ac5:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007ac8:	8b 45 0c             	mov    0xc(%ebp),%eax
81007acb:	8b 50 14             	mov    0x14(%eax),%edx
81007ace:	89 d0                	mov    %edx,%eax
81007ad0:	01 c0                	add    %eax,%eax
81007ad2:	01 d0                	add    %edx,%eax
81007ad4:	89 c2                	mov    %eax,%edx
81007ad6:	c1 ea 1f             	shr    $0x1f,%edx
81007ad9:	01 d0                	add    %edx,%eax
81007adb:	d1 f8                	sar    %eax
81007add:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007ae0:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007ae3:	8b 45 14             	mov    0x14(%ebp),%eax
81007ae6:	01 d0                	add    %edx,%eax
81007ae8:	8d 50 01             	lea    0x1(%eax),%edx
81007aeb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007aee:	39 c2                	cmp    %eax,%edx
81007af0:	76 0e                	jbe    81007b00 <__ssputs_r+0x77>
81007af2:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007af5:	8b 45 14             	mov    0x14(%ebp),%eax
81007af8:	01 d0                	add    %edx,%eax
81007afa:	83 c0 01             	add    $0x1,%eax
81007afd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007b00:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b03:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007b07:	98                   	cwtl   
81007b08:	25 00 04 00 00       	and    $0x400,%eax
81007b0d:	85 c0                	test   %eax,%eax
81007b0f:	74 5a                	je     81007b6b <__ssputs_r+0xe2>
81007b11:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007b14:	83 ec 08             	sub    $0x8,%esp
81007b17:	50                   	push   %eax
81007b18:	ff 75 08             	push   0x8(%ebp)
81007b1b:	e8 a1 c6 ff ff       	call   810041c1 <_malloc_r>
81007b20:	83 c4 10             	add    $0x10,%esp
81007b23:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007b26:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007b2a:	75 0e                	jne    81007b3a <__ssputs_r+0xb1>
81007b2c:	8b 45 08             	mov    0x8(%ebp),%eax
81007b2f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007b35:	e9 e9 00 00 00       	jmp    81007c23 <__ssputs_r+0x19a>
81007b3a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007b3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b40:	8b 40 10             	mov    0x10(%eax),%eax
81007b43:	83 ec 04             	sub    $0x4,%esp
81007b46:	52                   	push   %edx
81007b47:	50                   	push   %eax
81007b48:	ff 75 f4             	push   -0xc(%ebp)
81007b4b:	e8 88 cf ff ff       	call   81004ad8 <memcpy>
81007b50:	83 c4 10             	add    $0x10,%esp
81007b53:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b56:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007b5a:	66 25 7f fb          	and    $0xfb7f,%ax
81007b5e:	0c 80                	or     $0x80,%al
81007b60:	89 c2                	mov    %eax,%edx
81007b62:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b65:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007b69:	eb 42                	jmp    81007bad <__ssputs_r+0x124>
81007b6b:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007b6e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b71:	8b 40 10             	mov    0x10(%eax),%eax
81007b74:	83 ec 04             	sub    $0x4,%esp
81007b77:	52                   	push   %edx
81007b78:	50                   	push   %eax
81007b79:	ff 75 08             	push   0x8(%ebp)
81007b7c:	e8 a9 dd ff ff       	call   8100592a <_realloc_r>
81007b81:	83 c4 10             	add    $0x10,%esp
81007b84:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007b87:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007b8b:	75 20                	jne    81007bad <__ssputs_r+0x124>
81007b8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b90:	8b 40 10             	mov    0x10(%eax),%eax
81007b93:	83 ec 08             	sub    $0x8,%esp
81007b96:	50                   	push   %eax
81007b97:	ff 75 08             	push   0x8(%ebp)
81007b9a:	e8 03 a3 ff ff       	call   81001ea2 <_free_r>
81007b9f:	83 c4 10             	add    $0x10,%esp
81007ba2:	8b 45 08             	mov    0x8(%ebp),%eax
81007ba5:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007bab:	eb 76                	jmp    81007c23 <__ssputs_r+0x19a>
81007bad:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bb0:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007bb3:	89 50 10             	mov    %edx,0x10(%eax)
81007bb6:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007bb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007bbc:	01 c2                	add    %eax,%edx
81007bbe:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bc1:	89 10                	mov    %edx,(%eax)
81007bc3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bc6:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007bc9:	89 50 14             	mov    %edx,0x14(%eax)
81007bcc:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007bcf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007bd2:	2b 45 ec             	sub    -0x14(%ebp),%eax
81007bd5:	89 c2                	mov    %eax,%edx
81007bd7:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bda:	89 50 08             	mov    %edx,0x8(%eax)
81007bdd:	89 d8                	mov    %ebx,%eax
81007bdf:	39 45 14             	cmp    %eax,0x14(%ebp)
81007be2:	73 03                	jae    81007be7 <__ssputs_r+0x15e>
81007be4:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007be7:	89 da                	mov    %ebx,%edx
81007be9:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bec:	8b 00                	mov    (%eax),%eax
81007bee:	83 ec 04             	sub    $0x4,%esp
81007bf1:	52                   	push   %edx
81007bf2:	ff 75 10             	push   0x10(%ebp)
81007bf5:	50                   	push   %eax
81007bf6:	e8 25 cf ff ff       	call   81004b20 <memmove>
81007bfb:	83 c4 10             	add    $0x10,%esp
81007bfe:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c01:	8b 40 08             	mov    0x8(%eax),%eax
81007c04:	29 d8                	sub    %ebx,%eax
81007c06:	89 c2                	mov    %eax,%edx
81007c08:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c0b:	89 50 08             	mov    %edx,0x8(%eax)
81007c0e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c11:	8b 00                	mov    (%eax),%eax
81007c13:	89 da                	mov    %ebx,%edx
81007c15:	01 c2                	add    %eax,%edx
81007c17:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c1a:	89 10                	mov    %edx,(%eax)
81007c1c:	b8 00 00 00 00       	mov    $0x0,%eax
81007c21:	eb 18                	jmp    81007c3b <__ssputs_r+0x1b2>
81007c23:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c26:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007c2a:	83 c8 40             	or     $0x40,%eax
81007c2d:	89 c2                	mov    %eax,%edx
81007c2f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c32:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007c36:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007c3b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007c3e:	c9                   	leave  
81007c3f:	c3                   	ret    

81007c40 <__ssprint_r>:
81007c40:	55                   	push   %ebp
81007c41:	89 e5                	mov    %esp,%ebp
81007c43:	57                   	push   %edi
81007c44:	56                   	push   %esi
81007c45:	53                   	push   %ebx
81007c46:	83 ec 2c             	sub    $0x2c,%esp
81007c49:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007c4c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81007c53:	8b 03                	mov    (%ebx),%eax
81007c55:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007c58:	be 00 00 00 00       	mov    $0x0,%esi
81007c5d:	8b 43 08             	mov    0x8(%ebx),%eax
81007c60:	85 c0                	test   %eax,%eax
81007c62:	75 22                	jne    81007c86 <__ssprint_r+0x46>
81007c64:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007c6b:	b8 00 00 00 00       	mov    $0x0,%eax
81007c70:	e9 f5 01 00 00       	jmp    81007e6a <__ssprint_r+0x22a>
81007c75:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007c78:	8b 08                	mov    (%eax),%ecx
81007c7a:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81007c7d:	8b 70 04             	mov    0x4(%eax),%esi
81007c80:	83 c0 08             	add    $0x8,%eax
81007c83:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007c86:	85 f6                	test   %esi,%esi
81007c88:	74 eb                	je     81007c75 <__ssprint_r+0x35>
81007c8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c8d:	8b 78 08             	mov    0x8(%eax),%edi
81007c90:	89 f8                	mov    %edi,%eax
81007c92:	39 c6                	cmp    %eax,%esi
81007c94:	0f 82 38 01 00 00    	jb     81007dd2 <__ssprint_r+0x192>
81007c9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c9d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007ca1:	98                   	cwtl   
81007ca2:	25 80 04 00 00       	and    $0x480,%eax
81007ca7:	85 c0                	test   %eax,%eax
81007ca9:	0f 84 23 01 00 00    	je     81007dd2 <__ssprint_r+0x192>
81007caf:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cb2:	8b 10                	mov    (%eax),%edx
81007cb4:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cb7:	8b 48 10             	mov    0x10(%eax),%ecx
81007cba:	89 d0                	mov    %edx,%eax
81007cbc:	29 c8                	sub    %ecx,%eax
81007cbe:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007cc1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cc4:	8b 50 14             	mov    0x14(%eax),%edx
81007cc7:	89 d0                	mov    %edx,%eax
81007cc9:	01 c0                	add    %eax,%eax
81007ccb:	01 d0                	add    %edx,%eax
81007ccd:	89 c2                	mov    %eax,%edx
81007ccf:	c1 ea 1f             	shr    $0x1f,%edx
81007cd2:	01 d0                	add    %edx,%eax
81007cd4:	d1 f8                	sar    %eax
81007cd6:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007cd9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007cdc:	01 f0                	add    %esi,%eax
81007cde:	8d 50 01             	lea    0x1(%eax),%edx
81007ce1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007ce4:	39 c2                	cmp    %eax,%edx
81007ce6:	76 0b                	jbe    81007cf3 <__ssprint_r+0xb3>
81007ce8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007ceb:	01 f0                	add    %esi,%eax
81007ced:	83 c0 01             	add    $0x1,%eax
81007cf0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007cf3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cf6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007cfa:	98                   	cwtl   
81007cfb:	25 00 04 00 00       	and    $0x400,%eax
81007d00:	85 c0                	test   %eax,%eax
81007d02:	74 5a                	je     81007d5e <__ssprint_r+0x11e>
81007d04:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007d07:	83 ec 08             	sub    $0x8,%esp
81007d0a:	50                   	push   %eax
81007d0b:	ff 75 08             	push   0x8(%ebp)
81007d0e:	e8 ae c4 ff ff       	call   810041c1 <_malloc_r>
81007d13:	83 c4 10             	add    $0x10,%esp
81007d16:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007d19:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007d1d:	75 0e                	jne    81007d2d <__ssprint_r+0xed>
81007d1f:	8b 45 08             	mov    0x8(%ebp),%eax
81007d22:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007d28:	e9 17 01 00 00       	jmp    81007e44 <__ssprint_r+0x204>
81007d2d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d30:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d33:	8b 40 10             	mov    0x10(%eax),%eax
81007d36:	83 ec 04             	sub    $0x4,%esp
81007d39:	52                   	push   %edx
81007d3a:	50                   	push   %eax
81007d3b:	ff 75 e4             	push   -0x1c(%ebp)
81007d3e:	e8 95 cd ff ff       	call   81004ad8 <memcpy>
81007d43:	83 c4 10             	add    $0x10,%esp
81007d46:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d49:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007d4d:	66 25 7f fb          	and    $0xfb7f,%ax
81007d51:	0c 80                	or     $0x80,%al
81007d53:	89 c2                	mov    %eax,%edx
81007d55:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d58:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007d5c:	eb 45                	jmp    81007da3 <__ssprint_r+0x163>
81007d5e:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007d61:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d64:	8b 40 10             	mov    0x10(%eax),%eax
81007d67:	83 ec 04             	sub    $0x4,%esp
81007d6a:	52                   	push   %edx
81007d6b:	50                   	push   %eax
81007d6c:	ff 75 08             	push   0x8(%ebp)
81007d6f:	e8 b6 db ff ff       	call   8100592a <_realloc_r>
81007d74:	83 c4 10             	add    $0x10,%esp
81007d77:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007d7a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007d7e:	75 23                	jne    81007da3 <__ssprint_r+0x163>
81007d80:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d83:	8b 40 10             	mov    0x10(%eax),%eax
81007d86:	83 ec 08             	sub    $0x8,%esp
81007d89:	50                   	push   %eax
81007d8a:	ff 75 08             	push   0x8(%ebp)
81007d8d:	e8 10 a1 ff ff       	call   81001ea2 <_free_r>
81007d92:	83 c4 10             	add    $0x10,%esp
81007d95:	8b 45 08             	mov    0x8(%ebp),%eax
81007d98:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007d9e:	e9 a1 00 00 00       	jmp    81007e44 <__ssprint_r+0x204>
81007da3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007da6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007da9:	89 50 10             	mov    %edx,0x10(%eax)
81007dac:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007daf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007db2:	01 c2                	add    %eax,%edx
81007db4:	8b 45 0c             	mov    0xc(%ebp),%eax
81007db7:	89 10                	mov    %edx,(%eax)
81007db9:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dbc:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007dbf:	89 50 14             	mov    %edx,0x14(%eax)
81007dc2:	89 f7                	mov    %esi,%edi
81007dc4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007dc7:	2b 45 dc             	sub    -0x24(%ebp),%eax
81007dca:	89 c2                	mov    %eax,%edx
81007dcc:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dcf:	89 50 08             	mov    %edx,0x8(%eax)
81007dd2:	89 f8                	mov    %edi,%eax
81007dd4:	39 c6                	cmp    %eax,%esi
81007dd6:	73 02                	jae    81007dda <__ssprint_r+0x19a>
81007dd8:	89 f7                	mov    %esi,%edi
81007dda:	89 fa                	mov    %edi,%edx
81007ddc:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ddf:	8b 00                	mov    (%eax),%eax
81007de1:	83 ec 04             	sub    $0x4,%esp
81007de4:	52                   	push   %edx
81007de5:	ff 75 d4             	push   -0x2c(%ebp)
81007de8:	50                   	push   %eax
81007de9:	e8 32 cd ff ff       	call   81004b20 <memmove>
81007dee:	83 c4 10             	add    $0x10,%esp
81007df1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007df4:	8b 40 08             	mov    0x8(%eax),%eax
81007df7:	29 f8                	sub    %edi,%eax
81007df9:	89 c2                	mov    %eax,%edx
81007dfb:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dfe:	89 50 08             	mov    %edx,0x8(%eax)
81007e01:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e04:	8b 00                	mov    (%eax),%eax
81007e06:	89 fa                	mov    %edi,%edx
81007e08:	01 c2                	add    %eax,%edx
81007e0a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e0d:	89 10                	mov    %edx,(%eax)
81007e0f:	89 f7                	mov    %esi,%edi
81007e11:	89 f8                	mov    %edi,%eax
81007e13:	01 45 d4             	add    %eax,-0x2c(%ebp)
81007e16:	89 f8                	mov    %edi,%eax
81007e18:	29 c6                	sub    %eax,%esi
81007e1a:	8b 43 08             	mov    0x8(%ebx),%eax
81007e1d:	89 fa                	mov    %edi,%edx
81007e1f:	29 d0                	sub    %edx,%eax
81007e21:	89 43 08             	mov    %eax,0x8(%ebx)
81007e24:	8b 43 08             	mov    0x8(%ebx),%eax
81007e27:	85 c0                	test   %eax,%eax
81007e29:	0f 85 57 fe ff ff    	jne    81007c86 <__ssprint_r+0x46>
81007e2f:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007e36:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007e3d:	b8 00 00 00 00       	mov    $0x0,%eax
81007e42:	eb 26                	jmp    81007e6a <__ssprint_r+0x22a>
81007e44:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e47:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007e4b:	83 c8 40             	or     $0x40,%eax
81007e4e:	89 c2                	mov    %eax,%edx
81007e50:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e53:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007e57:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007e5e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007e65:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007e6a:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007e6d:	5b                   	pop    %ebx
81007e6e:	5e                   	pop    %esi
81007e6f:	5f                   	pop    %edi
81007e70:	5d                   	pop    %ebp
81007e71:	c3                   	ret    

81007e72 <_svfiprintf_r>:
81007e72:	55                   	push   %ebp
81007e73:	89 e5                	mov    %esp,%ebp
81007e75:	57                   	push   %edi
81007e76:	56                   	push   %esi
81007e77:	53                   	push   %ebx
81007e78:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81007e7e:	c7 45 e4 89 7a 00 81 	movl   $0x81007a89,-0x1c(%ebp)
81007e85:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e88:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007e8c:	98                   	cwtl   
81007e8d:	25 80 00 00 00       	and    $0x80,%eax
81007e92:	85 c0                	test   %eax,%eax
81007e94:	74 50                	je     81007ee6 <_svfiprintf_r+0x74>
81007e96:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e99:	8b 40 10             	mov    0x10(%eax),%eax
81007e9c:	85 c0                	test   %eax,%eax
81007e9e:	75 46                	jne    81007ee6 <_svfiprintf_r+0x74>
81007ea0:	83 ec 08             	sub    $0x8,%esp
81007ea3:	6a 40                	push   $0x40
81007ea5:	ff 75 08             	push   0x8(%ebp)
81007ea8:	e8 14 c3 ff ff       	call   810041c1 <_malloc_r>
81007ead:	83 c4 10             	add    $0x10,%esp
81007eb0:	8b 55 0c             	mov    0xc(%ebp),%edx
81007eb3:	89 02                	mov    %eax,(%edx)
81007eb5:	8b 45 0c             	mov    0xc(%ebp),%eax
81007eb8:	8b 10                	mov    (%eax),%edx
81007eba:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ebd:	89 50 10             	mov    %edx,0x10(%eax)
81007ec0:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ec3:	8b 00                	mov    (%eax),%eax
81007ec5:	85 c0                	test   %eax,%eax
81007ec7:	75 13                	jne    81007edc <_svfiprintf_r+0x6a>
81007ec9:	8b 45 08             	mov    0x8(%ebp),%eax
81007ecc:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007ed2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007ed7:	e9 c8 02 00 00       	jmp    810081a4 <_svfiprintf_r+0x332>
81007edc:	8b 45 0c             	mov    0xc(%ebp),%eax
81007edf:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
81007ee6:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007ee9:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81007ef0:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81007ef4:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
81007ef8:	8b 45 14             	mov    0x14(%ebp),%eax
81007efb:	89 45 80             	mov    %eax,-0x80(%ebp)
81007efe:	89 de                	mov    %ebx,%esi
81007f00:	eb 03                	jmp    81007f05 <_svfiprintf_r+0x93>
81007f02:	83 c3 01             	add    $0x1,%ebx
81007f05:	0f b6 03             	movzbl (%ebx),%eax
81007f08:	84 c0                	test   %al,%al
81007f0a:	74 07                	je     81007f13 <_svfiprintf_r+0xa1>
81007f0c:	0f b6 03             	movzbl (%ebx),%eax
81007f0f:	3c 25                	cmp    $0x25,%al
81007f11:	75 ef                	jne    81007f02 <_svfiprintf_r+0x90>
81007f13:	89 d8                	mov    %ebx,%eax
81007f15:	29 f0                	sub    %esi,%eax
81007f17:	85 c0                	test   %eax,%eax
81007f19:	74 2b                	je     81007f46 <_svfiprintf_r+0xd4>
81007f1b:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81007f21:	50                   	push   %eax
81007f22:	56                   	push   %esi
81007f23:	ff 75 0c             	push   0xc(%ebp)
81007f26:	ff 75 08             	push   0x8(%ebp)
81007f29:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007f2c:	ff d0                	call   *%eax
81007f2e:	83 c4 10             	add    $0x10,%esp
81007f31:	83 f8 ff             	cmp    $0xffffffff,%eax
81007f34:	0f 84 4a 02 00 00    	je     81008184 <_svfiprintf_r+0x312>
81007f3a:	8b 45 98             	mov    -0x68(%ebp),%eax
81007f3d:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81007f43:	89 45 98             	mov    %eax,-0x68(%ebp)
81007f46:	0f b6 03             	movzbl (%ebx),%eax
81007f49:	84 c0                	test   %al,%al
81007f4b:	0f 84 36 02 00 00    	je     81008187 <_svfiprintf_r+0x315>
81007f51:	83 c3 01             	add    $0x1,%ebx
81007f54:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81007f5b:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
81007f62:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81007f69:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81007f70:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
81007f74:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81007f7b:	c7 45 e0 8c 8c 00 81 	movl   $0x81008c8c,-0x20(%ebp)
81007f82:	eb 1b                	jmp    81007f9f <_svfiprintf_r+0x12d>
81007f84:	8b 55 84             	mov    -0x7c(%ebp),%edx
81007f87:	89 f0                	mov    %esi,%eax
81007f89:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007f8c:	be 01 00 00 00       	mov    $0x1,%esi
81007f91:	89 c1                	mov    %eax,%ecx
81007f93:	d3 e6                	shl    %cl,%esi
81007f95:	89 f0                	mov    %esi,%eax
81007f97:	09 d0                	or     %edx,%eax
81007f99:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007f9c:	83 c3 01             	add    $0x1,%ebx
81007f9f:	0f b6 03             	movzbl (%ebx),%eax
81007fa2:	0f be c0             	movsbl %al,%eax
81007fa5:	83 ec 04             	sub    $0x4,%esp
81007fa8:	6a 05                	push   $0x5
81007faa:	50                   	push   %eax
81007fab:	ff 75 e0             	push   -0x20(%ebp)
81007fae:	e8 3d ca ff ff       	call   810049f0 <memchr>
81007fb3:	83 c4 10             	add    $0x10,%esp
81007fb6:	89 c6                	mov    %eax,%esi
81007fb8:	85 f6                	test   %esi,%esi
81007fba:	75 c8                	jne    81007f84 <_svfiprintf_r+0x112>
81007fbc:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007fbf:	83 e0 10             	and    $0x10,%eax
81007fc2:	85 c0                	test   %eax,%eax
81007fc4:	74 04                	je     81007fca <_svfiprintf_r+0x158>
81007fc6:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
81007fca:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007fcd:	83 e0 08             	and    $0x8,%eax
81007fd0:	85 c0                	test   %eax,%eax
81007fd2:	74 04                	je     81007fd8 <_svfiprintf_r+0x166>
81007fd4:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
81007fd8:	0f b6 03             	movzbl (%ebx),%eax
81007fdb:	3c 2a                	cmp    $0x2a,%al
81007fdd:	75 4a                	jne    81008029 <_svfiprintf_r+0x1b7>
81007fdf:	8b 45 80             	mov    -0x80(%ebp),%eax
81007fe2:	8d 50 04             	lea    0x4(%eax),%edx
81007fe5:	89 55 80             	mov    %edx,-0x80(%ebp)
81007fe8:	8b 00                	mov    (%eax),%eax
81007fea:	89 45 90             	mov    %eax,-0x70(%ebp)
81007fed:	8b 45 90             	mov    -0x70(%ebp),%eax
81007ff0:	85 c0                	test   %eax,%eax
81007ff2:	79 11                	jns    81008005 <_svfiprintf_r+0x193>
81007ff4:	8b 45 90             	mov    -0x70(%ebp),%eax
81007ff7:	f7 d8                	neg    %eax
81007ff9:	89 45 90             	mov    %eax,-0x70(%ebp)
81007ffc:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007fff:	83 c8 02             	or     $0x2,%eax
81008002:	89 45 84             	mov    %eax,-0x7c(%ebp)
81008005:	83 c3 01             	add    $0x1,%ebx
81008008:	eb 2d                	jmp    81008037 <_svfiprintf_r+0x1c5>
8100800a:	8b 55 90             	mov    -0x70(%ebp),%edx
8100800d:	89 d0                	mov    %edx,%eax
8100800f:	c1 e0 02             	shl    $0x2,%eax
81008012:	01 d0                	add    %edx,%eax
81008014:	01 c0                	add    %eax,%eax
81008016:	89 c2                	mov    %eax,%edx
81008018:	0f b6 03             	movzbl (%ebx),%eax
8100801b:	0f be c0             	movsbl %al,%eax
8100801e:	83 e8 30             	sub    $0x30,%eax
81008021:	01 d0                	add    %edx,%eax
81008023:	89 45 90             	mov    %eax,-0x70(%ebp)
81008026:	83 c3 01             	add    $0x1,%ebx
81008029:	0f b6 03             	movzbl (%ebx),%eax
8100802c:	0f be c0             	movsbl %al,%eax
8100802f:	83 e8 30             	sub    $0x30,%eax
81008032:	83 f8 09             	cmp    $0x9,%eax
81008035:	76 d3                	jbe    8100800a <_svfiprintf_r+0x198>
81008037:	0f b6 03             	movzbl (%ebx),%eax
8100803a:	3c 2e                	cmp    $0x2e,%al
8100803c:	75 61                	jne    8100809f <_svfiprintf_r+0x22d>
8100803e:	83 c3 01             	add    $0x1,%ebx
81008041:	0f b6 03             	movzbl (%ebx),%eax
81008044:	3c 2a                	cmp    $0x2a,%al
81008046:	75 21                	jne    81008069 <_svfiprintf_r+0x1f7>
81008048:	83 c3 01             	add    $0x1,%ebx
8100804b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100804e:	8d 50 04             	lea    0x4(%eax),%edx
81008051:	89 55 80             	mov    %edx,-0x80(%ebp)
81008054:	8b 00                	mov    (%eax),%eax
81008056:	89 45 88             	mov    %eax,-0x78(%ebp)
81008059:	8b 45 88             	mov    -0x78(%ebp),%eax
8100805c:	85 c0                	test   %eax,%eax
8100805e:	79 3f                	jns    8100809f <_svfiprintf_r+0x22d>
81008060:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81008067:	eb 36                	jmp    8100809f <_svfiprintf_r+0x22d>
81008069:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81008070:	eb 1f                	jmp    81008091 <_svfiprintf_r+0x21f>
81008072:	8b 55 88             	mov    -0x78(%ebp),%edx
81008075:	89 d0                	mov    %edx,%eax
81008077:	c1 e0 02             	shl    $0x2,%eax
8100807a:	01 d0                	add    %edx,%eax
8100807c:	01 c0                	add    %eax,%eax
8100807e:	89 c2                	mov    %eax,%edx
81008080:	0f b6 03             	movzbl (%ebx),%eax
81008083:	0f be c0             	movsbl %al,%eax
81008086:	83 e8 30             	sub    $0x30,%eax
81008089:	01 d0                	add    %edx,%eax
8100808b:	89 45 88             	mov    %eax,-0x78(%ebp)
8100808e:	83 c3 01             	add    $0x1,%ebx
81008091:	0f b6 03             	movzbl (%ebx),%eax
81008094:	0f be c0             	movsbl %al,%eax
81008097:	83 e8 30             	sub    $0x30,%eax
8100809a:	83 f8 09             	cmp    $0x9,%eax
8100809d:	76 d3                	jbe    81008072 <_svfiprintf_r+0x200>
8100809f:	c7 45 e0 92 8c 00 81 	movl   $0x81008c92,-0x20(%ebp)
810080a6:	0f b6 03             	movzbl (%ebx),%eax
810080a9:	0f be c0             	movsbl %al,%eax
810080ac:	83 ec 04             	sub    $0x4,%esp
810080af:	6a 03                	push   $0x3
810080b1:	50                   	push   %eax
810080b2:	ff 75 e0             	push   -0x20(%ebp)
810080b5:	e8 36 c9 ff ff       	call   810049f0 <memchr>
810080ba:	83 c4 10             	add    $0x10,%esp
810080bd:	89 c6                	mov    %eax,%esi
810080bf:	85 f6                	test   %esi,%esi
810080c1:	74 1b                	je     810080de <_svfiprintf_r+0x26c>
810080c3:	8b 55 84             	mov    -0x7c(%ebp),%edx
810080c6:	89 f0                	mov    %esi,%eax
810080c8:	2b 45 e0             	sub    -0x20(%ebp),%eax
810080cb:	be 40 00 00 00       	mov    $0x40,%esi
810080d0:	89 c1                	mov    %eax,%ecx
810080d2:	d3 e6                	shl    %cl,%esi
810080d4:	89 f0                	mov    %esi,%eax
810080d6:	09 d0                	or     %edx,%eax
810080d8:	89 45 84             	mov    %eax,-0x7c(%ebp)
810080db:	83 c3 01             	add    $0x1,%ebx
810080de:	89 d8                	mov    %ebx,%eax
810080e0:	8d 58 01             	lea    0x1(%eax),%ebx
810080e3:	0f b6 00             	movzbl (%eax),%eax
810080e6:	88 45 9c             	mov    %al,-0x64(%ebp)
810080e9:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
810080ed:	0f be c0             	movsbl %al,%eax
810080f0:	83 ec 04             	sub    $0x4,%esp
810080f3:	6a 06                	push   $0x6
810080f5:	50                   	push   %eax
810080f6:	68 96 8c 00 81       	push   $0x81008c96
810080fb:	e8 f0 c8 ff ff       	call   810049f0 <memchr>
81008100:	83 c4 10             	add    $0x10,%esp
81008103:	89 c6                	mov    %eax,%esi
81008105:	85 f6                	test   %esi,%esi
81008107:	74 4b                	je     81008154 <_svfiprintf_r+0x2e2>
81008109:	b8 00 00 00 00       	mov    $0x0,%eax
8100810e:	85 c0                	test   %eax,%eax
81008110:	75 22                	jne    81008134 <_svfiprintf_r+0x2c2>
81008112:	8b 45 84             	mov    -0x7c(%ebp),%eax
81008115:	25 00 01 00 00       	and    $0x100,%eax
8100811a:	85 c0                	test   %eax,%eax
8100811c:	74 0b                	je     81008129 <_svfiprintf_r+0x2b7>
8100811e:	8b 45 80             	mov    -0x80(%ebp),%eax
81008121:	83 c0 0c             	add    $0xc,%eax
81008124:	89 45 80             	mov    %eax,-0x80(%ebp)
81008127:	eb 49                	jmp    81008172 <_svfiprintf_r+0x300>
81008129:	8b 45 80             	mov    -0x80(%ebp),%eax
8100812c:	83 c0 08             	add    $0x8,%eax
8100812f:	89 45 80             	mov    %eax,-0x80(%ebp)
81008132:	eb 3e                	jmp    81008172 <_svfiprintf_r+0x300>
81008134:	83 ec 0c             	sub    $0xc,%esp
81008137:	8d 45 80             	lea    -0x80(%ebp),%eax
8100813a:	50                   	push   %eax
8100813b:	ff 75 e4             	push   -0x1c(%ebp)
8100813e:	ff 75 0c             	push   0xc(%ebp)
81008141:	8d 45 84             	lea    -0x7c(%ebp),%eax
81008144:	50                   	push   %eax
81008145:	ff 75 08             	push   0x8(%ebp)
81008148:	e8 b3 7e ff 7e       	call   0 <show_promot-0x81000000>
8100814d:	83 c4 20             	add    $0x20,%esp
81008150:	89 c7                	mov    %eax,%edi
81008152:	eb 1e                	jmp    81008172 <_svfiprintf_r+0x300>
81008154:	83 ec 0c             	sub    $0xc,%esp
81008157:	8d 45 80             	lea    -0x80(%ebp),%eax
8100815a:	50                   	push   %eax
8100815b:	ff 75 e4             	push   -0x1c(%ebp)
8100815e:	ff 75 0c             	push   0xc(%ebp)
81008161:	8d 45 84             	lea    -0x7c(%ebp),%eax
81008164:	50                   	push   %eax
81008165:	ff 75 08             	push   0x8(%ebp)
81008168:	e8 d4 d1 ff ff       	call   81005341 <_printf_i>
8100816d:	83 c4 20             	add    $0x20,%esp
81008170:	89 c7                	mov    %eax,%edi
81008172:	83 ff ff             	cmp    $0xffffffff,%edi
81008175:	74 13                	je     8100818a <_svfiprintf_r+0x318>
81008177:	8b 45 98             	mov    -0x68(%ebp),%eax
8100817a:	01 f8                	add    %edi,%eax
8100817c:	89 45 98             	mov    %eax,-0x68(%ebp)
8100817f:	e9 7a fd ff ff       	jmp    81007efe <_svfiprintf_r+0x8c>
81008184:	90                   	nop
81008185:	eb 04                	jmp    8100818b <_svfiprintf_r+0x319>
81008187:	90                   	nop
81008188:	eb 01                	jmp    8100818b <_svfiprintf_r+0x319>
8100818a:	90                   	nop
8100818b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100818e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81008192:	98                   	cwtl   
81008193:	83 e0 40             	and    $0x40,%eax
81008196:	85 c0                	test   %eax,%eax
81008198:	75 05                	jne    8100819f <_svfiprintf_r+0x32d>
8100819a:	8b 45 98             	mov    -0x68(%ebp),%eax
8100819d:	eb 05                	jmp    810081a4 <_svfiprintf_r+0x332>
8100819f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810081a4:	8d 65 f4             	lea    -0xc(%ebp),%esp
810081a7:	5b                   	pop    %ebx
810081a8:	5e                   	pop    %esi
810081a9:	5f                   	pop    %edi
810081aa:	5d                   	pop    %ebp
810081ab:	c3                   	ret    

810081ac <__sputc_r>:
810081ac:	55                   	push   %ebp
810081ad:	89 e5                	mov    %esp,%ebp
810081af:	83 ec 08             	sub    $0x8,%esp
810081b2:	8b 45 10             	mov    0x10(%ebp),%eax
810081b5:	8b 40 08             	mov    0x8(%eax),%eax
810081b8:	8d 50 ff             	lea    -0x1(%eax),%edx
810081bb:	8b 45 10             	mov    0x10(%ebp),%eax
810081be:	89 50 08             	mov    %edx,0x8(%eax)
810081c1:	8b 45 10             	mov    0x10(%ebp),%eax
810081c4:	8b 40 08             	mov    0x8(%eax),%eax
810081c7:	85 c0                	test   %eax,%eax
810081c9:	79 17                	jns    810081e2 <__sputc_r+0x36>
810081cb:	8b 45 10             	mov    0x10(%ebp),%eax
810081ce:	8b 50 08             	mov    0x8(%eax),%edx
810081d1:	8b 45 10             	mov    0x10(%ebp),%eax
810081d4:	8b 40 18             	mov    0x18(%eax),%eax
810081d7:	39 c2                	cmp    %eax,%edx
810081d9:	7c 21                	jl     810081fc <__sputc_r+0x50>
810081db:	8b 45 0c             	mov    0xc(%ebp),%eax
810081de:	3c 0a                	cmp    $0xa,%al
810081e0:	74 1a                	je     810081fc <__sputc_r+0x50>
810081e2:	8b 45 10             	mov    0x10(%ebp),%eax
810081e5:	8b 00                	mov    (%eax),%eax
810081e7:	8d 48 01             	lea    0x1(%eax),%ecx
810081ea:	8b 55 10             	mov    0x10(%ebp),%edx
810081ed:	89 0a                	mov    %ecx,(%edx)
810081ef:	8b 55 0c             	mov    0xc(%ebp),%edx
810081f2:	88 10                	mov    %dl,(%eax)
810081f4:	0f b6 00             	movzbl (%eax),%eax
810081f7:	0f b6 c0             	movzbl %al,%eax
810081fa:	eb 14                	jmp    81008210 <__sputc_r+0x64>
810081fc:	83 ec 04             	sub    $0x4,%esp
810081ff:	ff 75 10             	push   0x10(%ebp)
81008202:	ff 75 0c             	push   0xc(%ebp)
81008205:	ff 75 08             	push   0x8(%ebp)
81008208:	e8 3a ee ff ff       	call   81007047 <__swbuf_r>
8100820d:	83 c4 10             	add    $0x10,%esp
81008210:	c9                   	leave  
81008211:	c3                   	ret    

81008212 <_putc_r>:
81008212:	55                   	push   %ebp
81008213:	89 e5                	mov    %esp,%ebp
81008215:	53                   	push   %ebx
81008216:	83 ec 14             	sub    $0x14,%esp
81008219:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100821c:	8b 45 08             	mov    0x8(%ebp),%eax
8100821f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008222:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81008226:	74 18                	je     81008240 <_putc_r+0x2e>
81008228:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100822b:	8b 40 38             	mov    0x38(%eax),%eax
8100822e:	85 c0                	test   %eax,%eax
81008230:	75 0e                	jne    81008240 <_putc_r+0x2e>
81008232:	83 ec 0c             	sub    $0xc,%esp
81008235:	ff 75 f4             	push   -0xc(%ebp)
81008238:	e8 b0 96 ff ff       	call   810018ed <__sinit>
8100823d:	83 c4 10             	add    $0x10,%esp
81008240:	83 ec 04             	sub    $0x4,%esp
81008243:	53                   	push   %ebx
81008244:	ff 75 0c             	push   0xc(%ebp)
81008247:	ff 75 08             	push   0x8(%ebp)
8100824a:	e8 5d ff ff ff       	call   810081ac <__sputc_r>
8100824f:	83 c4 10             	add    $0x10,%esp
81008252:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008255:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008258:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100825b:	c9                   	leave  
8100825c:	c3                   	ret    

8100825d <putc>:
8100825d:	55                   	push   %ebp
8100825e:	89 e5                	mov    %esp,%ebp
81008260:	53                   	push   %ebx
81008261:	83 ec 14             	sub    $0x14,%esp
81008264:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81008267:	a1 e4 90 00 81       	mov    0x810090e4,%eax
8100826c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100826f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008272:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008275:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81008279:	74 18                	je     81008293 <putc+0x36>
8100827b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100827e:	8b 40 38             	mov    0x38(%eax),%eax
81008281:	85 c0                	test   %eax,%eax
81008283:	75 0e                	jne    81008293 <putc+0x36>
81008285:	83 ec 0c             	sub    $0xc,%esp
81008288:	ff 75 f0             	push   -0x10(%ebp)
8100828b:	e8 5d 96 ff ff       	call   810018ed <__sinit>
81008290:	83 c4 10             	add    $0x10,%esp
81008293:	83 ec 04             	sub    $0x4,%esp
81008296:	53                   	push   %ebx
81008297:	ff 75 08             	push   0x8(%ebp)
8100829a:	ff 75 f4             	push   -0xc(%ebp)
8100829d:	e8 0a ff ff ff       	call   810081ac <__sputc_r>
810082a2:	83 c4 10             	add    $0x10,%esp
810082a5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810082a8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810082ab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810082ae:	c9                   	leave  
810082af:	c3                   	ret    

810082b0 <_read_r>:
810082b0:	55                   	push   %ebp
810082b1:	89 e5                	mov    %esp,%ebp
810082b3:	83 ec 18             	sub    $0x18,%esp
810082b6:	c7 05 2c 9c 00 81 00 	movl   $0x0,0x81009c2c
810082bd:	00 00 00 
810082c0:	83 ec 04             	sub    $0x4,%esp
810082c3:	ff 75 14             	push   0x14(%ebp)
810082c6:	ff 75 10             	push   0x10(%ebp)
810082c9:	ff 75 0c             	push   0xc(%ebp)
810082cc:	e8 08 8a ff ff       	call   81000cd9 <read>
810082d1:	83 c4 10             	add    $0x10,%esp
810082d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810082d7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810082db:	75 14                	jne    810082f1 <_read_r+0x41>
810082dd:	a1 2c 9c 00 81       	mov    0x81009c2c,%eax
810082e2:	85 c0                	test   %eax,%eax
810082e4:	74 0b                	je     810082f1 <_read_r+0x41>
810082e6:	8b 15 2c 9c 00 81    	mov    0x81009c2c,%edx
810082ec:	8b 45 08             	mov    0x8(%ebp),%eax
810082ef:	89 10                	mov    %edx,(%eax)
810082f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810082f4:	c9                   	leave  
810082f5:	c3                   	ret    

810082f6 <strncmp>:
810082f6:	55                   	push   %ebp
810082f7:	89 e5                	mov    %esp,%ebp
810082f9:	83 ec 10             	sub    $0x10,%esp
810082fc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008300:	75 0a                	jne    8100830c <strncmp+0x16>
81008302:	b8 00 00 00 00       	mov    $0x0,%eax
81008307:	e9 cb 00 00 00       	jmp    810083d7 <strncmp+0xe1>
8100830c:	8b 55 08             	mov    0x8(%ebp),%edx
8100830f:	8b 45 0c             	mov    0xc(%ebp),%eax
81008312:	09 d0                	or     %edx,%eax
81008314:	83 e0 03             	and    $0x3,%eax
81008317:	85 c0                	test   %eax,%eax
81008319:	0f 85 85 00 00 00    	jne    810083a4 <strncmp+0xae>
8100831f:	8b 45 08             	mov    0x8(%ebp),%eax
81008322:	89 45 fc             	mov    %eax,-0x4(%ebp)
81008325:	8b 45 0c             	mov    0xc(%ebp),%eax
81008328:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100832b:	eb 36                	jmp    81008363 <strncmp+0x6d>
8100832d:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81008331:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008335:	74 1d                	je     81008354 <strncmp+0x5e>
81008337:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100833a:	8b 00                	mov    (%eax),%eax
8100833c:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81008342:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008345:	8b 00                	mov    (%eax),%eax
81008347:	f7 d0                	not    %eax
81008349:	21 d0                	and    %edx,%eax
8100834b:	25 80 80 80 80       	and    $0x80808080,%eax
81008350:	85 c0                	test   %eax,%eax
81008352:	74 07                	je     8100835b <strncmp+0x65>
81008354:	b8 00 00 00 00       	mov    $0x0,%eax
81008359:	eb 7c                	jmp    810083d7 <strncmp+0xe1>
8100835b:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100835f:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81008363:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81008367:	76 0e                	jbe    81008377 <strncmp+0x81>
81008369:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100836c:	8b 10                	mov    (%eax),%edx
8100836e:	8b 45 f8             	mov    -0x8(%ebp),%eax
81008371:	8b 00                	mov    (%eax),%eax
81008373:	39 c2                	cmp    %eax,%edx
81008375:	74 b6                	je     8100832d <strncmp+0x37>
81008377:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100837a:	89 45 08             	mov    %eax,0x8(%ebp)
8100837d:	8b 45 f8             	mov    -0x8(%ebp),%eax
81008380:	89 45 0c             	mov    %eax,0xc(%ebp)
81008383:	eb 1f                	jmp    810083a4 <strncmp+0xae>
81008385:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008389:	74 0a                	je     81008395 <strncmp+0x9f>
8100838b:	8b 45 08             	mov    0x8(%ebp),%eax
8100838e:	0f b6 00             	movzbl (%eax),%eax
81008391:	84 c0                	test   %al,%al
81008393:	75 07                	jne    8100839c <strncmp+0xa6>
81008395:	b8 00 00 00 00       	mov    $0x0,%eax
8100839a:	eb 3b                	jmp    810083d7 <strncmp+0xe1>
8100839c:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810083a0:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810083a4:	8b 45 10             	mov    0x10(%ebp),%eax
810083a7:	8d 50 ff             	lea    -0x1(%eax),%edx
810083aa:	89 55 10             	mov    %edx,0x10(%ebp)
810083ad:	85 c0                	test   %eax,%eax
810083af:	74 10                	je     810083c1 <strncmp+0xcb>
810083b1:	8b 45 08             	mov    0x8(%ebp),%eax
810083b4:	0f b6 10             	movzbl (%eax),%edx
810083b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810083ba:	0f b6 00             	movzbl (%eax),%eax
810083bd:	38 c2                	cmp    %al,%dl
810083bf:	74 c4                	je     81008385 <strncmp+0x8f>
810083c1:	8b 45 08             	mov    0x8(%ebp),%eax
810083c4:	0f b6 00             	movzbl (%eax),%eax
810083c7:	0f b6 d0             	movzbl %al,%edx
810083ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810083cd:	0f b6 00             	movzbl (%eax),%eax
810083d0:	0f b6 c8             	movzbl %al,%ecx
810083d3:	89 d0                	mov    %edx,%eax
810083d5:	29 c8                	sub    %ecx,%eax
810083d7:	c9                   	leave  
810083d8:	c3                   	ret    

810083d9 <__get_global_locale>:
810083d9:	55                   	push   %ebp
810083da:	89 e5                	mov    %esp,%ebp
810083dc:	b8 20 95 00 81       	mov    $0x81009520,%eax
810083e1:	5d                   	pop    %ebp
810083e2:	c3                   	ret    

810083e3 <__get_current_locale>:
810083e3:	55                   	push   %ebp
810083e4:	89 e5                	mov    %esp,%ebp
810083e6:	e8 ee ff ff ff       	call   810083d9 <__get_global_locale>
810083eb:	5d                   	pop    %ebp
810083ec:	c3                   	ret    

810083ed <_wcrtomb_r>:
810083ed:	55                   	push   %ebp
810083ee:	89 e5                	mov    %esp,%ebp
810083f0:	83 ec 18             	sub    $0x18,%esp
810083f3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810083fa:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810083fe:	75 21                	jne    81008421 <_wcrtomb_r+0x34>
81008400:	e8 de ff ff ff       	call   810083e3 <__get_current_locale>
81008405:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100840b:	ff 75 14             	push   0x14(%ebp)
8100840e:	6a 00                	push   $0x0
81008410:	8d 55 ea             	lea    -0x16(%ebp),%edx
81008413:	52                   	push   %edx
81008414:	ff 75 08             	push   0x8(%ebp)
81008417:	ff d0                	call   *%eax
81008419:	83 c4 10             	add    $0x10,%esp
8100841c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100841f:	eb 1f                	jmp    81008440 <_wcrtomb_r+0x53>
81008421:	e8 bd ff ff ff       	call   810083e3 <__get_current_locale>
81008426:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100842c:	ff 75 14             	push   0x14(%ebp)
8100842f:	ff 75 10             	push   0x10(%ebp)
81008432:	ff 75 0c             	push   0xc(%ebp)
81008435:	ff 75 08             	push   0x8(%ebp)
81008438:	ff d0                	call   *%eax
8100843a:	83 c4 10             	add    $0x10,%esp
8100843d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008440:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008444:	75 19                	jne    8100845f <_wcrtomb_r+0x72>
81008446:	8b 45 14             	mov    0x14(%ebp),%eax
81008449:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100844f:	8b 45 08             	mov    0x8(%ebp),%eax
81008452:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008458:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100845d:	eb 03                	jmp    81008462 <_wcrtomb_r+0x75>
8100845f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008462:	c9                   	leave  
81008463:	c3                   	ret    

81008464 <wcrtomb>:
81008464:	55                   	push   %ebp
81008465:	89 e5                	mov    %esp,%ebp
81008467:	83 ec 28             	sub    $0x28,%esp
8100846a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81008471:	a1 e4 90 00 81       	mov    0x810090e4,%eax
81008476:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008479:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100847d:	75 21                	jne    810084a0 <wcrtomb+0x3c>
8100847f:	e8 5f ff ff ff       	call   810083e3 <__get_current_locale>
81008484:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100848a:	ff 75 10             	push   0x10(%ebp)
8100848d:	6a 00                	push   $0x0
8100848f:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81008492:	52                   	push   %edx
81008493:	ff 75 f0             	push   -0x10(%ebp)
81008496:	ff d0                	call   *%eax
81008498:	83 c4 10             	add    $0x10,%esp
8100849b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100849e:	eb 1f                	jmp    810084bf <wcrtomb+0x5b>
810084a0:	e8 3e ff ff ff       	call   810083e3 <__get_current_locale>
810084a5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810084ab:	ff 75 10             	push   0x10(%ebp)
810084ae:	ff 75 0c             	push   0xc(%ebp)
810084b1:	ff 75 08             	push   0x8(%ebp)
810084b4:	ff 75 f0             	push   -0x10(%ebp)
810084b7:	ff d0                	call   *%eax
810084b9:	83 c4 10             	add    $0x10,%esp
810084bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810084bf:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810084c3:	75 19                	jne    810084de <wcrtomb+0x7a>
810084c5:	8b 45 10             	mov    0x10(%ebp),%eax
810084c8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810084ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
810084d1:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810084d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810084dc:	eb 03                	jmp    810084e1 <wcrtomb+0x7d>
810084de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810084e1:	c9                   	leave  
810084e2:	c3                   	ret    

810084e3 <__get_global_locale>:
810084e3:	55                   	push   %ebp
810084e4:	89 e5                	mov    %esp,%ebp
810084e6:	b8 20 95 00 81       	mov    $0x81009520,%eax
810084eb:	5d                   	pop    %ebp
810084ec:	c3                   	ret    

810084ed <__get_current_locale>:
810084ed:	55                   	push   %ebp
810084ee:	89 e5                	mov    %esp,%ebp
810084f0:	e8 ee ff ff ff       	call   810084e3 <__get_global_locale>
810084f5:	5d                   	pop    %ebp
810084f6:	c3                   	ret    

810084f7 <_wctomb_r>:
810084f7:	55                   	push   %ebp
810084f8:	89 e5                	mov    %esp,%ebp
810084fa:	83 ec 08             	sub    $0x8,%esp
810084fd:	e8 eb ff ff ff       	call   810084ed <__get_current_locale>
81008502:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008508:	ff 75 14             	push   0x14(%ebp)
8100850b:	ff 75 10             	push   0x10(%ebp)
8100850e:	ff 75 0c             	push   0xc(%ebp)
81008511:	ff 75 08             	push   0x8(%ebp)
81008514:	ff d0                	call   *%eax
81008516:	83 c4 10             	add    $0x10,%esp
81008519:	c9                   	leave  
8100851a:	c3                   	ret    

8100851b <__ascii_wctomb>:
8100851b:	55                   	push   %ebp
8100851c:	89 e5                	mov    %esp,%ebp
8100851e:	83 ec 10             	sub    $0x10,%esp
81008521:	8b 45 10             	mov    0x10(%ebp),%eax
81008524:	89 45 fc             	mov    %eax,-0x4(%ebp)
81008527:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100852b:	75 07                	jne    81008534 <__ascii_wctomb+0x19>
8100852d:	b8 00 00 00 00       	mov    $0x0,%eax
81008532:	eb 28                	jmp    8100855c <__ascii_wctomb+0x41>
81008534:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8100853b:	76 10                	jbe    8100854d <__ascii_wctomb+0x32>
8100853d:	8b 45 08             	mov    0x8(%ebp),%eax
81008540:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008546:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100854b:	eb 0f                	jmp    8100855c <__ascii_wctomb+0x41>
8100854d:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008550:	89 c2                	mov    %eax,%edx
81008552:	8b 45 0c             	mov    0xc(%ebp),%eax
81008555:	88 10                	mov    %dl,(%eax)
81008557:	b8 01 00 00 00       	mov    $0x1,%eax
8100855c:	c9                   	leave  
8100855d:	c3                   	ret    

8100855e <__env_lock>:
8100855e:	55                   	push   %ebp
8100855f:	89 e5                	mov    %esp,%ebp
81008561:	90                   	nop
81008562:	5d                   	pop    %ebp
81008563:	c3                   	ret    

81008564 <__env_unlock>:
81008564:	55                   	push   %ebp
81008565:	89 e5                	mov    %esp,%ebp
81008567:	90                   	nop
81008568:	5d                   	pop    %ebp
81008569:	c3                   	ret    
