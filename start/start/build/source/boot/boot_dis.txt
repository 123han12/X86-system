
/home/hsa/X86-system/start/start/build/source/boot/boot.elf:     file format elf32-i386
/home/hsa/X86-system/start/start/build/source/boot/boot.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00007c00

Program Header:
    LOAD off    0x00000000 vaddr 0x00007000 paddr 0x00006000 align 2**12
         filesz 0x000000b4 memsz 0x000000b4 flags r--
    LOAD off    0x00000c00 vaddr 0x00007c00 paddr 0x00007c00 align 2**12
         filesz 0x00000070 memsz 0x00000070 flags r-x
    LOAD off    0x00000dfe vaddr 0x00007dfe paddr 0x00007dfe align 2**12
         filesz 0x00000002 memsz 0x00000002 flags r-x
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000070  00007c00  00007c00  00000c00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 boot_end      00000002  00007dfe  00007dfe  00000dfe  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002b  00000000  00000000  00000e00  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000040  00000000  00000000  00000e30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  4 .debug_info   0000005d  00000000  00000000  00000e70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00000041  00000000  00000000  00000ecd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_line   000000c1  00000000  00000000  00000f0e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_frame  00000034  00000000  00000000  00000fd0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    0000010f  00000000  00000000  00001004  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 0000009c  00000000  00000000  00001113  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 start.S.o
00007c43 l       .text	00000000 read_loader
00007dfe l       boot_end	00000000 boot_sig
00000000 l    df *ABS*	00000000 boot.c
00007c59 g     F .text	00000017 boot_entry
00007c00 g       .text	00000000 _start
00008000 g       .text	00000000 __bss_start
00008000 g       .text	00000000 _edata
00008000 g       .text	00000000 _end



Disassembly of section .text:

00007c00 <_start>:
	.global _start
	.extern boot_entry

_start:

	mov $0 , %ax 
    7c00:	b8 00 00             	mov    $0x0,%ax
	mov %ax , %ds 
    7c03:	8e d8                	mov    %ax,%ds
	mov %ax , %ss 
    7c05:	8e d0                	mov    %ax,%ss
	mov %ax , %es 
    7c07:	8e c0                	mov    %ax,%es
	mov %ax , %fs 
    7c09:	8e e0                	mov    %ax,%fs
	mov %ax , %gs 
    7c0b:	8e e8                	mov    %ax,%gs

	mov $_start , %esp 
    7c0d:	66 bc 00 7c 00 00    	mov    $0x7c00,%esp
	
	mov $0xE , %ah 
    7c13:	b4 0e                	mov    $0xe,%ah
	mov $'m' , %al 
    7c15:	b0 6d                	mov    $0x6d,%al
	int $0x10
    7c17:	cd 10                	int    $0x10


	mov $0xE , %ah 
    7c19:	b4 0e                	mov    $0xe,%ah
	mov $'a' , %al 
    7c1b:	b0 61                	mov    $0x61,%al
	int $0x10
    7c1d:	cd 10                	int    $0x10

	mov $0xE , %ah 
    7c1f:	b4 0e                	mov    $0xe,%ah
	mov $'s' , %al 
    7c21:	b0 73                	mov    $0x73,%al
	int $0x10
    7c23:	cd 10                	int    $0x10

	mov $0xE , %ah 
    7c25:	b4 0e                	mov    $0xe,%ah
	mov $'p' , %al 
    7c27:	b0 70                	mov    $0x70,%al
	int $0x10
    7c29:	cd 10                	int    $0x10

	mov $0xE , %ah 
    7c2b:	b4 0e                	mov    $0xe,%ah
	mov $'l' , %al 
    7c2d:	b0 6c                	mov    $0x6c,%al
	int $0x10
    7c2f:	cd 10                	int    $0x10

	mov $0xE , %ah 
    7c31:	b4 0e                	mov    $0xe,%ah
	mov $'o' , %al 
    7c33:	b0 6f                	mov    $0x6f,%al
	int $0x10
    7c35:	cd 10                	int    $0x10

	mov $0xE , %ah 
    7c37:	b4 0e                	mov    $0xe,%ah
	mov $'v' , %al 
    7c39:	b0 76                	mov    $0x76,%al
	int $0x10
    7c3b:	cd 10                	int    $0x10
	
	mov $0xE , %ah 
    7c3d:	b4 0e                	mov    $0xe,%ah
	mov $'e' , %al 
    7c3f:	b0 65                	mov    $0x65,%al
	int $0x10
    7c41:	cd 10                	int    $0x10

00007c43 <read_loader>:


read_loader:
	mov $0x8000 , %bx
    7c43:	bb 00 80             	mov    $0x8000,%bx
	mov $0x2, %ah 
    7c46:	b4 02                	mov    $0x2,%ah
	mov $0x2 , %cx 
    7c48:	b9 02 00             	mov    $0x2,%cx
	
	mov $64 , %al 
    7c4b:	b0 40                	mov    $0x40,%al
	mov $0x80 , %dx 
    7c4d:	ba 80 00             	mov    $0x80,%dx
	int $0x13 
    7c50:	cd 13                	int    $0x13

	jc read_loader
    7c52:	72 ef                	jb     7c43 <read_loader>


	jmp boot_entry 
    7c54:	e9 02 00             	jmp    7c59 <boot_entry>

 	jmp .
    7c57:	eb fe                	jmp    7c57 <read_loader+0x14>

00007c59 <boot_entry>:

#define LOADER_START_ADDR 0x8000 



void boot_entry(void) {
    7c59:	66 55                	push   %ebp
    7c5b:	66 89 e5             	mov    %esp,%ebp
    7c5e:	66 83 ec 08          	sub    $0x8,%esp
    ( (void (*)(void) ) LOADER_START_ADDR)() ;  
    7c62:	66 b8 00 80 00 00    	mov    $0x8000,%eax
    7c68:	66 ff d0             	call   *%eax

} 
    7c6b:	90                   	nop
    7c6c:	66 c9                	leavel 
    7c6e:	66 c3                	retl   

Disassembly of section boot_end:

00007dfe <boot_sig>:
    7dfe:	55                   	push   %bp
    7dff:	aa                   	stos   %al,%es:(%di)
