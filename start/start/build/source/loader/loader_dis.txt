
/home/hsa/X86-system/start/start/build/source/loader/loader.elf:     file format elf32-i386
/home/hsa/X86-system/start/start/build/source/loader/loader.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00008000

Program Header:
    LOAD off    0x00000000 vaddr 0x00007000 paddr 0x00007000 align 2**12
         filesz 0x00000094 memsz 0x00000094 flags r--
    LOAD off    0x00001000 vaddr 0x00008000 paddr 0x00008000 align 2**12
         filesz 0x0000000a memsz 0x0000000a flags r-x
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000000a  00008000  00008000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      0000002b  00000000  00000000  0000100a  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000040  00000000  00000000  00001038  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  3 .debug_info   0000005d  00000000  00000000  00001078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  4 .debug_abbrev 00000041  00000000  00000000  000010d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_line   00000099  00000000  00000000  00001116  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_frame  0000002c  00000000  00000000  000011b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_str    00000112  00000000  00000000  000011dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line_str 000000e0  00000000  00000000  000012ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 load_32.c
00000000 l    df *ABS*	00000000 loader_16.c
00008003 g     F .text	00000007 loader_entry
00008000 g       .text	00000000 _start
00009000 g       .text	00000000 __bss_start
00009000 g       .text	00000000 _edata
00009000 g       .text	00000000 _end



Disassembly of section .text:

00008000 <_start>:
 	.text
	.global _start
	.extern loader_entry

_start: 
	jmp loader_entry 
    8000:	e9 00 00             	jmp    8003 <loader_entry>

00008003 <loader_entry>:
__asm__(".code16gcc") ; 

void loader_entry(void )
{
    8003:	66 55                	push   %ebp
    8005:	66 89 e5             	mov    %esp,%ebp
    for( ;; ) {} 
    8008:	eb fe                	jmp    8008 <loader_entry+0x5>
